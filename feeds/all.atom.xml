<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>王延炯 · 观世界 | World Insight</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2021-03-11T00:00:00+08:00</updated><entry><title>《富兰克林自传》</title><link href="/articles/book-digests-9787544750691" rel="alternate"></link><published>2021-03-07T00:00:00+08:00</published><updated>2021-03-07T00:00:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2021-03-07:/articles/book-digests-9787544750691</id><summary type="html">&lt;p class="first last"&gt;本杰明·富兰克林 | 译林出版社 | &lt;a class="reference external" href="https://douban.com/isbn/9787544750691"&gt;ISBN&lt;/a&gt;&lt;/p&gt;
</summary><content type="html">
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id11"&gt;译者导言&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span class="p"&gt;2&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;一个学说如果能够解决问题和困难，就是真理，犹如医生能够把病人治好的方子就是良方一样，效用就是检验真理的标准。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;4&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我个人觉得，有的人为了取得成功，可以养成富兰克林的勤奋、节俭、节制、谦卑等美德；有的人当了官，除了作秀，也可以为大众办一些实事，留一些政绩。而富兰克林的许多公益事业都是他身为一介平民的时候提议、奔走、鼓吹、出资兴办的， &lt;span class="hlb"&gt;而且总是小心谨慎不把功劳往自己一个人的账上记&lt;/span&gt; ，这一点对于我们固守"不在其位，不谋其政"的观念的人来说实在可感可叹！&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;按照这种观点，政府是人们之间达成的"社会契约"的产物，按照这个契约，人们把一定的自由交给政府，以保证自己生命、自由和财产的天赋权利，交出自由并不意味着就永远丧失了这些自由，政府如果违反了天赋权力压迫弱者，就应当被推翻。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;6&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;富兰克林的经历肯定比这本薄薄的《自传》里写的丰富得多，我觉得他在材料的取舍上，紧紧把握着这么一条主线，&lt;span class="hlr"&gt;那就是按时代的要求完善自我，造福社会，一切从教育后人着眼。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;7&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;富兰克林的可贵之处就是他敢于亮丑，写年轻时犯的错误，而这些错误在我们中国人看来，是绝对不能曝光的"隐私"。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;人非圣贤，孰能无过，富兰克林把这些人所不知的不光彩的事儿亮出来，目的是要警示后人：&lt;span class="hlb"&gt;他跟自己的一些朋友不同的是，他能知错改错，才有日后的成功。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;上面的几件事，一般人是不肯往自传里写的。但常人认为非写不可的，富兰克林却偏偏不写。如果遇见一个人，第一印象往往是此人的相貌。奇怪的是，我们在《自传》里见到的人，都不知道他或者她长得怎么样，包括他的父母、儿女、妻子等近亲属。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;富兰克林不写外貌，却喜欢写人的声音。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;8&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;富兰克林一生到过的官府私宅不计其数，但他从来没有描写过任何建筑和陈设，倒是对几乎没有陈设的一间屋子有所记述："房间十分干净，没有什么家具，只有一块垫子，一张桌子，上面摆着一个十字架和一本书，有一把让我坐的椅子，壁炉上方是一副画，画的是圣维罗妮卡展现着一块手帕，上面有基督神奇的血面肖像。"为什么要写这种场景呢？富兰克林说，"我将它又作为一个例证， &lt;span class="hlr"&gt;说明维持一个人的生命和健康需要的收入微乎其微。&lt;/span&gt; "&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;9&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果说，人的长相衣着、建筑陈设、海陆风光，只是外在的表面现象，没有必要描述的话，那么人的感情可算最深邃的内在的东西了。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;他的另一门亲事是近邻和老相识的女儿里德小姐，富兰克林说，"我对她满心敬佩，无限爱慕，而且有理由相信，她对我也是这样。"但富兰克林去了英国，写过一封信说一时半会回不来，然后就把他们的"海誓山盟"忘在脑后了。近两年以后回来，里德小姐已经嫁人，但丈夫不知去向，见面后他们有"旧情复萌"，结婚了。富兰克林写道："事实证明她是个贤内助，照看店面，帮了我很多忙，&lt;span class="hlb"&gt;我们齐心协力，事业兴旺，互相努力，让对方幸福。这样我算尽力改正了那个重大的错误。&lt;/span&gt; " 从以上事例不难看出，在对亲情和爱情的处理上，富兰克林不愧是理性时代的代表人物。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id12"&gt;自传&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id13"&gt;第一部&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;6&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;不过，既然再活一遍没有指望，只要退而求其次，最像再活一遍的事情似乎就是对这一生的 &lt;em&gt;反思&lt;/em&gt; 了；&lt;span class="hlb"&gt;要使这种反思尽可能地经久不衰，那就是诉诸笔墨&lt;/span&gt; 。谈起自己，谈起自己当年的壮举，老年人自然喜欢喋喋不休，我也在所难免。有点人处于对于老人的尊敬，觉得只好硬着头皮听一听，但我的絮叨却不会使他们生厌，因为这番话可以读，也可以不读，那全随他们的意愿。最后，（我还是先承认为妙，因为矢口否认也没人会信）也许我会大大地满足自己的 &lt;em&gt;虚荣心&lt;/em&gt; 。 其实，我总是听见或看到 &lt;em&gt;我可以毫不虚夸地说&lt;/em&gt; 之类的开场白，紧接着就是虚头巴脑的东西。&lt;span class="hlr"&gt;人大多不喜欢他人爱慕虚荣，而自己的那颗虚荣心再大也安之若素。&lt;/span&gt; &lt;span class="hlb"&gt;然而我无论在哪里遇到虚荣，总是以礼相待，因为我相信，虚荣对于爱慕者也好，对于他周围的人也好，往往都是有益无害的&lt;/span&gt; ：因此，在很多情况下，如果有人将自己的虚荣心当做是人生慰藉之一而感谢上帝，那也不足为怪。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;13&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我想你也许愿意了解一些我的父亲的体貌和性格特点吧。他体格健美，中等身材，比例匀称，结实有力。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;只要做得到，他总是喜欢邀请某个明达的朋友或邻居来他家吃饭交谈，他总是注意引起某种巧妙或有用的话头，启迪他的孩子们的思想，这么一来，他把我们的注意力引向生活行为中的善良、正义和谨慎之类的表现上，自然就不太留心桌子上的饭菜色香味如何，入时或不如时，合口不合口之类的的问题了；所以我从小到大，对这类事情不管不顾，摆在前面的无论是佳肴还是糟糠，我都无所谓；由于对于这类事情不上心，所以时至今日，如果吃过饭才一两个钟头，有人问我吃了什么，我很难说得上来。这种习惯在旅行时倒使我占了便宜，因为我的同伴养成了挑食的习惯，一旦不对胃口心情就非常郁闷。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;15&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;于是他有的时候带我去溜溜弯儿，看看木工、泥瓦工、车工、铜工是怎么样干活的，这样他就可以看出我的爱好来，好想办法替我把这种爱好固定在陆地上的某个行当上。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;16&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我自小就喜欢读书，手里有点零钱，总要拿去买书。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;还有一本笛福的书，叫作 &lt;span class="hlb"&gt;《论计划》&lt;/span&gt; ，另外一本是马瑟博士的书，叫 &lt;span class="hlb"&gt;《论行善》&lt;/span&gt; ，后面这两本书扭转了我的思想，从而影响了我未来生活的一些重大事件。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;18&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;不过，我这一辈子，写散文给我派上了大用场，而且是我催我进取的主要手段，我主要告诉你处在那种境地，我是怎么习得这方面的一点雕虫小技的。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;对了，&lt;span class="hlb"&gt;这种好争辩的禀性容易演化成一种恶习，因为反驳必然要将这种恶习付诸实践，结果惹得一起的人常常感到极不痛快，因为这样一来，除了把交谈搅黄，在本来可以建立友谊的地方，反而产生了厌恶，甚至敌意。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;此后，我注意到除了律师、大学教师，以及在爱丁堡受过教育的形形色色的人物，明达之士不大有人染上这种恶习。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;20&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;无论读书还是做练习，时间只能定在晚上，下班后或是早上上班前；要么就是礼拜天。一到礼拜天，我总是想方设法一个人待在印刷所里，尽量逃避到教堂做例行的礼拜，而在父亲管教下时，他总是逼着我去：不过我确实认为这是一项职责；但对我而言，只是挤不出时间去履行而已。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;各个和其余的人离开印刷所吃饭去了，我一个人在那里，随便吃一点东西（往往只不过是一块饼干，或者一片面包，一把葡萄干或者从糕点铺买来的一张果馅饼再加一杯水），在他们回来之前，剩下的时间我就可以学习，于是我的学习大有长进，因为饮食节制可以使人头脑更清楚，领悟更敏捷。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;21&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;不久，我找到了色诺芬的《回忆苏格拉底》，其中不乏这种方法的例证。我对这种辩论方法着了迷，便采用了它，&lt;span class="hlb"&gt;丢弃了我那一套贸然反驳和武断论证的做法，拿出一副不耻下问和满腹疑团的样子。&lt;/span&gt; 也就是在那个时段，由于阅读沙夫茨伯里和柯林斯，我对我们的宗教教义中很多观点都产生了真正的怀疑，&lt;span class="hlb"&gt;我发现这种方法既能使自己万无一失，又能将我用这种方法反驳的对手引入窘境，因此乐不可支，便继续实践，逐渐驾轻就熟，得心应手，诱使对手，甚至是学识渊博的对手，步步退让，因为这种后果他们是预见不到的，还让对手陷入困境不能自拔，就这样取得了我自己和我的理由常常不应取得的胜利。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;22&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这种方法我连续使用了几年，渐渐就起而不用了，&lt;span class="hlr"&gt;仅仅保留了用谦虚谨慎的话表达自己看法的习惯&lt;/span&gt; ，每当提出可能有争议的观点时，我从来不用"肯定地"，"无疑地"，或别的使一种意见有武断气息的字眼；&lt;span class="hlr"&gt;而宁可说，我心想，我恐怕一件事情是如此这般，由于某种理由，在我看来，或我倒认为它如何如何，或者我想象事情如何如何，或者如果我没有弄错的话，事情就是这样。当我需要反反复复坚持自己的见解并说服人们相信我时不时地鼓动宣传的措施时，我相信这种习惯对我好处极大。&lt;/span&gt; 由于交谈的主要目的是提供信息或者获取信息，使人 &lt;em&gt;心悦&lt;/em&gt; 或使人 &lt;em&gt;信服&lt;/em&gt; ，&lt;span class="hlb"&gt;所以我希望善意明达之人不要以武断自负的方式说话，而使行善的力量减弱，原因是用这种方式往往使人反感，容易造成对立&lt;/span&gt; ，使我们专靠语言达到的这些目的——即提供或获取或者提供或者获取快乐——一一泡汤：&lt;span class="hlr"&gt;因为如果你要提供信息，在你提出自己的见解时，一种武断教条的态度可能遭致反驳，也阻碍了坦诚的关注。要是你希望从别人的知识中获取信息和改进，同时又坚决用目前的观点来表达自己，那么谦虚明达之士由于不爱争辩，也许就听之任之，让你坚持错误，不思悔改好了；如果采取这种态度，你就很难指望让听你讲话的人 心悦 ，诚服，达成你所期望的共识。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;23&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;蒲柏的话很有见地，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;救人时要让人觉得你不是在救他，&lt;/p&gt;
&lt;p&gt;人所不知的事情你就说是他忘啦，&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;进而又劝告我们，&lt;/p&gt;
&lt;blockquote&gt;
与其言之凿凿，不如故显怯懦。&lt;/blockquote&gt;
&lt;p&gt;&lt;span class="p"&gt;26&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我哥哥遭受关押，我义愤填膺，便将个人恩怨丢在一边，挑起了管理报纸的胆子，并且悍然在报上向统治者们发难，哥哥对此很是感激，但别人开始对我产生了不良印象，把我看成一个头上长角、身上长刺的少年天才。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;42&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;人和人有天壤之别，年长难保事事谨慎，年幼未必处处唐突。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果有人知道我在依赖总督，很可能更加了解此公的朋友会劝我打消这种念头，因为我后来听说，随意许诺，无疑履行，这就是他人所共识的德性。然而又不是我求的他，我怎么会想到他的慨然许诺是空口说白话呢？我相信他是天下最好的人之一。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;43&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;有一阵子我在原则和喜好之间颇费踌躇；后来想起来，鱼被剖开时，我看见小鱼被人从它们的肚子里取出来；于是我想，如果你们相互吞食，我为何不可吃你们呢。这样我就放放心心地吃起鳕鱼来，而且跟别人一样吃下去，只是偶尔回头吃吃素。&lt;span class="hlr"&gt;这么看来，做一个理性的动物倒是一件十分方便的事情，因为人想做一件事，它总能找出一个或找出一个理由来。&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id14"&gt;两封信&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id15"&gt;第二部&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id16"&gt;第三部&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id17"&gt;第四部&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id18"&gt;致富之路&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;div class="section" id="id10"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id19"&gt;富兰克林年表&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
</content><category term="book-digests"></category><category term="书摘"></category><category term="2021阅读年"></category><category term="书-四星"></category></entry><entry><title>《次第花开》</title><link href="/articles/book-digests-9787544334792" rel="alternate"></link><published>2021-02-27T00:00:00+08:00</published><updated>2021-03-11T00:00:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2021-02-27:/articles/book-digests-9787544334792</id><summary type="html">&lt;p class="first last"&gt;希阿荣博堪布 | 海南出版社 | &lt;a class="reference external" href="https://douban.com/isbn/9787544334792"&gt;ISBN&lt;/a&gt;&lt;/p&gt;
</summary><content type="html">
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id3"&gt;再版前言&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span class="p"&gt;5&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;你带着满心的烦恼，又想在何时何地获得解脱呢？烦恼不在别处，在你心里，解脱也在你心里。&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;我们无法去外面找一颗现成的没有烦恼的心来移植到自己身上，也别想某天早上醒来突然就发现自己改头换面成了个"解脱的人"，没那么神奇，也没那么容易。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我们唯一能做的只有面对当下，回归内心，与烦恼开战。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;6&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我不是说大家应该自私。&lt;span class="hlr"&gt;我的意思是，要从检视自己的身、语、意入手，把重点放在对自己的贪、嗔、痴上面，而不是去挑别人的错，或者急于"度化"别人。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;事不关己时，你能做到"八风吹不动"，而真正的问题出现时，你的反应跟不学佛学的人是一样的，既没有对自身的察觉，也没有对正法的忆念，只是任由情绪肆虐、言行失当。这说明长期以来我们都荒于贴近自身而修行，无法随时提起对内心感受、欲望、情绪的觉察，更没有当下出离的心力。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;佛法中讲的出离，是出离烦恼。凡事有因才有果，烦恼也是这样，尤其产生的原因。要远离烦恼，必须远离烦恼的因。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;7&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;厌世也是同样的。有些人的厌世本身就是贪心、嗔心、执念深重的表现，而有些人的厌世则是源于对真相的洞见。&lt;/span&gt; 看到世间种种追逐的无结果无意义，正如以前的大成就者所说：&lt;span class="hlr"&gt;世间的事儿就像儿童的游戏，你可以一直玩下去，可是随时停下来，也就结束了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;你永远得不到你想要的，因为没有什么是你真正想要的，你的内心无法填满的缺憾、不满足感，不是因为你还没有得到，而是你还在轮回中。&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="book-digests"></category><category term="书摘"></category><category term="2021阅读年"></category><category term="书-五星"></category></entry><entry><title>《穷查理宝典》</title><link href="/articles/book-digests-9787508663326" rel="alternate"></link><published>2021-02-21T00:00:00+08:00</published><updated>2021-03-06T00:00:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2021-02-21:/articles/book-digests-9787508663326</id><summary type="html">&lt;p class="first last"&gt;彼得·考夫曼 | 中信出版集团 | &lt;a class="reference external" href="https://douban.com/isbn/9787508663326"&gt;ISBN&lt;/a&gt;&lt;/p&gt;
</summary><content type="html">
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id139"&gt;中文版序言 书中自有黄金屋&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id140"&gt;一&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;5&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;而这位据说在股市上赚了很多钱的美国成功商人看上去却显然是一个好人，友善而聪明，颇有些学究气，完全同我想象中那些冷酷无情、投机钻营的商人南辕北辙。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;巴菲特说股票的本质上是公司的部分所有权，股票的价格就是由股票的价值，也就是公司的价值所决定的。而公司的价值又是由公司的盈利情况及净资产决定的。虽然股票价格上上下下的波动在短期内很难预测，但长期而言一定是由公司的价值决定的。而聪明的投资者只要在股票的价格远远低于公司实际价值的时候买进，又在价格接近或者高于价值时卖出，就能够在风险很小的情况下赚很多钱。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;7&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;记得他给人的第一印象总是拒人于千里之外，对他谈话者往往心不在焉，非常专注于自己的话题。但这位老先生说话言简意赅，话语中充满了让你回味无穷的智慧。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id141"&gt;二&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;8&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;查理就是如此独特的人，他的独特性及表现在他的思想上，也表现在他的人格上。&lt;/p&gt;
&lt;p&gt;比如说，查理思考问题总是从逆向开始。如果要明白人生如何得到幸福，查理首先是研究人生如何才能变得痛苦；要研究企业如何做强做大，查理首先研究企业是如何衰败的；大部分人更关心如何在股市上投资成功，查理最关心的是为什么在股市上大部分人投资失败了。他的这种思考方法来源于下面这句农夫谚语中所蕴含的哲理：我只想知道将来我会死在什么地方，这样我就不去那儿了。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;查理的头脑是原创性的，从来不受任何条条框框的束缚，也没有任何教条。他有儿童一样的好奇心，又有第一流的科学家所具备的研究素质和科学研究方法，一生都有强烈的求知欲和好奇心，几乎对所有问题都感兴趣。任何一个问题在他看来都可以使用正确的方法通过自学完全掌握，并可与在前人的基础上创新。这点他和富兰克林非常类似，类似于一位18、19世纪百科全书式的人物。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;9&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;他的思想辐射到事业、人生、知识的每一个角落。在他看来，世间宇宙万物都是一个相互作用的整体，人类所有的知识都是对这一整体研究的部分尝试，只有把这些知识结合起来，并贯穿在一个思想框架中，才能对正确的认知和决策起到帮助作用。所以他提倡要学习在所有学科中真正重要的理论，并在此基础上形成所谓的“普世智慧”，以此为利器去研究商业也投资领域的重要问题。查理在本书中详细地阐述了如何才能获得这样的“普世智慧”。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;但是查理却可以做到凡事客观。在这本书里，查理也讲到了通过后天的训练是可以培养客观的精神的。而这种思维方式的养成将使你看到别人看不到的东西，预测到别人预测不到的未来，从而过上更幸福、自由和成功的生活。&lt;/p&gt;
&lt;p&gt;即使这样，一个人在一生中可以真正得到的真知灼见仍然非常有限，所以正确的决策必须局限在自己的“能力圈”以内。一种不能够界定其边界的能力当然不能成为真正的能力。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;然而查理讲的“理性”却不是我们一般人理解的理性。查理对理性有更苛刻的定义。正是这样的“理性”，让查理具有敏锐独到的眼光和洞察力，即使对于完全陌生的领域，他也能一眼看到事物的本质。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;10&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;查理的兴趣不仅限于思考，凡事也喜欢亲力亲为，并注重细节。他有一艘世界上最大的私人双体游艇，而这艘游艇就是他自己设计的。它还是个出色的建筑师。他按自己的喜好建造房子，从最初的图纸设计到之后的每一个细节，他都全程参与。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;他永远是精力旺盛，很早起身。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;而且他记忆力惊人，我很多年前跟他将的比亚迪的营运数字，我都已经记忆模糊了，他还记得。87岁的他记忆比我这个年轻人还好。这些都是他天生的优势，但使他异常成功的特质却都是他后天努力获得的。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;他让我明白，一个人的成功并不是偶然的，时机固然重要，但人的内在品质更重要。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;查理因为从一个午餐会上赶来而迟到了半个小时。一到之后，查理先向我们两个年轻人郑重道歉，并详细解释他迟到的原因，甚至提出午餐会的代客泊车（valet
park）应该如何改进才不会耽误客人45分钟的等候时间。那位中国青年既惊讶又感动，因为在全世界恐怕也找不到一位地位如查理一般的长者会因迟到向小辈反复道歉。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;查理最受不了的就是因为拥有了钱财而失去与世界的联系，把自己隔绝在一个单间，占一层的巨型办公室里，见面要层层通报，过五关斩六将，谁都不能轻易接触到。这样就与现实生活脱节了。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;“我手里只要有一本书，就不会觉得浪费时间。”查理任何时候都随身携带一本书，即使坐在经济舱的中间座位上，他只要拿着书，就安之若素。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;12&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;而查理虽然严于律己，却非常宽厚地对待他真正关心和爱的人，不吝金钱，总是希望他人多收益。他一个人的旅行，无论公务私务都搭乘经济舱，但与太太和家人一起旅行时，查理便会搭乘自己的私人飞机。他解释说：太太一辈子为我抚育这么多孩子，付出甚多，身体又不好，我一定要照顾好她。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;查理虽然不是斯坦福大学毕业的，但他太太是斯坦福校友，又是大学董事会成员，查理便向斯坦福大学捐款6000万美金。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在外人看来，查理可能像是个苦行僧，但在查理看来，这个过程既理性又愉快，能够让人过上成功、幸福的人生。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;说实话，由我目前的能力来评价芒格的思想其实为时尚早，因为直到今天，我每次和查理谈话，每次重读他的演讲，都会有新的收获。这另一方面也说明，我对他的思想的理解还是不够。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;比如，有人问查理如何才能找到一个优秀的配偶。查理说最好的方式就是让自己配得上她/他，因为优秀的配偶都不是傻瓜。晚年的查理时长引用下面这句出自《天路历程》中真理剑客的话来结束他的演讲：“我的剑留给能够挥舞它的人。”&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id142"&gt;三&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;13&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;与查理交往的这些年，我常常会忘记他是一个美国人。他更接近于我理解的中国传统士大夫。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;《大学》曰：“正心，修身，齐家，治国，平天下。”这套价值系统在之后的儒家各派中都得到了广泛的阐述。这应该说是中国文明最核心的灵魂价值所在。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;查理可以说是一个“商才士魂”的最好典范。首先，查理在商业领域极为成功，他和巴菲特索取的成就可以说是前无古人，后无来者。然而在与查理的深度接触中，我发现查理的灵魂本质是一个道德哲学家，一个学者。他阅读广泛，知识渊博，真正关注的是自身道德的修养与社会的终极关怀。与孔子一样，查理的价值系统是内渗而外，倡导通过自身的修行以达到圣人的境界，从而帮助他人。&lt;/p&gt;
&lt;p&gt;正如前面所提到的，查理对自身要求很严。虽然十分富有，过的却是苦行僧般的生活。他现在居住的房子还是几十年前买的一套普通房子，外出旅行时永远只坐经济舱，而约会总是早到45分钟，还会为了偶尔的迟到而专门道歉。在取得事业与财富的巨大成功之后，查理又致于慈善事业，造福天下人。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;14&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;查理是一个完全凭借智慧取得成功的人，这对于中国的读书人来讲无疑是一个令人振奋的例子。他的成功完全靠投资，而投资的成功又完全靠自我修养和学习，这与我们当今社会上所看到的权钱交易、潜规则、商业欺诈、造假等毫无关系。作为一个正直善良的人，他用最干净的方法，充分运用自己的智慧，取得了这个商业社会中的巨大成功。在市场经济下的今天，满怀士大夫情怀的中国读书人是否也可以通过学习与自身修养的锻炼同样取得世俗社会的成功并实现自身的价值及帮助他人的理想呢？&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;15&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;对于一位86岁视读书思考胜于生命的老人而言，两件事情的连番打击可想而知。然而我所看到的查理却依然是那样理想、客观、积极和睿智。他既不怨天尤人，也不消极放弃，在平静中积极地寻求应对方法。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;无论顺境、逆境，都保持客观积极的心态——这就是查理。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id143"&gt;鸣谢&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span class="p"&gt;17&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;查尔斯·赫尔曼·利亚曾经说：“ &lt;span class="hlb"&gt;一般人们都会承认，对一切图书的真正考验是在于它们给读者的生活和行为带来了怎样的影响。&lt;/span&gt; ”&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id144"&gt;序言：巴菲特论芒格&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span class="p"&gt;18&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;从1733年到1758年，本杰明·富兰克林借由《穷查理年鉴》传播了许多有用且永恒的建议。他赞赏的美德包括节俭、负责、勤奋和简朴。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;和芒格苛刻的要求相比，依照本杰明的建议来过日子显得太容易了。&lt;/p&gt;
&lt;p&gt;此外，查理还始终身体力行他所鼓吹的道理（对了，喔，他是这么卖力地鼓吹）&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;20&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;至于我自己，我想提供几条“选择合伙人的建议。”请注意。&lt;/p&gt;
&lt;p&gt;首先，要找比你更聪明、更有智慧的人。找到他之后，请他别炫耀他比你高明，这样你就能够因为许多源自他的想法和建议的成就而得到赞扬。你要找这样的合伙人，在你犯下损失惨重的错误时，他既不会事后诸葛亮，也不会生你的气。他还应该是个慷慨大方的人，会投入自己的钱并努力为你工作而不计报酬。最后，这回伙伴还会在漫漫长路上结伴同游时能不断地给你带来快乐。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id145"&gt;驳辞：芒格论巴菲特&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span class="p"&gt;21&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;人们很难相信他的业绩一年比一年好。这种情况不会永久地持续下去，但沃伦的境界却是有所提高。这是很罕见的：绝大多数人到古稀之年便停滞不前了，但沃伦依然在进步。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id146"&gt;导读&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span class="p"&gt;23&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在这里出现的引语、谈话和演讲均源自老派的美国中西部价值观，查理正是以这种价值观闻名的：活到老学到老，对知识抱有好奇心，遇事冷静镇定，不心生嫉妒和仇恨，言出必行，能从别人的错误中吸取教训，有毅力恒心，拥有客观的态度，愿意检验自己的信念等等。但他的建议并不以大叫大嚷的警告的形式出现，查理用幽默、逆向思维（从伟大的代数学家雅各比的指示，“反过来想，总是反过来想”）和悖论来提供睿智的忠告，引导人们应付最棘手的生活难题。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;从这些谈话和演讲中可以清晰地看到，查理认为生活的决定比投资的决定重要。他那来自各种学科的思维模型反复地出现，却从来不关注“企业组合投资策略”、“beta系数”或者“资产定价模型”，而是以基本的公理、人类的成就、人性的弱点和通往智慧的崎岖道路为中心。查理曾经说：“我就像约翰·梅纳德·凯恩斯男爵那样，我想通过发财致富来变得独立。”对于查理而言，独立是赚钱的目的，而不是倒过来。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id10"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id147"&gt;第一章 查理·芒格传略&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span class="p"&gt;28&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;他喜欢通过阅读各种图书（尤其是传记）所获得的与日俱增的知识来质疑老师和同学们的世俗智慧。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;30&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;“我这辈子遇到的聪明人（来自各行各业的聪明人）没有不每天阅读的——没有，一个都没有。沃伦读书之多，我读书之多，可能会让你感到吃惊。我的孩子们都笑话我。他们觉得我是一本长了两条腿的书。”&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;33&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;1941年，大西洋彼岸战火正酣，查理从中央高中毕业，离开了奥马哈，前往密歇根大学就读。查理选择了数学作为他的专业，因为他被数学逻辑和推理所吸引。上了一门理科必修的基础课程之后，他也喜欢上了物理学。查理为物理学的魅力和广阔的研究而着迷，尤其让他印象深刻的是阿尔伯特·爱因斯坦专业的物理学家研究未知事物的过程。查理后来热衷于用物理学的方式来解决问题，他认为这是处理生活问题的有效技巧。他常常说，任何人想要获得成功，都应该学习物理学，因为它的概念和公式十分美丽地展现了正确理论的力量。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;35&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;虽然外表风光无限，但查理的世界并非阳光普照。他的婚姻遇到了问题，他和他的妻子最终在1953年离婚。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;38&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;查理论吸引客户：“关键是把手头的事情做好……把手头的事情做好。把已经拥有的客户照顾好，其他的自然会来找你。”&lt;/p&gt;
&lt;div class="section" id="id11"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id148"&gt;沃伦·巴菲特问答录&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;39&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;你认为还有哪些道德品质为他的成功作出贡献吗？&lt;/p&gt;
&lt;p&gt;事实上，我认为他那些道德品质真的来自他十分敬佩的本杰明·富兰克林。我是说，他为人诚实正直，他做的总是比他分内事要多，而且从来不抱怨其他人做了什么。我们合伙了40年，他从来不对我做的事情放马后炮。我们从来没有发生过一次争执。我们读许多事物的看法有时会有分歧，但他是个完美的合伙人。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;41&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;他们两个都明白两个人注定要一起做生意。他们之间不存在正式的合伙关系或契约关系——这种纽带是由两个相互理解、相互信赖的中西部人的一次握手和拥抱创造出来的。&lt;/p&gt;
&lt;p&gt;他们的伙伴关系带来了许多好处：友谊、投资机会，以及那种理解彼此的思想和言语的独特能力。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;41&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;时至今日，查理对该所的律师仍有影响，他总是提醒他们，“别只看到钱”，要“选择那些你愿意与他交朋友的客户”。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;44&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;虽然查理对钱多钱少其实无所谓，但他为自己名字出现在这样的榜单上而感到懊恼。尽管个人形象很健康，查理还是喜欢低调。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;47&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;和’已逝的伟人’交朋友，这听起来很好玩，但如果你确实在生活中与那些有杰出思想的已逝的伟人成为朋友，那么我认为你会过上更好的生活，得到更好的教育，这种方法比简单地给出一些基本概念好的多。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id12"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id149"&gt;查理·芒格的慈善课程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;48&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;南希·芒格和查理·芒格总是稳定地、慷慨地捐款给许多教育机构和研究机构，但是他们从不张扬；后来他们资助了一些重要的新建筑物的建设，这才使他们的善举为世人所知。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;50&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;认为不做好人也可以成为伟人的想法真是大错特错，我敢保证，人世间真正的伟人同时也必定是道德高尚的人。——本杰明·富兰克林&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id13"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id150"&gt;歌颂长者：芒格论晚年&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;57&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在西塞罗看来，如果你的生活方式是正确的，那么你到了晚年只会比年轻时更加幸福。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;59&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;《论老年》最著名的段落当属下面这段了不起的总结：“晚年的最佳保护铠甲是在一段它之前被悉心度过的生活，一段被用于追求有益的知识、光荣的功绩和高尚的举止的生活；过着这种生活的人从青年时代就致力于提升他自己，而且将会在晚年收获它们生产的最幸福的果实；这不仅是因为有益的知识、光荣的功绩和高尚的举止将会陪伴他终生，甚至直到他生命的最后一刻，也会因为见证了正直的人生的良心和对过往美好功绩的回忆将会给灵魂带来无上的安慰。”&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;60&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;最后，那些好为人师者最好记住萧伯纳之死留下的教训：牛虻式的人物很少受到世人的欢迎，有少数例外者，是因为他们和萧伯纳一样，都将智慧和道德说教结合在一起。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id14"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id151"&gt;忆念：晚辈谈芒格&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;70&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;大多数人已经知道，父亲并不是一个时髦人。他曾说过，他的行为和观点足够离经叛道了，所以在穿衣上应该循规蹈矩。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;70&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;在我父亲看来，经久耐用永远是排在首位的优点，此外还有庄重和正统。和富兰克林相同，一旦养成习惯之后，无论是穿衣服的习惯还是其他习惯，他便不想去改变。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;76&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="hlb"&gt;我们的经验往往会验证一个长久以来的观念：只要做好准备，在人生中抓住几个机会，迅速地采取适当的行动，去做简单而合乎逻辑的事情，这辈子的财富就会得到极大的增长。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;上面提到的这种机会很少，它们通常会落在不断寻找和等待、充满求知欲望而又热衷于对各种不同的可能性作出分析的人头上。&lt;/p&gt;
&lt;p&gt;这样的机会来临之后，如果获胜的几率极高，那么动用多去的谨慎和耐性得来的资源，重重地下赌注就可以了。&lt;/p&gt;
&lt;p class="attribution"&gt;——查理·芒格&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id15"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id152"&gt;第二章 芒格的生活、学习和决策方法&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span class="p"&gt;77&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="hlb"&gt;凡事往简单处想，往认真处执行。&lt;/span&gt;&lt;/p&gt;
&lt;p class="attribution"&gt;——查理·芒格&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class="p"&gt;77&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;就像富兰克林那样，查理本人也是一个未雨绸缪，富有耐性、律己严厉和不偏不倚的超级大师。他充分利用这些特性，在个人生活和生意上——尤其是在投资领域——都取得了巨大的成功。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;78&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;“我发现把自由的市场经济——或者部分自由的市场经济——当做某种生态系统是很有用的思维方式。动物在合适的地方能够繁衍，同样地，人只要在社会上找到了专属于自己的位置，也能够做得很成功。”&lt;/p&gt;
&lt;div class="section" id="id16"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id153"&gt;芒格进行商业分析和评估的“多元思维模型”&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;79&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;查理采用“生态”投资分析法的无懈可击的理由是：几乎每个系统都受到多种因素的影响，所以若要理解这样的系统，就必须熟练地运用来自不同学科的多元思维模式。正如约翰·缪尔谈到自然界万物相互联系的现象时所说的：“如果我们试图理解一样看似独立存在的东西，我们将会发现它和宇宙间的其他一切都有联系。”&lt;/p&gt;
&lt;div class="section" id="id17"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id154"&gt;思维模型的复式框架&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;79&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="hlb"&gt;简单是长期努力工作的结果，而不是起点。&lt;/span&gt;&lt;/p&gt;
&lt;p class="attribution"&gt;——弗里德里克·迈特兰德&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class="p"&gt;79&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;长久以来，我坚信存在某个系统——几乎所有聪明人都能掌握的系统，它比绝大多数人用的系统管用。你需要的是在你的头脑里形成一种思维模型的复式框架。有了那个系统之后，你就能逐渐提高对事物的认识。&lt;/p&gt;
&lt;p&gt;然而，我这种特殊的方法似乎很少得到认可，甚至对那些非常有才能的人来说也是如此。人们要是觉得一件事情“太难”，往往就会放弃去做它。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id18"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id155"&gt;愿意改变想法&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;80&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="hlb"&gt;当面临要怎么改变想法、要么证明无需这么做的选择时，绝大多数人都会忙于寻找证据。&lt;/span&gt;&lt;/p&gt;
&lt;p class="attribution"&gt;——约翰·肯尼斯·加尔布雷思&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;查理养成了一种异常罕见的性格——愿意甚至渴望去证实自己和承认他自己的错误，并从中吸取教训。他曾经说：“如果说伯克希尔取得了不错的发展，那主要是因为沃伦和我非常善于破坏我们自己最爱的观念。哪年你没有破坏一个你最爱的观念，那么这年你就白过了。”&lt;/p&gt;
&lt;p&gt;查理喜欢把人们的观念和方法比喻为“工具”。“如果有了更好的工具（观念或方法），那还有什么比用它来取代你较为没用的旧工具更好的呢？沃伦和我常常这么做，但大多数人会像加尔布雷思说的那样，永远舍不得他们那些较为没用的旧工具。”&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id19"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id156"&gt;多元思维模型&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id20"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id157"&gt;“那我就自己来吧”&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;82&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;“当我的朋友沃伦和我各自从研究生院毕业的时候，我们发现商业世界中的许多预测模型明显是极端不理性的。对于我们从事的商业而言，这种情况至关重要，然而我们的教授从来没有提起过它。我们使用了小时候在保育院学到的方法——’那我就自己来吧，’小红母鸡说”&lt;/p&gt;
&lt;p&gt;“所以，如果你的教授没有给你合适的跨学科方法，如果每个教授都想要滥用他自己的模型，而贬低其他学科的重要模型，你可以亲自纠正那种愚蠢。”&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id21"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id158"&gt;英雄所见略同&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;82&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;“就确定未来而言，没有比历史更好的老师……一本30美元的历史书里隐藏着价值数十亿美元的答案。”&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;83&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;查理认为未雨绸缪、富有耐心、律己严厉和不偏不倚是最基本的指导原则。&lt;/span&gt; 不管周围怎么想，不管自己的情绪有什么波动，他永远不背离这些原则，尽管许多人都认为“做人要懂得随机应变”。这些原则若是得到坚定不移的遵守，便能产生最著名的芒格特征之一：不要非常频繁地进行买卖。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id22"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id159"&gt;接受现实&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;83&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;恐怕事情就是这样的。假如有20种相互影响的因素，那么你必须学会处理这种错综复杂的关系——因为世界就是这样的。如果你能像达尔文那样，带着好奇的毅力，循序渐进地去做，那么你就不会觉得这是艰巨的任务。你将会惊讶地发现自己完全能感胜任。&lt;/p&gt;
&lt;p&gt;——查理·芒格&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;83&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;也许所有教育最有价值的结果是，当你不得不完成一件事情的时候，不管你是否喜欢它，你都有能力去完成这项必须的任务。这是每个人应该学的第一课，然而，无论一个人多早接受教育，这可能是他彻底学到的最后一课。&lt;/p&gt;
&lt;p&gt;——托马斯·亨利·赫胥黎，自称是达尔文的信徒或“门下走狗”&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;84&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;查理坚持不偏不倚的客观态度，它能够冷静地逆流行观点的潮流而上，一般投资者很少拥有这种素质。尽管这种行为往往会显得固执或反叛，但查理的为人绝不是这样的。查理只是相信他自己的判断，即使那与大多数人的看法想做。很少有人看得出查理这种“独狼的性格”是他在投资界取得优异业绩的原因。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id23"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id160"&gt;纪律和耐心 泰德·威廉姆斯的77格击球区&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;85&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;许多投资者的共同问题是他们挥棒太过频繁。&lt;/span&gt; 无论是个人投资者，还是受“机构行为铁律”所驱使的专业投资者，他们都有这种倾向；这种“机构行为铁律”的某一变种也是让我离开同时做长线和短线投资的对冲基金的原因。然而，另外一个与挥棒太过频繁相对立的问题也同样有害于长期的结果：你发现一个“好球”，却无法用全部的资本去出击。&lt;/p&gt;
&lt;p&gt;——李录，喜马拉雅资本管理公司&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;86&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;查理努力将各种复杂情况简化为一些最基本、最客观的因素。然而，在追求理性和简单的时候，查理也小心翼翼地避免他所说的“物理学妒忌”，就是人类那种将非常复杂的系统（比如说经济系统）简化为几道牛顿式普遍公式的倾向。他坚定地用户阿尔伯特·爱因斯坦的告诫：“科学理论应该尽可能简单，但不能过于简单。”查理自己也说过：“我反对的是过于自信、过于有把握地认为你清楚你的某次行动是利大于弊的。你要应付的是高度复杂的系统，在其中，任何事物都跟其他一切事物相互影响。”&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;87&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;格雷厄姆提醒投资者，对于股票的价值，要亲自去作出客观的判断，不能依赖金融市场常见的躁狂抑郁行为。同样地，查理认为，即使是那些最有能力、最有干劲的人，他们的决定也并不总是基于理性作出的。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;88&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;查理是这么想的：“如果你把自己训练得更加客观，拥有更多学科知识，那么你在考虑事情的时候，就能够超越那些比你聪明得多的人，我觉得这是很好玩的。再说了，那样还能赚到很多钱，我本人就是个活生生的证据。”&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id24"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id161"&gt;芒格的投资评估过程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;89&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;正如他所说的：“关于投资，我们有三个选项：可以投资，不能投资，太难理解。”为了确定“可以投资”的潜在项目，查理先选定一个容易理解的、有发展空间的、能够在任何市场环境下生存的主流行业。&lt;/p&gt;
&lt;div class="section" id="id25"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id162"&gt;明确你的能力范围&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;90&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在第九讲中，查理讲述了一个关于马克斯·普朗克和他的司机的趣闻。司机经常拉着普朗克到德国各地举办公开的讲座。有一次，对讲座内容了如指掌的司机建议普朗克和他互换位子。司机完美无瑕地将讲座的内容背诵出来之后，一个物理学家站了起来，提出了一个非常难的问题。司机早就准备好了，“好吧，”他说，“慕尼黑这么发达的城市，居然有市民提出如此简单的问题，这让我太吃惊了，所以我想请我的司机来回答。”&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;在现实世界，弄清楚你何时是“马克斯·普朗克”、何时是“司机”是很关键。&lt;/span&gt; 如果你无法称职地回答下一个问题，那么你就缺乏真正的本领，非常有可能处在你的“能力圈”之外。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;90&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在整个想尽的评估过程中，查理并非数据资料的奴隶：他将各种相关因素都考虑在内，包括企业的内部因素和外部因素，以及它所处的行业情况，即使这些因素很难被识别、测量或者化为数字。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;91&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;他会对公司管理层进行特别的评估，那可不是传统的数字运算所能囊括的——具体来说，他会评估他们的“能干、可靠和为股东考虑”的程度。例如，他们如何分配现金？他们是站在股东的角度上聪明地分配吗？还是付给他们自己太多的酬劳？或者是为了增长而盲目地追求增长？&lt;/p&gt;
&lt;p&gt;除此之外，他还试图从方方面面——包括产品、市场、商标、雇员、分销渠道、社会潮流等等——评估和理解企业的竞争优势以及这种优势的持久性。查理认为，一个企业的竞争优势是该企业的“护城河”，是保护企业免遭入侵的无形沟壕。优秀的公司有很深的护城河，这些护城河不断加宽，为公司提供长久的保护。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;91&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;最后，查理会计算整个企业的真正价值，并在考虑到未来股权稀释的情况下，去确定和市场的价格相比，每股的价值大约是多少。后面这种比较是整个过程的目标——对比价值（你得到的）和价格（你付出的）。关于这方面，他有个著名的观点：“（购买）股价公道的伟大企业比（购买）股价超低的普通企业好。”&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id26"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id163"&gt;独立思考&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;91&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="hlr"&gt;你是正确的或错误的，并不取决于大家是否同意你。你是正确的，是因为你的资料和推理是正确的。&lt;/span&gt;&lt;/p&gt;
&lt;p class="attribution"&gt;——本杰明·格雷厄姆&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="hlb"&gt;做生意时，最困难的事情是先让你自己思考，再让别人思考。&lt;/span&gt;&lt;/p&gt;
&lt;p class="attribution"&gt;——哈维·费尔斯通&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="hlb"&gt;运用逻辑，避免愚弄你自己。查理不会只因为一件事情是我说的而接受它，尽管世上大多数人会这样。&lt;/span&gt;&lt;/p&gt;
&lt;p class="attribution"&gt;——沃伦·巴菲特&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class="p"&gt;92&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;查理在分析的过程中会逐步排除一些投资变量，就像他排除其他变量那样。等到分析结束时，他已经将候选投资项目简化为一些最显著的要素，也完全有信心决定到底要不要对其进行投资。价值评估到最后变成了一种哲学的评估。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id27"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id164"&gt;安全边际&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;92&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;安全边际总是取决于付出的价格。它在某个价格会很大，在其他一些价格会很小，而价格更高时，它便不复存在。&lt;/p&gt;
&lt;p class="attribution"&gt;——本杰明·格雷厄姆&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class="p"&gt;93&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;他知道在正确地评估股票的价值之后，还必须在正确的时间买入，所以他会进行更精细的筛选，也就是“扣动扳机之前”的检查。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;93&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;他们花在学习和思考上的时间，比花在行动上的时间要多，这种习惯绝对不是偶然的。这是每个行业真正的大事身上所体现出来的纪律和耐心的混合物：一种绝不妥协的“把手上的牌打好”的决心。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;93&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;尽管在芒格和巴菲特的世界里，糟糕的结果是考验接受的（因为有些结果并不在他们的掌握之中），但准备不足和仓促决策是不可原谅的，因为这些因素是可以控制的。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id28"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id165"&gt;熟练和眼光&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;94&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;你必须有浓厚的兴趣去弄明白正在发生的事情背后的原因。如果你能够长期保持这种心态，你关注现实的能力将会逐渐得到提高。如果你没有这种心态，那么即使你有很高的智商，也会注定失败。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="hlb"&gt;你若想在任何领域拥有竞争力，就必须熟练地掌握该领域的方方面面，不管你是否喜欢这么做，这是人类大脑的深层结构决定的。&lt;/span&gt;&lt;/p&gt;
&lt;p class="attribution"&gt;——查理·芒格&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="hlb"&gt;我发现，如果一个人的全部信息局限于他的工作领域，那么他的工作不会做的很好。一个人必须有眼光，他可以从书籍上或人们身上——最好是两者皆有——培养眼光。&lt;/span&gt;&lt;/p&gt;
&lt;p class="attribution"&gt;——哈维·费尔斯通&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="id29"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id166"&gt;正确出牌&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;94&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="hlr"&gt;大多数玩家从被群体接受或者从对群体的归属感中得到快乐。然而，好的玩家从他应付游戏里面各种局面的能力中得到快乐。&lt;/span&gt;&lt;/p&gt;
&lt;p class="attribution"&gt;——约翰·费思&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="hlb"&gt;投资就像打棒球，你要让记分牌上的得分增加，就必须盯着球场，而不是盯着记分牌。&lt;/span&gt;&lt;/p&gt;
&lt;p class="attribution"&gt;——沃伦·巴菲特&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class="p"&gt;95&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;查理自信的来源并非谁或者多少人同意或者反对他的观点，而是客观地看待和衡量自己的能力。这种自知之明使他在衡量他的实际知识、经验和思维的正确性时，能够拥有一种罕见的客观态度。在这里，我们再次看到，良好的个性素质——自律、耐心、冷静、独立——扮演了重要角色。&lt;/span&gt; 如果缺乏这些品质，查理恐怕不可能取得如此接触的投资业绩。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;97&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;“所有的聪明投资都是价值投资——获得比你的付出更多的东西。你必须先评估一个企业的价值，然后才能评估它的股票的价值。”&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id30"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id167"&gt;价格是你付出的，价值是你得到的&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;97&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;价值投资者往往会招致别人的怀疑，美国几次精明的土地收购就是这样的。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id31"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id168"&gt;投资原则检查清单&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id32"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id169"&gt;复利&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;97&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果你把我们15个最好的决策剔除，我们的业绩将会非常平庸。你需要的不是大量的行动，而是大量的耐心。你必须坚持原则，等到机会来临，你就用例去抓住他们。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="hlb"&gt;有很多情况比淹没在现金中却又什么都不做糟糕的多。我记得从前我缺乏现金的情况——我可不想回到那个时候。&lt;/span&gt;&lt;/p&gt;
&lt;p class="attribution"&gt;——查理·芒格&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class="p"&gt;97&lt;/span&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;风险——所有投资评估应该从测量风险（尤其是信用的风险）开始&lt;ul&gt;
&lt;li&gt;测算合适的安全边际&lt;/li&gt;
&lt;li&gt;避免和道德品质有问题的人交易&lt;/li&gt;
&lt;li&gt;坚持为预定的风险要求合适的补偿&lt;/li&gt;
&lt;li&gt;永远记住通货膨胀和利率的风险&lt;/li&gt;
&lt;li&gt;避免犯下大错；避免资本金持续亏损&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;独立——“唯有在通话中，皇帝才会被告知自己没穿衣服”&lt;ul&gt;
&lt;li&gt;客观和理性的态度需要独立思考&lt;/li&gt;
&lt;li&gt;记住，你是对是错，并不取决于别人同意你还是反对你——惟一重要的是你分析和判断是否正确&lt;/li&gt;
&lt;li&gt;随大流只会让你往平均值靠近（只能获得中等的业绩）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;准备——“惟一的获胜方法是工作、工作、工作、工作，并希望拥有一点洞察力。”&lt;ul&gt;
&lt;li&gt;通过广泛的阅读把自己培养成一个终生自学者；培养好奇心，努力使自己聪明一点点&lt;/li&gt;
&lt;li&gt;比求胜意愿更重要的是做好准备的意愿&lt;/li&gt;
&lt;li&gt;熟练地掌握各大学科的思维模型&lt;/li&gt;
&lt;li&gt;如果你不想要变得聪明，你必须不停地追问的问题是“为什么，为什么，为什么”&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;谦虚——承认自己的无知是智慧的开端&lt;ul&gt;
&lt;li&gt;只在自己明确界定的能力圈内行事&lt;/li&gt;
&lt;li&gt;辨认和检查否定性的证据&lt;/li&gt;
&lt;li&gt;抵制追求虚假的精确和错误的确定性的欲望&lt;/li&gt;
&lt;li&gt;最重要的是，别愚弄你自己，而且要记住，你是最容易被自己愚弄的人&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;“理解复利的魅力和获得它的困难是理解许多事情的核心和灵魂。”&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;严格分析——使用科学方法和有效的检查清单能够最大限度地减少错误和疏忽&lt;ul&gt;
&lt;li&gt;区分价值和价格、过程和行动、财富和规模&lt;/li&gt;
&lt;li&gt;记住浅显的好过掌握深奥的&lt;/li&gt;
&lt;li&gt;成为一名商业分析家，而不是市场、宏观经济或者证券分析家&lt;/li&gt;
&lt;li&gt;考虑总体的风险和效益，永远关注潜在的二阶效益和更高层次的影响&lt;/li&gt;
&lt;li&gt;要朝前想、往后想——反过来想，总是反过来想&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;配置——正确地配置资本是投资者最重要的工作&lt;ul&gt;
&lt;li&gt;记住，最好的用途总是由第二好的用途衡量出来的（机会成本）&lt;/li&gt;
&lt;li&gt;好主意特别少——当时机对你有利时，狠狠地下注吧（配置资本）&lt;/li&gt;
&lt;li&gt;别“爱上”投资项目——要依情况而定，照机会而行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;耐心——克制人类天生爱行动的偏好&lt;ul&gt;
&lt;li&gt;“复利是世界第八大奇迹”（爱因斯坦），不到必要的时候，别去打断它&lt;/li&gt;
&lt;li&gt;避免多于的交易税和摩擦成本，永远别为了行动而行动&lt;/li&gt;
&lt;li&gt;幸运来临的时候要保持头脑清醒&lt;/li&gt;
&lt;li&gt;享受结果，也享受过程，因为你活在过程当中&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;决心——当合适的时机出现时，要坚决地采取行动&lt;ul&gt;
&lt;li&gt;当别人贪婪时，要害怕；当别人害怕时，要贪婪&lt;/li&gt;
&lt;li&gt;机会来临的次数不多，所以当它来临时，抓住它&lt;/li&gt;
&lt;li&gt;机会只眷顾有准备的人：投资就是这样的游戏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;改变——在生活中要学会改变和接受无法消除的复杂性&lt;ul&gt;
&lt;li&gt;认识和适应你身边的世界的真实本质，别指望它来适应你&lt;/li&gt;
&lt;li&gt;不断地挑战和主动修正你“最爱的观念”&lt;/li&gt;
&lt;li&gt;正视现实，即使你并不喜欢它——尤其当你不喜欢它的时候&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;专注——别把事情搞复杂，记住你原来要做的事&lt;ul&gt;
&lt;li&gt;记住，声誉和正直是你最有价值的财产——而且能够在瞬间化为乌有&lt;/li&gt;
&lt;li&gt;避免妄自尊大和厌倦无聊的情绪&lt;/li&gt;
&lt;li&gt;别因为过度关心细节而忽略了显而易见的东西&lt;/li&gt;
&lt;li&gt;千万要排除不需要的信息：“千里之提，溃于蚁穴”&lt;/li&gt;
&lt;li&gt;直面你的大问题，别把它们藏起来&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class="p"&gt;100&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;正如你已经看到的，查理的优异成绩并非来自一道神奇公式或者某些商学院教导的体系，它来自查理所说的“不停地寻找更好的思维方式的追求”，通过一丝不苟的准备进行“预付”的意愿，以及他跨学科研究模式的非凡后果。总而言之，它来自查理最基本的行为守则，最根本的人生哲学：准备、纪律、耐心、决心。每个因素都是互不相干的，但它们加起来就变成了威力强大的临界物质，能够催化那种因芒格而闻名的lolapalooza效应。&lt;/p&gt;
&lt;p&gt;最后，简单来讲一下这篇概述芒格投资哲学的文章极其关注“买什么”而极少关注“何时卖”的原因。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;100&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;“我偏向于把大量的钱投放在我们不用再另外做决策的地方。如果你因为一样东西的价值被低估而买了它，那么当它的价格上涨到你预期的水平时，你就必须考虑把它卖掉。那很难。但是，如果你能够买几个伟大的公司，那么你就可以安坐下来啦。那是很好的事情。”&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id33"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id170"&gt;诚实是最好的策略&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;102&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;由于深受故乡（美国中西部）文化的影响，查理·芒格向来是诚实和正直的同义词。正如查理曾经说过的：“做正确的事情能给个人的品格和事业带来很大的好处。”&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;102&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;“查理和沃伦是极好的榜样和教师，对青年人来说更是如此。阿尔伯特·施威策尔说：’榜样在教学中不是主要的东西——它是惟一的东西。’在持续终生的商业’赛跑’中，查理和沃伦不但处于领先地位，而且沿途还从来不抄近道。”&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;103&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;“在股票交易所占价格低廉的股票便宜是一回事，但是占合伙人或者老太太便宜是另外一回事——这是查理绝对不会做的事。”&lt;/p&gt;
&lt;div class="section" id="id34"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id171"&gt;瑞克·格伦&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;103&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;“查理很爱对我说一句他非常喜欢的台词：‘我是对的，你很聪明，迟早你将会明白我是对的。’”&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id35"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id172"&gt;查理论诚实：在2004年西科年会上的讲话&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;104&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;span class="hlr"&gt;“能力能让你达到巅峰，但只有品德才能让你留在那里。” （林肯）&lt;/span&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;span class="p"&gt;104&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;span class="hlr"&gt;“阴谋诡计是蠢货的伎俩，他们缺乏足够的智慧去以诚待人。”（本杰明·富兰克林）&lt;/span&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id36"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id173"&gt;“我没有什么要补充的”第一篇&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;105&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;有时候，查理会向他的听众提出一个很难回答的问题，或者在被问到很难回答的问题时置之不理。他说他这么做是为了鼓励听众自去“寻找”答案，从而更好地了解和掌握他们发现的信息。查理说他父亲从前常常对他使用这种技巧，让他到今天还受用不尽。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id37"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id174"&gt;第三章 芒格主义：查理的即席谈话&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span class="p"&gt;107&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;没有受过教育的人看看几本语录是好事情。——温斯顿·丘吉尔爵士&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;108&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;但每当查理确实有话要补充，那么他说的话往往很尖锐、很深刻，而且他也不会拐弯抹角。用他自己的话来说，查理是一个“古怪的、老派的”人，而且从来不为政治正确而担忧——他想到什么就说什么。&lt;/p&gt;
&lt;div class="section" id="id38"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id175"&gt;我们成功的关键&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;111&lt;/span&gt;&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;如果乌龟能够吸取它那些最棒前辈的已经被实践所证明的洞见，有时候它也能跑赢那些追求独创性的兔子或者跑赢宁愿跻身那些忽略前人最优秀的工作的蠢货之列的兔子。乌龟若能找到某些特别有效的方法来应用前人最伟大的工作，或者只要能避免犯下常见的错误，这种情况就会发生。我们赚钱，靠的是记住浅显的，而不是掌握深奥的。我们从来不去试图成为非常聪明的人，而是持续地别试图变成蠢货，久而久之，我们这种人便能获得非常大的优势。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class="p"&gt;111&lt;/span&gt;&lt;/p&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;我们并不是自称道德高尚的人，但至少有很多即便合法的事情，也是我们不屑去做的。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class="p"&gt;111&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;记住路易斯·文森狄的规则：说真话，你将无须记住你的谎言。就是这么简单的一个概念。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id39"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id176"&gt;论伯克希尔·哈撒韦&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;112&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;一个人可以做的聪明的事之一是调低投资预期，尤其是调低对伯克希尔的收益的预期。那是成熟而负责任的表现。我喜欢我们的模式，我们应该做得不错。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;113&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;现在很多人似乎认为企业CEO的责任就是让股票价格上涨。这种观点导致了各种各样的愚蠢行为。我们会实话实说，值多少就说多少。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;116&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;三分之二的收购是失败的。而我们的收购很成功，那是业务我们从来不试图为收购而收购——我们等着那些不用多想也知道会成功的机会。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;116&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;可以说，我们不停在找。我们不跟上门推销的人打交道。如果你只是坐着，等交易上门，那么你坐的位子就会非常危险。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;116&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;激情和天分，哪个更重要呢？伯克希尔充满了对他忙自己的事业特别有激情的人。我认为激情比头脑的能力更加重要。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;117&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;基本上，我们会选择那些我们非常钦佩的人来管理我们的附属公司。一般来说，我们跟他们很容易相处，因为我们喜爱并敬佩他们。他们的企业中应该有什么样的企业文化，都由他们自行决定，我们并不会干预。他们总是能够积极进取，及时更正以往的错误。&lt;/p&gt;
&lt;p&gt;有些美德是所有伯克希尔的附属公司都有的。我们并不创造这些美德——我们选择那些已经拥有这些美德的公司。我们只是不把它搞坏。我们把权力分散到几乎全面退位的程度。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;117&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我们不说“合力”这个词，因为人们总是宣称兼并之后会产生合力作用。是的，合力确实存在，但又太多关于合力的不是承诺了。伯克希尔充满了合力——我们并不回避合力，只是回避那些对合力的宣称。&lt;/p&gt;
&lt;div class="section" id="id40"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id177"&gt;查理是可恶的“说不大师”&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;122&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;巴菲特：你千万要学会如何校准他的答案。如果你问查理某个项目，他说“不”，那么我们会用所有的钱来投资它。如果他说“这是我听过的最愚蠢的事情”，那么我们就会适当地做一点投资。如果你能够校准他的答案，你就能获得很多智慧。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;123&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;人们通常认为查理的价值在于识别风险和说“不”，但其实查理最有价值的地方，在于他能够识别那些可以参股的时机。&lt;/p&gt;
&lt;p&gt;查理明白要找到真正好的东西很难。所以，就算你90%的时间都在说“不”，你也不会错失太多东西。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id41"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id178"&gt;投资建议&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id42"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id179"&gt;性格、耐心和求知欲的重要性&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;124&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;（成功投资的关键因素之一就是拥有良好的）性格——大多数人总是按捺不住不住，或者总是担心过度。成功意味着你要非常有耐心，然而又能够在你知道该采取行动时主动出击。你吸取教训的来源越广泛，而不是仅仅从你自己的糟糕经验中吸取教训，你就能变得越好。&lt;/p&gt;
&lt;p&gt;我想说说怎样才能培养那种毫不急躁地持有股票的性情。光靠性格是不行的。你需要在很长很长的时间内拥有大量求知欲望。&lt;/p&gt;
&lt;p&gt;你必须有浓厚的兴趣去弄明白正在发生的事情背后的原因。如果你能够长期保持这种心态，你关注现实的能力将会逐渐得到提高。如果你没有这种心态，那么即使你有很高的智商，也注定会失败。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id43"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id180"&gt;集中投资&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;我们的投资风格有一个名称——集中投资，这意味着我们投资的公司有10家，而不是100家或者400家。&lt;/p&gt;
&lt;p&gt;我们的游戏是，当好项目出现时，我们必须能够认出来，因为好项目并不会经常出现。机会只眷顾有准备的人。&lt;/p&gt;
&lt;p&gt;好的投资项目很难得，所以要把钱集中投在少数几个项目上，这在我看来是很好的主意。投资界有98%的人并不这么想。而我们一直以来都是那么做的，这给我们——也给你们——带来了许多好处。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;125&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我们的投资规矩是等待好球的出现。&lt;/p&gt;
&lt;p&gt;如果我有机会进入某个企业工作，而那里的人用各种指数标准来衡量我，比我把钱都投出去，聚集在周围监视我，那么我会讨厌这家企业。我会有戴上脚镣手铐的感觉。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id44"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id181"&gt;优秀企业是什么？&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;127&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;有这么两类企业：第一类每年赚12%，你到年底可以把利润拿走。第二类每年赚12%，但所有多余的陷阱必须进行再投资——它总是没有分红。这让我想起了那个卖建筑设备的家伙——他望着那些从购买新设备的客户手里吃进的二手机器，并说“我们所有的利润都在那里了，在院子里生锈。”我们讨厌那种企业。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id45"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id182"&gt;喜诗糖果：优秀企业的个案&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;127&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;伊拉·马歇尔说你们这两个家伙疯啦——有些东西值得你们花钱买的呀，比如说优质的企业和优质的人。你们低估了优质的价值啦。我们听进了他的批评，改变了我们的想法。这对每个人来说都是很好的教训：要有能力建设性地接受批评，从批评中吸取教训。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id46"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id183"&gt;护城河和持续的竞争优势&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;129&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;旧的护城河正在被填平，而新的护城河比以前更难预测，所以事情变得越来越难。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id47"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id184"&gt;学习过程&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;130&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果你打算成为一名投资者，那么总会有些投资领域不是你完全了解的。但如果你努力学习，不断进步，那么你就能够保证你的投资都会产生好的结果。关键是自律、勤奋和练习。那就像打高尔夫球——你必须努力练习。&lt;/p&gt;
&lt;p&gt;如果你没有不停地学习，其他人将会超过你。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id48"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id185"&gt;能力圈及其边界&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;130&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我们接触过的事情有很多。我们有三个选项：可以，不行，太难。除非我们对某个项目特别看好，否则就会把它归为“太难”的选项。你需要做的，只是寻找一块特殊的能力领域，并把精力放在那里就可以了。&lt;/p&gt;
&lt;p&gt;如果你确有能力，你就会非常清楚你能力圈的边界在哪里。没有边界的能力根本不能称之为能力。（如果你问自己是否超过了能力圈的范围，）那这个问题本身就是答案。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id49"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id186"&gt;预测的价值&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;131&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;人们总是喜欢请人来为他们预测未来。很久很久以前有些国王会请人来解读绵羊的内脏。假装知道未来的人总是有市场的。聆听今天的预测家的行为，就像古代国王请人看绵羊的内脏那么疯狂。这种情况总是一而再、再而三地出现。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id50"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id187"&gt;谈市场&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id51"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id188"&gt;股票、伦勃朗和泡沫&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;132&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;但股票也有点像伦勃朗的画作，人们购买他们，是因为他们的价格一直都在上涨。这种情况，再加上股票涨跌所产生的巨大“财富效应”，可能会造成许多祸害。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id52"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id189"&gt;未来的市场回报&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;132&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我的猜测是，美国不会出现极端的“伦勃朗化”现象，今后的回报率将会是6%。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id53"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id190"&gt;“我没有什么要补充的”第二篇&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;134&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;问：为了理解宏观的经济环境，你通常关注哪些宏观的统计数据呢？或者说你觉得哪些数据比较有用呢？&lt;/p&gt;
&lt;p&gt;我觉得都没有用。我只是密切关注伯克希尔的各家子公司，常常阅读商业报纸和杂志而已，由此我能接触到大量宏观层面的东西。我发现我只要这么做，就足以了解宏观层面正在发生什么情况了。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id54"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id191"&gt;对企业管理层的批评&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id55"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id192"&gt;篡改盈利数字和做假账&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;135&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;但我们正在混淆体面的活动和可耻的活动——所以我在伯克希尔·哈撒韦的年会上说，如果你把葡萄干和大便搅在一起，你得到的仍然是大便。会计学没有办法阻止那些道德败坏的管理人员从事那种连锁信式的骗局。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id56"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id193"&gt;对基金管理企业的批评&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id57"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id194"&gt;没有增加价值&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;136&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这个行业很滑稽，因为从净收益来看，整个投资管理行业加起来并没有对全部客户的资产提供价值。这就是这个行业的运作方式。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="vs"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id195"&gt;股票经纪人vs指数基金&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;136&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这次年会坐满了许多聪明的、值得尊敬的股票经纪人，他们为提供了很好的服务，在这里很难指责他们。但总的来说，股票经纪人的表现太差了，甚至还比不上指数基金。&lt;/p&gt;
&lt;p&gt;我认为对于一般基金来说，投资指数势必现在同行的无借贷股票投资更为聪明的投资策略——尤其是现行做法每年的管理费用超过1%的情况想。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id58"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id196"&gt;对华尔街的批评&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id59"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id197"&gt;华尔街的道德缺失&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;138&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;现在的风气是，只要能赚钱，什么都可以卖。你能把东西卖掉，你就道德高尚。但这个标准可不够。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id60"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id198"&gt;对会计的批评&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id61"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id199"&gt;大型会计师事务所的道德沦丧&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;140&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;你一旦开始做坏事，那么第二次做就容易多了，到最后，你就会成为道德败坏的人。这个国家的大型会计师事务所居然为了钱而然明目张胆地做假账，帮助客户逃税……&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id62"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id200"&gt;激进会计法&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;140&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;创造性会计（伪造账目）绝对是文明的诅咒。人们可以说复式簿记法是历史的一大进步。可是利用会计来造假和骗人是可耻的行为。在民主国家里，往往需要丑闻才能撬动改革。安然是企业文化长期出毛病的最典型例子。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ebitda"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id201"&gt;EBITDA的误用&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;141&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我认为，你每次看到EBITDA（即未计利息、税项、折旧及摊销前的利润）这个词汇，你都应该用“狗屁利润”来替代它。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id63"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id202"&gt;不现实的假设&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="hlr"&gt;亚伯拉罕·林肯曾经问：“如果你把尾巴称为腿，那么一只狗有几条腿呢？四条。将尾巴称为腿，并不能让它变成腿。”同样的，会计师说你的养老基金能够赚取9%的利润，单凭这种说法并不能魔法般地让你在未来拥有可靠的实际收益。&lt;/span&gt;&lt;/p&gt;
&lt;p class="attribution"&gt;——巴菲特&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class="p"&gt;142&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;下面这句谚语很好地总结了那些会计人员什么话也不说的原因：“谁给我面包吃，我就给谁唱歌。”我认为你正从美国的会计系统得到一些非常愚蠢的数据。我觉得他们可能不是故意要撒谎，但有可能是。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id64"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id203"&gt;糟糕的会计法导致道德沦丧&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;有着宽松会计标准的人会引来其他人做出极其可怕的举动。那是造孽，绝对是造孽。如果你携带几大桶钞票经过贫民窟，又不好好看管它们，那么你就犯了很严重的罪行，因为你会惹来许多糟糕的行为，而糟糕的行为是会传染的。同样地，命令会计师草率地做账是一种真正的罪孽，也是一种愚蠢的经商方法。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id65"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id204"&gt;对股票期权的批评&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;143&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我们的股东也知道，我们的体系不同于绝大多数大型的公司。我们认为它不那么变化无常。股票期权体系可能会使某些什么事情都没做的人得到大量的回报，而应该得到很多报酬的人却什么都没有。除非我们收购的公司原来就实行了（股票期权制度），否则我们不会使用它。&lt;/p&gt;
&lt;div class="section" id="id66"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id205"&gt;一个合适的目标&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;143&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我们将要打杂一家优秀的公司，必须为长远的利益考虑。我知道每个人都这么说，所以当我重复这句话的时候，我听起来有点老调重弹，但那向来是我们对待我们公司的态度。如果我们做的事情都是正确的，那么股票的价格自然会好起来，我们的股东也将会得到很好的回报。&lt;/p&gt;
&lt;p class="attribution"&gt;——詹姆斯·塞内加尔
好市多CEO&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id67"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id206"&gt;对金融机构和衍生品的警告&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id68"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id207"&gt;金融机构的风险&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;145&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我们尤其害怕那些大量举措的金融机构。如果他们开始说起风险管理有多么好，我们就会很紧张。&lt;/p&gt;
&lt;p&gt;我们比其他人更加警惕。如果感到不安，我们很快会把大量的钱抽出来。这是我们的经营方式——你必须适应它。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id69"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id208"&gt;衍生品&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;145&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;衍生品系统简直是神经病，它完全不负责任。人们以为的固定资产并不是真正的固定资产。它太复杂了，我在这里没办法说清楚——但你无法相信涉及的金额达到几万亿美元那么多。你无法相信它有多么复杂。你无法相信衍生品的会计工作有多难。你无法相信人们对企业的价值和清算能力的一厢情愿的想法会产生多大的激励作用。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;147&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在工程领域，人们拥有很大的安全边际。但在金融界，人们根本不考虑安全。他们只追求扩张扩张扩张。做假账为此推波助澜。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id70"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id209"&gt;衍生品的会计法&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;147&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我非常讨厌将GAAP（公认会计准则）应用于衍生品和掉期协议。摩根大通为了虚报的前端收入将自己彻底出卖给了这种会计尊则。我觉得这种做法很无耻。&lt;/p&gt;
&lt;p&gt;这种做法很疯狂，会计人员出卖了自己的职业操守。每个人都屈服了，采用了宽松的（会计）标准，创造出各种理论模型相关的怪异衍生品。结果就是，产生了大量由会计人员捏造出来的利润，而不是真实的收益。当你想动那笔钱的时候，它就消失不见了。它从来就不曾存在过。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id71"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id210"&gt;对律师、律师事务所和诉讼的批评&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;151&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这里有个重要的教训：坏人一旦变得有钱，他们将获得巨大的政治力量，你就无法阻止他们干坏事了，所以关键是把这类事情扼杀在萌芽状态。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id72"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id211"&gt;思维模型&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id73"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id212"&gt;多元思维模型的重要性&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;152&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;你必须知道重要学科的重要理论，并经常使用它们——要全部用上，而不是只用几种。大多数人都只养成一个学科——比如说经济学——的思维模型，试图用一种方法来解决所有问题。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id74"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id213"&gt;不自欺的精神&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;152&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;大量的很很荒唐地死抱着错误的观念不放。凯恩斯说：“介绍新观念倒不是很难，难的是清楚那些旧观念。”&lt;/p&gt;
&lt;p&gt;不自欺的精神是你能拥有的最好的精神。它非常强大，因为它太少见了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id75"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id214"&gt;常（非常）识&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;得到系统的常（非常）识——非常基础性的知识——是一种威力强大的工具。电脑带来的危险非常多。人们计算得太多，思考得太少。&lt;/p&gt;
&lt;p&gt;拥有常识不但意味着有能力辨别智慧，也意味着有能力拒绝愚蠢。如果排除了许多事情，你就不会把自己搞得一团糟。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;153&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我们看很多书。我认识的聪明人没有不看很多书的。但光看书还不够：你必须拥有一种能够掌握思想和做合理事情的性格。大多数人无法掌握正确的思想，或者不知道该怎么应用他们。&lt;/p&gt;
&lt;p&gt;你拥有的基本知识越多，你需要吸取的新知识就越少。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id76"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id215"&gt;对高等教育的批评&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id77"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id216"&gt;致命的无关联性&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;154&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;学科之间毫无关联，这是致命的。大学里每个系都有些看不见大环境的古怪家伙。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id78"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id217"&gt;怎样变得幸福、富裕，以及其他建议&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id79"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id218"&gt;如何获得幸福和成功&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;155&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果你在生活中惟一的成功就是通过买股票发财，那么这是一种失败的生活。生活不仅仅是精明地积累财富。&lt;/p&gt;
&lt;p&gt;生活和生意上的大多数成功来自你知道应该避免哪些事情：过早死亡、糟糕的婚姻等等。&lt;/p&gt;
&lt;p&gt;避免染上艾滋病、在路口和火车抢道以及吸毒。培养良好的心理习惯。&lt;/p&gt;
&lt;p&gt;避免邪恶之人，尤其是那些性感诱人的异性。&lt;/p&gt;
&lt;p&gt;如果因为你的特立独行而在周围人中不受欢迎……那你就随他们去吧。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id80"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id219"&gt;满足你已经拥有的&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;155&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这里是一句你的投资顾问可能会反对的真话：如果你已经相当富裕，而别人的财富增长速度比你更快，比如说，在投资高风险的股票上赚了钱，那又怎样呢？！总是会有人的财富增长速度比你快。这并不可悲。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id81"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id220"&gt;提防妒忌&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;156&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;关注别人赚钱（比你）更快的想法是一种致命的罪行。妒忌真的是一种愚蠢的罪行，因为它是仅有一种你不可能得到任何乐趣的罪行。它只会让你痛苦不堪，不会给你带来任何乐趣。你为什么要妒忌呢？&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id82"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id221"&gt;如何致富&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;156&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;每天起床的时候，争取变得比你从前更聪明一点。认真的、出色的完成你的任务。慢慢地，你会有所进步，但这种进步不一定很快。但你这样能够为快速进步打好基础……每天慢慢向前挪一点。到最后——如果你足够长寿的话——大多数人得到了他们应得的东西。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id83"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id222"&gt;如何找到好配偶&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;找到好配偶的最佳方法是什么呢？惟一的最佳方法是你首先必须值得拥有好的配偶，因为从定义上来说，好配偶可绝不是傻瓜。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id84"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id223"&gt;阅读的重要性&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;157&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我这辈子遇到的聪明人（来自各行各业的聪明人）没有不每天阅读的——没有，一个都没有。沃伦读书之多，我读书之多，可能会让你感到吃惊。我的孩子们都笑话我。他们觉得我是一本长了两条腿的书。&lt;/p&gt;
&lt;p&gt;我本人是个传记书迷。我觉得你要是想让人们认知有用的伟大概念，最好是将这些概念和提出它们的伟人的生活和个性联系起来。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;157&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;和“已逝的伟人”交朋友，这听起来很好玩，但如果你确实在生活中与已逝的伟人成朋友，那么我认为你会过上更好的生活，得到更好的教育。这种方法比简单地给出一些基本概念好得多。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id85"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id224"&gt;减少物质需求&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;158&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果你担心通货膨胀，最好的预防手段之一就是在你生活中别拥有大量愚蠢的需求——你不需要很多物质的商品。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id86"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id225"&gt;慈善&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;158&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;（沃伦和我）觉得我们这些非常幸运的人有责任反馈社会。至于是像我这样在活着的时候捐作大量的钱，还是像沃伦那样，先捐一点，（等去世之后）再捐很多，那是个人喜好的问题。我恐怕不会喜好人们整天问我要钱。沃伦更无法忍受这种情况。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id87"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id226"&gt;避免欠债&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;158&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;你一旦走进负债的怪圈，就很难走出来。千万别欠信用卡的钱。你无法在支付18%的利息的情况下取得进展。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id88"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id227"&gt;公立学校的衰落&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;158&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;你完全可以这（公立学校的衰落）是我们时代的主要灾难之一。我们将地球史上最大成功之一变成了地球史上最大的灾难之一。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id89"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id228"&gt;日本的经济衰退&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;158&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;然而与此同时，香港却出现了资产泡沫。为什么？因为日本和中国拥有两种非常不同的文化。中国人喜欢赌博。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id90"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id229"&gt;辛普森谈芒格&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;162&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;查理身上某些性格特点组合，我可以肯定我从未在其他人身上看到过。他聪明绝顶，兴趣广泛，似乎从来不会忘记任何事情，哪怕是很深奥或者很细小的事情。他最大的有点是诚实、道德和正直的绝对坚持——查理从来不为自己“攉取”非分之物，值得毫无保留地信任。如果这些还不够，他还拥有一种最适合投资的理想性格：毫不妥协的耐心，自律，自控——无论遭受多大的压力，查理从来不会动摇或者改变他的原则。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id91"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id230"&gt;芒格谈辛普森&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;163&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;你无法想象他承受了多大的压力，年复一年，整个世界似乎获得大丰收，而他正确地、彻底避开了那个泡沫，坚守基本的投资原则。在那些年，路易斯是一个了不起的楷模——聪明、可敬，坚守他的原则。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id92"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id231"&gt;第四章&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id93"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id232"&gt;第一讲 在哈佛学校毕业典礼上的演讲&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;171&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;那时卡森说他无法告诉毕业的同学如何才能幸福，但能够根据个人经验，告诉他们如何保证自己过上痛苦的生活。卡森给的确保痛苦的生活处方包括：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;为了改变心情或者感觉而使用化学物质；&lt;/li&gt;
&lt;li&gt;妒忌，以及&lt;/li&gt;
&lt;li&gt;怨恨&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class="p"&gt;172&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;好啦，卡森开的处方就说到这里。接下来是芒格另开的四味药。&lt;/p&gt;
&lt;p&gt;第一，要反复无常，不要虔诚地做你正在做的事。只要养成这个习惯，你们就能够绰绰有余地抵消你们所有优点共同产生的效应，不管那种效应有多么巨大。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;173&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我为痛苦生活开出的第二味药是，尽可能从你们自身的经验获得知识，尽量别从其他人成功或失败的经验中广泛地吸取教训，不管他们是古人还是今人。这味药肯定能保证你们过上痛苦的生活，取得二流的成就。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;174&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;避免广泛吸取知识的另一种做法是，别去钻研那些前辈的最好成果。这味药的功效在于让你们得到尽可能少的教育。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;174&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我为你们的痛苦生活开出的第三味药是，当你们在人生的战场上遭遇第一、第二或者第三次严重的失败时，就请意志消沉，从此一蹶不振吧。因为即使是最幸运、最聪明的人，也会遇到许许多多的失败，这味药必定能保证你们永远陷身在痛苦的泥沼里。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;175&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;为了让你们过上头脑混乱、痛苦不堪的日子，我所开的最后一味药是，请忽略小时候人们告诉我的那个乡下人故事。曾有个乡下人说：”要是知道我会死在哪里就好啦，我将永远不去那个地方。“大多数人和你们一样，嘲笑这个乡下人的无知，忽略他那朴素的智慧。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;176&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;卡森采用的研究方法是把问题反过来想。就是说要解出X，得先研究如何才能得到非X。伟大的代数学家雅克比用的也是卡森这种办法，众所周知，他经常重复一句话：”反过来想，总是反过来想。”雅各比知道事物的本质是这样的，许多难题只有在逆向思考的时候才能得到最好的解决。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;176&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;达尔文能够取得这样的成就，主要是因为他的工作方式。这种方式有悖于所有我列出的痛苦法则，而且还特别强调逆向思考：他总是致力于寻求证据来否定他已有的理论，无论他对这种理论有多么珍惜，无论这种理论是多么得之不易。与之相反，大多数人早年取得成就，然后就越来越拒绝新的、证伪性的信息，目的是让他们最初的结论能够保持完整。他们变成了菲利普·威利所评论的那类人：“他们故步自封，满足于已有的知识，永远不去了解新的事情。”&lt;/p&gt;
&lt;p&gt;达尔文的生平展示了乌龟如何可以在极端客观态度的帮助下跑到兔子前面去。这种态度能够帮助客观的人最后变成“蒙眼拼驴尾”游戏中惟一那个没有被遮住眼睛的玩家。&lt;/p&gt;
&lt;p&gt;如果你们认为客观态度无足轻重，那么你们不但忽略了来自达尔文的训诲，也忽略了来自爱因斯坦的教导。爱因斯坦说他那些成功的理论来自“好奇、专注、毅力和自省”。他所说的自省，就是不停地试验与推翻他自己深爱的想法。&lt;/p&gt;
&lt;div class="section" id="id94"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id233"&gt;重读第一讲&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;180&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果说我产生了新想法的话，我现在更加坚定的认为：1.
在生活中，可靠是至关重要的；2.
虽然量子力学对于绝大多数人而言是学不会的，但可靠却是几乎每个人都能很好掌握的。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id95"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id234"&gt;第二讲 论基本的、普世的智慧，及其与投资管理和商业的关系&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;183&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;基本的、普世的智慧是什么？嗯，第一天规则是，如果你们只是记得一些孤立的事物，试图把他们硬凑起来，那么你们无法真正地理解任何东西。如果这些事物不在一个理论框架中相互联系，你们就无法把它们派上用场。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;184&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;思维模型是什么呢？这么说吧，第一条规则是，你必须拥有多远思维模型——因为如果你只能使用一两个，研究人性的心理学表明，你将会扭曲现实，直到它符合你的思维模型，或者至少到你认为它符合你的模型为止。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;185&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;首先要掌握的是数学。很明显，你必须能够处理数字和数量问题，也及时基本的数学问题。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;185&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;要掌握排列组合原理并不难。真正困难的是你在日常生活中每天都应用它。费马——帕斯卡的系统与世界运转的方式惊人的一致。它是基本的公理。所以你真的必须得拥有这种技巧。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;186&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果你没有把这个基本的但有些不那么自然的基础数学概率方法变成你生活的一部分，那么在漫长的人生中，你们将会像一个踢屁股比赛中的独腿人。这等于将巨大的优势拱手送给了他人。&lt;/p&gt;
&lt;p&gt;这么多年来，我一直跟巴菲特同事：他拥有许多优势，其中之一就是他能够自动根据决策树力量和基本的排列组合原理来思考问题。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;187&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;显然，你们也应该掌握会计学。会计是从事商业活动的语言。它是对人类文明的一大贡献。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;187&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;布劳恩是一个非常坚毅、非常有才华的人，他的经历体现了会计的重要性，以及懂得标准会计局限性的重要性。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;188&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;他还有个规矩，来自心理学：如果你对智慧感兴趣，那么应该记住这个规矩——就像记住基本的排列组合原理一样。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;188&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果你告诉人们事情的时候，总是告诉他们原因，他们就能更深刻地理解你说的话，就会更加重视你说的话，也会更倾向于听从你说的话。就算他们不理解你的理由，他们也会更倾向于听你的话。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;189&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;正如你想要从问一个又一个的“为什么”开始获得普世的智慧一样，你在跟别人交流沟通时，也应该把原因讲清楚。就算答案很浅显，你把“为什么”讲清楚仍是一种明智的做法。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;189&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;那些思维模型最可靠呢？答案很明显，那些来自硬科学和工程学的思维模型是地球上最可靠的思维模型。而工程学的控制理论——至少对你我这样的非专业工程师来说也是很重要的核心部分——其基础恰好是费马和帕斯卡的基础数学理论。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;190&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我认为第二种可靠的思维模型来自生物学/生理学，因为我们大家毕竟在基因构造方面都是相同的。&lt;/p&gt;
&lt;p&gt;接下来当然就是心理学啦，它更加复杂。但如果你想拥有任何普世的智慧，心理学是太过重要了。&lt;/p&gt;
&lt;p&gt;原因在于，人类的感知器官有时候会短路。大脑的神经线路并非总是畅通无阻的，也不拥有无穷多的线路。所以那些懂得如何利用这种缺点，让大脑以某种错误方式运转的人能够使你看到根本看不存在的东西。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;190&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以当外部因素以某些方式结合起来——或者更常见的是，有个像魔术师那样有意地操控你，让你发生认知错乱——你就成了任人摆布的蠢货啦。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;191&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以心理学最有用、最具实践价值的部分——我个人认为聪明人一个星期就能被教会——是极其重要的。可惜没有人教过我。我不得不自己在后来的生活中一点一点地学习。那可是相当辛苦的。这个道理十分简单，全学到手之后，我觉得自己（从前）是个十足的傻子。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;191&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;心理学的基础部分——我称之为误判心理学——是极其重要的知识。它包括了大约20个小原则。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;192&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我现在使用一种双规分析。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;192&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;一种方法是理性分析法——就是在你打桥牌时所用的方法，认准真正的利益，找对真正的机会，等等。另一种是评估哪些因素造成潜意识结论——大多数情况下是错误的结论。&lt;/p&gt;
&lt;p&gt;接下来我们要谈到的是另外一种不那么可靠的人类智慧——微观经济学。我发现把自由的市场经济——或者部分自由的市场经济——当做生态系统是很有用的思维方式。&lt;/p&gt;
&lt;p&gt;可惜能这么想的人不多，因为早在达尔文时代以来，工业大亨之类的人认为适者生存的法则证明他们确实拥有过人的能力——你们也知道的，他们会这么想：“我最富有。所以我是最好的。真实老天有眼。”&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;192&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;跟生态系统的情况一样，有狭窄专长的人能够在某些狭窄领域中做得特别好。动物合适生长的地方能够繁衍，同样地，那些在商业世界中专注于某个领域——并且由于专注而变得非常优秀——的人，往往能够得到他们无法以其他方式获得的良好经济回报。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;194&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;规模优势理论的本质是，你生产的商品越多，你就能更好地生产这种商品。那是个巨大的优势。它跟商业的成败有很大的关系。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;194&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;有许多事情是这样的，简答的几何学——简单的现实——能够给你一种规模优势。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;195&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以绿箭只是因为拥有了很高的知名度而获得了规模优势——你们也可以称之为信息优势。&lt;/p&gt;
&lt;p&gt;另外一种规模优势来自心理学。心理学家使用的术语是“社会认同”（Social
Proof）。我们会——潜意识地，以及在某种程度上有意识地——受到其他人的认同的影响。因此，如果大家都在买一样东西，我们会认为这样东西很好。我们不想成为那个落伍的家伙。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;196&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;全球性的销售渠道——这是大企业慢慢建立的——是非常大的优势……
你们不妨想一下，如果你们在这方面拥有足够的优势，别人想要动摇你们的地位是很难做到的。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;196&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;同样的，所有这些巨大的优势使企业内部能够进行更为专门的分工。每个员工因此能够把本职工作做得更好。&lt;/p&gt;
&lt;p&gt;这些规模优势非常大，所以当杰克·韦尔奇到通用电气时，他说：“让它见鬼去吧。我们必须在每个我们涉足的领域做到第一或者第二，否则我们就退出。我不会在乎要解雇多少人，卖掉哪些业务。如果不能做到第一或者第二，我们宁可不做。”&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;198&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以缩小规模、加强专业化程度能够给你带来巨大的优势。大未必就是好。&lt;/p&gt;
&lt;p&gt;当然，规模大的缺陷是……这使得竞争变得更有趣，因为大公司并非总是赢家——企业变大之后，就会出现官僚机构的作风，而这种作风会造成敷衍塞则的情况——这也是人类的本性。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;198&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;他们还会导致某种程度的腐败。换句话说，如果我管一个部门，你管一管部门，我们都有权处理这件事，那么就会出现一种潜规则：“如果你不找我麻烦，我不找你麻烦，这样我们都高兴。”于是就出现了多重管理层，以及不必要的相关成本。然后呢，在人们没法证明这些管理层是有必要存在的情况下，任何事情都要花很长时间才能办成。他们反应迟钝，做不了决定，头脑灵活的人只能围着他们打转。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;199&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;哥伦比亚广播公司是个有趣的例子，它印证了另外一条心理学原则——巴普洛夫联想。如果人们书了你确实不想听的话——也就是让你不高兴的话——你会自然而然地生出抵触情绪。你必须训练自己摆脱这种反应。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;200&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以生活就是两种力量之间无休止的斗争：一边是获得上面提到的那些规模优势，另一边是变得像美国农业部那样人浮于事——农业部的人只是坐在那里，什么也不做。我不知道他们到底干了些什么，但我知道他们没干几件有用的事。&lt;/p&gt;
&lt;div class="section" id="id96"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id235"&gt;沃尔顿谈学习&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;200&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;“以前我既天真又无知，但那时很幸运的事情，因为正是有过那段无知的日子，我猜学到了一个这么多年来一直牢记在心的教训：你可以向每个人学习。我的知识不仅来自手头可以找到的每一本零售刊物，更多的可能来自我马路对面（竞争对手）做法的研究。”&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;206&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;微观经济学的伟大意义在于人能够辨别什么时候技术将会帮助你，什么时候它将会摧毁你。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;209&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以你们必须弄清楚你们有什么本领。如果你们要玩那些别人玩的很好而你们一窍不通的游戏，那么你们注定会一败涂地。那是必定无疑的事情。你们必须弄清楚自己的优势在哪里，必须在自己的能力圈之内竞争。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;210&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;好啦，关于基本的微观经济学模型就说这么多了，加上一点心理学，再加上一点数学，就构成了我们所说的普世智慧的普遍基础。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;223&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;大多数投资经理的情况是，客户都要求他们懂得许许多多的事情。而在伯克希尔·哈撒韦，没有任何客户能够解雇我们，所以我们不需要讨好客户。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;223&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;好好把握少数几个看准的机会比永远假装什么都懂好得多。如果从一开始就做一些可行的事情，你成功的几率要大得多。这难道不是显而易见的吗？&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;224&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我们的确从许多优质企业上赚了钱。有时候，我们收购整个企业；有时候呢，我们只是收购它的一大部分股票。但如果你去分析的话，就会发现大钱都是那些优质企业赚来的。其他赚许多钱的人，绝大多数也是通过优质企业来获利的。&lt;/p&gt;
&lt;p&gt;长远来看，股票的回报率很难比发行该股票的企业年均利润率高很多。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;224&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以窍门就在于买进那些优质企业。这也就买进了你可以设想其惯性成长效应的规模优势。&lt;/p&gt;
&lt;p&gt;你们要怎样买入这些伟大公司的股票呢？有一种方法是及早发现它们——在它们规模很小的时候就买进它们的股票。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;226&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;然而一般来说，把赌注押在企业的质量上比押在管理人员的素质上更为妥当。换句话说，如果你们必须作选择的话，要把赌注押在企业的发展前景上，而不是押在管理者的智慧上。&lt;/p&gt;
&lt;p&gt;在非常罕见的情况下，你会找到一个极其出色的管理者，哪怕他管理的企业平平无奇，你们对他的企业投资也是明智的行为。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;227&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我活了那么久，见识过许多企业所犯的错误，我认为过度地追求减少纳税额是企业犯下大错的常见原因之一。我见过许多人因为太想避税而犯下可怕的错误。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;231&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;最后，我想再次谈谈投资管理。这门生意特别好玩——因为在净值的水平上，整个投资管理业加起来并没有给所有客户创造附加值。这就是它的运转方式。&lt;/p&gt;
&lt;p&gt;当然，水管安装业不是这样的，医疗行业也不是这样的。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id97"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id236"&gt;“我没有什么要补充的”第三篇&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;233&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;量入为出，养成储蓄的习惯。把存起来的钱放进一个延期纳税账户（tax-deferred
account）。日积月累之后，它就会变成一大笔钱。这就是傻瓜也能明白的办法。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id98"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id237"&gt;重读第二讲&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;235&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;哈佛和耶鲁极其成功的投资让我既喜且优。喜的是，这证明学术在世俗事务中往往是有用的。像我这样喜爱学术然而却走进商界的人，对这种世俗成就的反应就像那些对米利都的泰勒斯津津乐道的现代科学家那样。泰勒斯是古代的科学家，他预见到来年橄榄会大丰收，于是就把当地的橄榄压榨机都租下来，发了一笔大财。&lt;/p&gt;
&lt;p&gt;忧的是：（1）受到妒忌心的驱使和推销员的怂恿，其它名牌大学热衷于模仿哈佛和耶鲁，它们未来恐怕会蒙受惨重的损失；（2）那些效仿跟风的推销者获得成功的可能性很小。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;236&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;威廉·庞德斯通的著作《财富方程式》收集了许多现代资料，以十分有趣的方式证明了这个道理。此外，那本书还记录了信息理论的前沿科学家克劳德·香农非凡的投资业绩，那使香农的方法看起来跟查理·芒格的方法差不多。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id99"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id238"&gt;最新的普世智慧：查理问答录&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;237&lt;/span&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;你和沃伦如何评估待收购的企业？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们不太用财务标尺；我们也适用许多主观的标准：我们能够信赖管理层吗？它会损害我们的声誉吗？会出现什么问题？我们理解这个行业吗？这家企业需要注资才能继续运转吗？预期的现金流是多少？我们并不期待它会直线增长，只要价格适中，周期性增长我们也能接受。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;年轻人在工作中应该追求什么？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class="hlr"&gt;我有三个基本原则。同时满足这三个原则几乎是不可能的，但你应该努力去尝试：&lt;/span&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;span class="hlr"&gt;别兜售你自己不会购买的东西。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="hlr"&gt;别为你不尊敬和钦佩的人工作。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="hlr"&gt;只跟你喜欢的人同事。&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我这一生真是非常幸运：由于和沃伦同事，这三个原则我都做到了。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;你对年轻人有什么人生建议吗？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每天起床的时候，争取变得比从前更聪明一点。认真地、出色地完成你的任务。慢慢地，你会有所进步，但这种进步不一定很快。但你这样能够为快速进步打好基础……每天慢慢向前挪一点。到最后——如果你足够长寿的话——像大多数人那样，你将会得到你应得的东西。&lt;/p&gt;
&lt;p&gt;人生在不同的阶段会遇到不同的难题，非常棘手的难题。我认为有三点有助于应付这些困难：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;span class="hlb"&gt;别期望太高；&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="hlb"&gt;拥有幽默感；&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="hlb"&gt;让自己置身于朋友和家人的爱之中。&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最重要的是，要适应生活的变化。如果世界没有改变，我现在身上任然会有12个缺陷。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id100"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id239"&gt;第三讲 论基本的、普世的智慧（修正稿）&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;240&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;你们今天的阅读作业包括杰克·韦尔奇和沃伦·巴菲特分别为通用电气和伯克希尔·哈撒韦股东撰写的最新年度股东信。杰克·韦尔奇拥有工程学博士学位。而沃伦如果愿意，能够取得任何学科的博士学位。这两先生也都是资深的教师。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;240&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;当然，沃伦有一位教授后或者说导师，那就是本杰明·格雷厄姆，他对沃伦的影响很大。格雷厄姆的学问很好，当他从哥伦比亚毕业时，有三个不同学科的系邀请他去攻读它们的博士课程，并要求他一入学就开始授课：（那三个系分别是）文学系、希腊和拉丁古典系、数学系。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;241&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以我认为，学术蕴含了许多普世智慧，而且最好的学术观念确实是有用的。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;241&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这个世界并不是按照跨学科的方法组织起来的。它反对跳出学科的法定范围。大规模的企业也是这样。当然，学术界本身也反对这么做。这一点来说，我认为学术界错的有点离谱，功能失调。&lt;/p&gt;
&lt;p&gt;许多企业之所以会出现那些最糟糕的毛病，功能失调，是因为人们将现实分割为各自为政、互不相干的独立部门。所以如果你想要成为好思想家，就必须养成跳出法定界限的思维习惯。&lt;/p&gt;
&lt;p&gt;你们并不需要了解所有知识，只要吸收各个学科最杰出的思想就行了。那并不难做到。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;242&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;此外，这些方法相互之间也有联系。因此，你必须懂得它们之间是怎样相互影响的。否则你就无法把牌打好。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;242&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以，要想在人生的赌局中获胜，你们应该掌握各种必要的模型，然后反复地思考。桥牌的哲理在生活中同样有效。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;243&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;你们可以向其他学科学习能够更好地解决问题的模型。只要养成正确的思维习惯你们就能做到这一点。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;244&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;总之，人类发明了一种东西，以便弥补我们天生不擅长处理数字的缺陷，这种东西叫做图表。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;248&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;意识形态会让人做出一些古怪的举动，也能严重扭曲人们的认知。如果你们年轻的时候深受意识形态影响，然后开始传播这种意识形态，那么你们无异于将你们的大脑禁锢在一种非常不幸的模式之中。你们的普遍认知将会受到扭曲。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;248&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;沃伦在童年时就观察到这一点。他认为意识形态是危险的东西，决定离它远远的。他终生都离意识形态远远的。这极大地提高了他认知的准确性。&lt;/p&gt;
&lt;p&gt;我通过另外一种方式得到了同样的教训。我的父亲仇恨意识形态。因此，我只要模仿我的父亲、离开那条我认为正确的道路就好了。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;249&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;他们是极端的例子，表明意识形态会让人变成什么样——尤其是那种以非常激烈的方式表达出来的意识形态。由于它给人灌输一些观念，而不是让人心悦诚服地接受一些道理，所以信丰意识形态是很危险的。&lt;/p&gt;
&lt;p&gt;因此，除了要利用来自不同学科的多元思维模型之外，我还想补充的是，你们应该警惕严重的意识形态偏见。&lt;/p&gt;
&lt;p&gt;如果你们把准确、勤奋和客观当成你笃信的意识形态，那倒不要紧。但如果你们因为受到意识形态的影响，而确凿无疑地相信最低工资应该提高或者不该提高，并认为这种神圣的想法是正确的，那么你们就变成了傻子。&lt;/p&gt;
&lt;p&gt;这是一个非常复杂的系统。生活总是环环相扣的。如果综合考虑，你们猜想提高或者降低最低工资会让整个社会变得更加文明，那是没有问题的。这两种想法都对。但如果你们带着强烈的意识形态把自己的观点当做不可动摇的真理，那么我认为你们的想法是很愚蠢的。所以要警惕意识形态造成的思维紊乱。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;249&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;实际上，只要看看心理否认就够了。大约在嫉妒出生之前三个世纪，德摩斯梯尼（注：古希腊伟大的演说家）就说过：“一个人想要什么，就会相信什么。”&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;250&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这种心理效应的轻重程度有所不同。每个人受心理否认的影响都不一样。但这种否认造成的错误认知则会极大地混淆你们将不得不面对的现实。然而，各种心理学教材对这种简单的心理否认并没有足够的重视。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;256&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;道德和涉及心理学的普世智慧考量的关系之密切，是再怎么强调也不为过的。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;256&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;一旦他们开始偷窃，一惯性原则——这也是心理学的重要内容——将很快和有利偷窃的环境结合起来，促使他们养成偷窃的习惯。所以如果你经营一家公司，由于你们的管理不善，导致人们可以轻而易举地盗窃公司的财产，那么你们就给那些替你们工作的人造成了极大的道德伤害。&lt;/p&gt;
&lt;p&gt;这个道理很明显。创建一套严密防止欺诈的管理系统是非常非常重要的。不然的话，你们就会亲手毁掉你们的公司，因为人们既然能够不受惩罚地偷窃，就会拥有一种激励机制引起的偏见，认为糟糕的行为是没有问题的。&lt;/p&gt;
&lt;p&gt;那么如果别人这么做了，你就知道至少有两种心理学原则产生了作用：激励机制引起的偏见和社会认同。不仅如此，发挥作用的还有“谢皮科”效应：假如总体的社会风气很坏，许多人因此而获得利益，你们要是想对此吹响警笛，他们就会反对你们，变成危险的敌人。&lt;/p&gt;
&lt;p&gt;漠视这些原则、容许作恶是非常危险的。强大的心理力量会造成很多恶果。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;259&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;当你们知道该怎么做之后，你们必须依据道德规范来调整自己的行为。并不是你们懂得如何操控人们之后，就可以随心所欲得去操控他们。&lt;/p&gt;
&lt;p&gt;如果你们跨过了道德的界限，而你们试图操控的那个人因为也懂得心理学，所以明白你们的用意，那么他就会恨你们。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;260&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我们看准的依据有时候来自心理学，更多时候来自其他学科。并且我们看准的次数很少——每年可能只有一两次。我们并没有一套万试万灵、可以用来判断所有投资决策的方法。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;260&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我们只是寻找那些不用动脑筋也知道能赚钱的机会。正如巴菲特和我经常说的，我们跨不过七英尺高的栏。我们寻找的是那些一英尺高的、对面有丰厚回报的栏。所以我们成功的诀窍是去做一些简单的事情，而不是去解决难题。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;262&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;例如，有人觉得我总是心不在焉，而且很顽固。要是在英特尔，我可能会干得一团糟。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;262&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;然而，沃伦和我都非常善于改变我们先前的论断。我们致力于提高这种本事，因为，如果没有它的话，灾难就常常找上门来。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;262&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;每个人都必须搞清楚你们有哪方面的才能。你们必须发挥自己的优势。但如果你们想在较不擅长的领域取得成功，那你们的生活可能会过得一团糟。这一点我可以保证。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;263&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我只是说你们可以通过学习，比其他人少犯一些错误——也能够在犯了错误之后，更快地纠正错误。但既要过上富足的生活又不犯很多错误是不可能的。&lt;/p&gt;
&lt;p&gt;实际上，生活之所以如此，是为了让你们能够处理错误。那些破产的人的通病是无法正确地处理心理否认。你们对某样东西投入了巨大的精力，对它倾注了心血和金钱。你们投入的越多，一惯性原理就会促使你们想：“现在它必须成功。如果我再投入一点，它就会成功。”&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;263&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;生活有时候就像扑克游戏，有时候你们即使拿到一把非常喜欢的牌，但也必须学会放弃。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;266&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;问：你能谈谈你为什么离开律师行业吗？&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;266&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;另外，我比较喜欢独立自主，用自己的钱去（投资）赌博。我常常想，我反正了解的比我客户还要多，我干吗要替他办事呢？所以部分原因是我比较自大，部分原因是我想要能够让我独立自主的资源。&lt;/p&gt;
&lt;p&gt;还有就是，我的客户大多数都很好，但有一两个我不是很喜欢。另外我还喜欢资本家的独立性。我的性格向来有好赌的一面。我喜欢算清楚事情，喜欢下赌注。所以我就顺其自然了。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;268&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我也不喜欢拉斯维加斯，即使它现在设有很多适合全家大小一起玩的娱乐项目。我不喜欢跟很多在牌桌上混的人在一起。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;269&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;必须根据自己的实际状况和才能来调整投资策略。我并不认为我能给你一种万金油式的投资策略。&lt;/p&gt;
&lt;p&gt;我的策略对我来说是有效的，但这部分是因为我善于接受亏损。我的心理承受得了亏损。此外，我亏的次数并不多。这两种因素加起来，使得我的策略很有效。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;272&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我可能是个自大狂，但我并不认为我什么都懂。不过我发现那两组工程师都很可能存在偏见，他们提出的结论都对他们自己有利。每一派说的斗鱼他们的天然偏见相合，这让我产生了怀疑。此外，也许我掌握了足够多的工程学知识，所以能够知道（他们的结论）并无道理。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;272&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;有些人虽然比你更有学问，但在他的认知明显受到激励机制引起的偏见或者某些相同的心理因素影响时，你必须有自信推翻他的结论。但有时你不得不承认自己的能力有限——你最好的办法就是信任某位专家。&lt;/p&gt;
&lt;p&gt;实际上，你应该弄清楚你知道什么，不知道什么。在生活中，还有什么比这个更有用的呢？&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;273&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;有些人总是很自信地回答他们其实并不了解的问题，我不喜欢跟他们在一起。在我看来，他们就像那只乱跳舞的蜂蜜，只会把整个蜂窝搞得乱哄哄的。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;274&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我来说说律师的另外一种模型：我很小的时候，我父亲是个律师。他有个好朋友叫格兰特·麦克费登，奥马哈的福特汽车经销商，这人也是父亲的客户。麦克费登先生是个非常了不起的人——他是个白手起家的爱尔兰人。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;274&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在很大程度上，你不得不跟一些非常低劣的人打交道。当律师能赚很多钱，大部分归功于他们
。就算你的客户是个品德高尚的人，你要帮他应付的对手往往也是非常低劣的家伙。这是我不在当律师的一个原因。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;275&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;另外一个原因是我的私欲，但也是因贪欲带来的成功，我才能够更容易去做一个值得尊敬和理性的人。就像本杰明·富兰克林说过的：“ &lt;span class="hlr"&gt;空袋子很那竖起来&lt;/span&gt; 。”&lt;/p&gt;
&lt;p&gt;我认为当我问起那两位顾客时，我父亲的回答方式是非常正确的。他教给我一个道理。什么道理呢？在生活中，为了养家糊口，你不妨偶尔替那些丧失理智的自大狂服务。但你应该像格兰特·麦克费登那样为人处世。&lt;/p&gt;
&lt;p&gt;而且他用的教学方式非常巧妙——因为他不是把这个道理直接灌输给我，而是让我自己通过思考去体会。我必须自己动脑筋，才能明白我应该学习格兰特·麦克费登。他认为如果这个道理是我自己摸索出来的，我会记得更牢。确实是这样的，我到今天还牢牢记住它——尽管已经过去几十年了。这是一种非常巧妙的教育方式。&lt;/p&gt;
&lt;p&gt;这种方式也跟基本的心理学有关，跟基本的文学道理也有关系。优秀的文学作品需要读者略加思索才能理解，那样它对读者的影响会很深，你会更加牢固地记住它。这就是承诺和保持一惯性的倾向。如果你动脑筋才懂得某个道理，你就会更好地记住它。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;275&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;难道用这种方法来教孩子不是很好吗？我父亲故意使用了间接的方法。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;276&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;只要成为能够正确思考的人，你们就可以创造附加值。只要很好地掌握正确的思考方式，能够见义勇为，当仁不让，你们就能够创造很大的附加值。&lt;/span&gt; 只要能够防止或者阻止某些足以摧毁掉你们的事务所、客户或者你所在乎的某些东西的蠢事，你们就能创造很大的附加值。&lt;/p&gt;
&lt;p&gt;你们可以使用一些有效的妙招。例如，我的老同学，斯卡登·阿普斯律师事务所的乔伊·弗洛姆，是个十分成功的律师，原因就在于他非常擅长用一些精妙的比喻来有效传达他的观点。如果你们想为客户服务，或者想要说服别人，用点幽默的比喻是非常有帮助的。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;277&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果你们只能在这样的地方待下去，从他的利益出发去说服他，很可能比其他方面出发去说服他更有效。这也是一种有着极深的生物学根源的强大心理学原则。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;278&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这件任务简单地小孩子都能完成。总顾问只要这样对他的老板说：”约翰，你再这样下去，你的生活就毁了。你会身败名裂的。“这么说就可以了。没有CEO愿意自毁前途、声名扫地。&lt;/p&gt;
&lt;p&gt;这位所罗门的前总顾问为人聪明大度——他的想法也是正确的。然而，他丢了工作，因为他没有应用一点基本的心理学知识。他并不知道，在大多数情况下，要说服一个人，从这个人的利益出发是最有效的。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;278&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果你们用心学，在遇到其他人无法解决的关键问题时，你们就能够表现得游刃有余。只要你们变得明智、勤奋、公正，而且特别擅长说服别人去做正确的事，你们就能够创造附加值。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;281&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;考虑到文明社会的发展方式，有些行业的情况是这样的，如果你是该行业最有钱的人，那么它会是一个糟糕的行业。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;281&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我认为在我们这样的文明社会，富裕的大公司生产橄榄球头盔不是明智的行为。也许法律不应该让那些起诉头盔制造商的人轻易胜诉。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;282&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;人们能够适应不断变化的司法气候。他们有各自的办法。从前是这样，将来也仍会是这样。&lt;/p&gt;
&lt;p&gt;我个人最讨厌的是那些让欺诈变得容易的制度。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;282&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我喜欢海军的制度。如果你是海军的船长，接连工作了24小时，需要去睡觉，所以在恶劣的环境中把船交给非常有能力的大副，而他把船弄搁浅了——这显然不是你的错——他们不会把你送到军事法庭，但你的海军生涯就结束了。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;283&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;海军的模式确实能够促使人们在环境恶劣的时候全神贯注——因为他们知道，如果出事绝对不会获得原谅。&lt;/p&gt;
&lt;p&gt;拿破仑说她喜欢更幸运的将领——他不会支持败军之将。同样地，海军喜欢更幸运的船长。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;283&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;但这种提议很容易在法学院引起争议：”那不是合理的诉讼程序，你没有真的追求正义。“&lt;/p&gt;
&lt;p&gt;我赞成海军的规定，那就是在追求正义——追求让更少船只触礁的正义。考虑到这些规则带来的好处，我不会在乎有位船长受到不公平的对待。毕竟，那又不是把他送到军事法庭。他只需要另外找份工作而已，他从前缴纳的养老金依然归他所有，诸如此类的。所以那对他来说也不会是世界末日。&lt;/p&gt;
&lt;p&gt;我喜欢这样的规则。可惜像我这样的人不多。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;284&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;人们很容易受到他人的思维和行为的严重影响，有时候这种受影响的情况是发生在潜意识层面上的，你觉得这很难理解吗？&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;284&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;嗯，如果你像我一样，你就会觉得有点复杂才有意思。如果你想要毫不费力就能明白，也许你应该加入某种宣称能够解答一切问题的邪教。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;285&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;爱因斯坦曾经很好地总结过这一点：”一切应该尽可能简单，但不能过于简单。“&lt;/p&gt;
&lt;p&gt;我想学习心理学也是这样的。如果有20种因素，并且它们相互影响，你必须学会处理它们——因为世界就是这么复杂。但如果你能够像达尔文那样，带着好奇心逐步解决问题，你就不会觉得很难。你会惊讶的发现，原来你能够学得很好。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;285&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;学科的种类并不多，真正有用的思想也不多。把它们统统弄清楚会给你带来很多乐趣。此外，如果你通过亲自摸索去把它们搞清楚，而不是通过别人的转述死记硬背，你对那些思想的掌握会比较牢固。&lt;/p&gt;
&lt;p&gt;更重要的是，这种乐趣永远不会枯竭。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;285&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;去年我突然意识到自己真是个白痴，居然连现代达尔文主义都没看过，所以我倒了回去，在牛津大学伟大的生物学家道金斯和其他人的帮助下，我补充了这个流派的知识。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;285&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这种理论极其漂亮，极其正确。一旦掌握它之后，它就变得很简单。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;287&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;自然科学的工程学都教得很好。但除了这些领域，其他学科的情况完全是莫名其妙——尽管有些学科的研究人员智商非常高。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;287&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;人类的大脑需要理由才能更好地理解事情。你们应该把现实悬挂在附带理由的理论结构之上。只有那样，你们才能成为一个有效的思考着。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;288&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;一直以来，总有人问我学习是否有捷径。今天我也尝试给你们提供一些学习的窍门，但光靠这样的一次演讲是不够的。正确的做法应该是写一本书。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;288&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;但总是有人要求我：”把你知道的都喂给我吧。“当然，他们说的话往往是这样的：”教我如何不费力气地快速致富。不但要让我快速致富，你还要快速地教我。“&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;288&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我来解释一下为什么现在的教育如此糟糕。部分原因在于不同学科之间老死不相往来的现状。例如，心理学只有和其他学科的原理结合起来才是最有用的。但如果你们的教授并不了解其他学科的原理，那么他就无法完成这种必要的整合。&lt;/p&gt;
&lt;p&gt;可是，如果有个人精通其他学科，致力于将其他学科的原理和心理学结合起来，他这么能够成为心理学教授呢？这样的心理学教授往往会激怒他的同行和上级。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;290&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这样的天才会选择从事心理学研究吗？心理学的尴尬之处在于：（A）就社会心理学而言，人们对它揭示的各种倾向了解得越多，这些倾向的作用就会变得越弱；（B）就临床（治疗）心理学而言，它必须面临一个尴尬的问题：相信虚幻的形象往往能够提高幸福感。所以我认为答案显然是否定的。非常聪明的人不愿意从事心理学研究，正如诺贝尔物理学奖得主马克斯·普朗克不愿意从事经济学研究一样：他认为他的方法无法解决经济学问题。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;291&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;但无论你们选择了哪种生活方式，我认为你们应该尽量去吸收基本的普世智慧，否则就是犯了大错，因为世俗智慧可以让你更好地服务别人，可以让你更好地服务自己，可以给生活带来更多的乐趣。所以如果你们有能力去掌握它却不去掌握，我认为那是很荒唐的。&lt;/p&gt;
&lt;div class="section" id="id101"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id240"&gt;为人师表的责任&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;292&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;基于我们的性格和我们的道德观念，沃伦和我都认为当一名优秀的教师是高尚的职业。我偶尔发表演讲，允许出版这本书；沃伦写那些年报，偶尔发表演讲，与商学院的学生有来往——所有这些都是出于一种为人师表的责任。正确的教育差不多是人类最崇高的职业。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我们认为这个职业非常崇高，所以总是向那些对学习根本不感兴趣的人说教。很少人像我们这样，碰过许多钉子，但仍然乐此不疲。&lt;/p&gt;
&lt;p class="attribution"&gt;——芒格&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class="p"&gt;293&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;有啊，我醉心于智慧，我为追求准确和满足好奇心而醉心。也许我天生高尚，愿意为那些超越我的短暂生命的价值观念服务。但也许我只是在这里自吹自擂。谁知道呢？&lt;/p&gt;
&lt;p&gt;我认为人们应该掌握其他人已经弄清楚的道理。我并不认为人们只要坐下来空想就能掌握普世智慧。没有人那么聪明……&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;294&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;毕竟我从来不曾幻想我的观点能够让世界发生很大的变化。相反，我向来认为做人要低调谦虚，所以我要追求的是：&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;（1）向比我优秀的人学习几种有用的思维方法，帮助我自己避免犯一些我这个年龄段的人容易犯的大错；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;（2）将这些思维方法传授给少数几个由于已经差不多了解了我说的内容而能够轻松地向我学习的人。这两个小小的目标我算是完成得很好了，所以看到世人如此不智，倒也没什么好抱怨的。我把用来对付失望的最佳方法称为犹太人的方法：那就是幽默。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;295&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="hlb"&gt;识字不读好书，等于白识字。&lt;/span&gt;&lt;/p&gt;
&lt;p class="attribution"&gt;——马克·吐温&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id102"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id241"&gt;第四讲 关于现实思维的现实思考？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;298&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;第一个有用的观念是，简化任务的最佳办法一般是先解决那些答案显而易见的大问题。&lt;/p&gt;
&lt;p&gt;第二个有用的观念跟伽利略论断如出一辙。伽利略说，惟有数学才能揭示科学的真实面貌，因为数学似乎是上帝的语言。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;298&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;第三个有用的观念是，光正面思考问题是不够的，你必须进行反面思考。&lt;/p&gt;
&lt;p&gt;第四个有用的观念是，最好的、最具实践性的智慧是基本的学术智慧。但有一个极其重要的前提：你必须以跨学科的方式思考。你必须经常使用所有可以从各个学科的大一课程中学到的概念。如果能够熟练地掌握这些基本概念，你解决问题的方法将不会受到限制。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;298&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;你必须反其道而行，采用跨学科的思维方式，用本杰明·富兰克林的话来说，就是：” &lt;span class="hlb"&gt;如果你想要完成，就自己着手去做。如果不想，就让别人去做。&lt;/span&gt; “&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;299&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果你们在思考问题的时候完全依赖别人，时常花钱请一些专业顾问，那么每当碰到你们那狭小的知识面之外的问题，你们将会遭到很大的灾难。你们不但要浪费很多精力去处理复杂的合作问题，而且还将遇到萧伯纳笔下那个人物所说的情况：“每个职业最终都是蒙骗外行人的勾当。”&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;299&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;通常来说，你的眼界狭窄的专业顾问并不是故意给你误事，而是他的潜意识偏见给你们带来麻烦。他的利益出发点跟你们不一样，所以他的认知往往是有缺陷的。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;299&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;第五个有用的观念是，真正的大效应，也就是lollapalooza效应，通常在几种因素的共同作用下才会出现。例如，多年以来，许多人的肺结核之所以能够治愈，是因为他们同时服用了三种药物。其他的lollapalooza效应，比如说飞机的飞行，也是遵守同样的模式。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;302&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;本质上，我们要做的生意就是创造和维持条件反射。“可口可乐”的商标名称和商标形象将会扮演刺激因素的角色，购买和喝下我们的饮料则是我们想要的反应。&lt;/p&gt;
&lt;p&gt;人们如何创造和维持条件反射呢？喏，心理学教材给出了两种答案：（1）通过操作性的条件反射；（2）通过经典的条件反射，通常被称为“巴甫洛夫反射”，以纪念这位伟大的俄罗斯科学家。由于我们想要得到一种lollapalooza结果，我们应该同时使用这两种引发条件反射的技巧——这样我们就能加强每种技巧所产生的效应。&lt;/p&gt;
&lt;p&gt;我们的任务中操作性条件反射的部分很容易完成。我们只需要（1）讲饮用我们饮料对消费者的回报最大化；（2）一旦我们引发想要的反射之后，将它因竞争对手构建的操作性条件反射而被消除的可能性降到最低。&lt;/p&gt;
&lt;p&gt;就操作性条件反射的回报而言，只有几类对我们是现实的：&lt;/p&gt;
&lt;p&gt;（1）饮料中所含的卡路里和其他成分的营养价值；&lt;/p&gt;
&lt;p&gt;（2）在通过达尔文的自然选择而形成的人类神经系统的影响下起到刺激消费作用的味道、口感和香气；&lt;/p&gt;
&lt;p&gt;（3）刺激品，比如糖和咖啡因；&lt;/p&gt;
&lt;p&gt;（4）当人们觉得太热时的凉爽效应，或者当人们觉得太冷时的温暖效应。&lt;/p&gt;
&lt;p&gt;因为想要得到一个lollapalooza结果，所以我们自然会将这几类回报都囊括在内。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;304&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;毕竟，一种竞争性产品如果未经尝试，就很难鼓励人们养成另外一种截然不同的习惯。每个结了婚的人都明白这个道理。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;305&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这种强烈的巴普洛夫条件反射需要花费很多钱，尤其是要支付许多广告费。我们将会预先花费比我们可以想象到的多得多的钱，但这些钱将会花得很有效。随着我们在新饮料市场上迅速扩张，我们的竞争对手将会面临巨大的竞争劣势，他们无法购买广告来引发他们需要的巴普洛夫条件反射。这种结果和其他“产量创造力量”等效应相结合，应该能够帮助我们在各地赢得和保持至少50%的市场。实际上，由于买家很分散，我们更高的产量能给我们在分销渠道上带来极大的成本优势。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;305&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;因为我们准备将许多昂贵的心理效应和我们的味道联系起来，所以它应该不同于任何标准味道，这样我们就能给竞争对手制造最大的困难，并确保绝无现有的饮料因为味道碰巧和我们的产品相同而获益。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;306&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;人类有一种强大的“有样学样”的天性，心理学家通常称之为“社会认同”。社会认同，仅仅由于看到别人的消费而引起的模仿消费，不但能够让消费者更加容易接受我们的产品，而且还能让消费者觉得自己得到了更多的回报。当我们设计广告和促销计划、在考虑放弃当前的利润以便投入到促进当前和未来的消费时，我们将永远会把这种强大的社会认同因素考虑在内。这样一来，与其他绝大多数产品不同的是，我们的产品卖得越多，就能卖的越好。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;306&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我们可以将利润最大化，前提是我们（像通用电气销售灯泡那样）拥有定价权，有权决定卖给冷饮销售店的糖浆价格和我们的瓶装产品价格。要得到这种能够将利润最大化的控制权，最好的办法是让我们需要的每个独立瓶装厂都成为委托制造商，而不是糖浆买方，更不能让它们拥有永久经营权、能够永远以最初的价格购买糖浆。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;308&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我们将会再次像雅各比那样进行反向思考。我们必须避开哪些我们不想遇到的情况呢？有四种情况明显是我们应该避免的：&lt;/p&gt;
&lt;p&gt;第一，我们必须避免消费者喝了饮料之后感到腻烦的情况，因为根据现代达尔文主义的理论，消费者一旦感到腻烦，其生理机制就会对我们的饮料产生抵抗作用，促使消费者不再继续消费它。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;309&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;第二，我们必须避免失去我们强大的商标名称的情况，哪怕失去一半也不行。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;309&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;第三，由于获得巨大的成功，我们必须避免妒忌产生的恶果。妒忌在十诫中占有显著的位置，因为它是人类的天性。亚里士多德说过，避免妒忌的最佳方法是做到名副其实。我们将致力于提高产品的质量，制定合理的价格，以及为消费者提供无害的快乐。&lt;/p&gt;
&lt;p&gt;第四，等到我们这个品牌的味道占领新市场之后，我们必须避免突然对产品的味道做出重大的改变。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;309&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;此外，味道的改变将会允许竞争对手通过复制我们的口味而取得优势，因为他们可以利用如下两个因素：（1）消费者因为被剥夺了原有的味道而产生的敌对情绪；（2）我们以前的产品创造出来的、对我们原来的味道的热爱。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;311&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;学术界的高级知识分子和企业的高级管理人员之间存在的这种极度无知，其实是高等教育的各种重大缺陷共同造成的lollapalooza效应。因为这种坏效应是lollapalooza级别的，所以必定有多个相互影响的因素。我认为至少有两个因素要为这种情况负责。&lt;/p&gt;
&lt;p&gt;第一，高等学府的心理学研究固然值得钦佩，也很有用，有过需要重要的天才实验，但缺乏跨学科的综合。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;312&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;第二，心理学和其他学科之间老死不相往来的情况十分严重。但是只有跨学科的方法才能够正确地解决现实问题——无论是学术界，还是在可口可乐公司。&lt;/p&gt;
&lt;p&gt;简单来说，其他学科的学者往往瞧不起心理学，但心理学其实又非常有用。与此同时，心理学系的学者往往自视甚高，但心理学的现状其实非常糟糕。当然，自我评价比外界评价更加积极是很正常的现象。实际上，今天为你们做演讲的人可能也面临着同样的问题。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;312&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;艾萨克·牛顿爵士最著名的是他的万有引力理论，但他也说过许多睿智的格言：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="hlr"&gt;“圆滑是一门表达观点而又不树敌的艺术。”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;“如果说我曾发现什么有价值的原理，那应该归功于我的耐心观察，而非其他才能。”&lt;/p&gt;
&lt;p&gt;“没有大胆的猜想，就没有伟大的发现。”&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;“我们造的墙太多，而修的桥太少。”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;“如果我算是一个人物（这一点我非常怀疑）的话，那么我的地位是通过努力工作而获得的。”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;“如果说我对公众有什么贡献的话，那是因为我的耐心思考。”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;“如果说我比其他人看的更远，那是因为我站在巨人的肩膀上。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class="p"&gt;314&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;连爱因斯坦这样的大人物也说过，他的成就取决于四个因素，首先是自我批评，然后才是好奇心、专注和毅力。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;314&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我很喜欢那句广告语：“需要新的机器而尚未购买的公司，其实已经在为它花钱了。”&lt;/p&gt;
&lt;div class="section" id="id103"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id242"&gt;重读第四讲&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;318&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;现在仔细想想，我认为最好的解释是，我在充当业余教师的时候犯了大错。我想要灌输的太多了。一直以来，如果遇到打算对“意义的意义”长篇大论的人，我总是避之唯恐不及。然而我为自己的演讲选择的题目却是“关于现实思维的现实思考？”这是大错的开始。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id104"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id243"&gt;第五讲 专业人士需要更多的跨学科技能&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;322&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;但萧伯纳低估了问题的严重性，他认为这主要是因为专业人士出于自私而故意使坏。但更重要的是，各种相互交织的潜意识心理倾向也对专业人士的行为有经常性的、可怕的影响，其中最容易引起麻烦的有两种：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;激励机制造成的偏见，拥有这种天生的认知偏见的专业人士会认为，对他们自己有利的，就是对客户和整个文明社会有利的；&lt;/li&gt;
&lt;li&gt;铁锤人倾向，这个名称来自于那句谚语：“在只有铁锤的人看来，每个问题都非常像一颗钉子。”&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;治疗“铁锤人倾向”的良方很简单：如果一个人拥有许多跨学科技能，那么根据定义，他就拥有了许多工具，因此能够尽可能少犯“铁锤人倾向”引起的认知错误。此外，当他拥有足够多的跨学科知识，从实用心理学中了解到，在一生中他必须与自己和其他人身上那两种我上面提到的倾向作斗争，那么他就在通往普世智慧的道路上迈进了有建设性的一步。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;323&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我们的教育太过于局限在一个学科里面。重大问题往往牵涉到许多学科。相应地，用单一学科来解决这些问题，就像玩桥牌的时候一心只想靠将牌取胜。&lt;/p&gt;
&lt;p&gt;阿里弗雷德·诺斯·怀特海 （Alfred North Whitehead，1861-1947）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="hlb"&gt;“傻瓜徒有想象力，而缺乏知识；学究空有知识，但缺乏想象力。”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;“真正的勇气并非庸俗英雄的野蛮暴力，而是美德和理性的坚定决心。”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;“令知识死亡的并非无知，而是对无知的无知。”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;“’愚蠢’的问题是全新的发展的开端。”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;“只有文明人才能理解文明。”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;“没有获得成功的人会否认别人的帮助。明智而自信的做法是，对这种帮助表达感激。”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;“几乎所有的新思想在刚出现的时候都有愚蠢的一面。”&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class="p"&gt;324&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;由于这个原因和其他原因，我们对飞行员的训练，是依照一个六要素系统进行的。这六种要素包括：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;要教给他足够全面的只是，让他能够熟练地掌握飞行中用到的一切知识。&lt;/li&gt;
&lt;li&gt;把这些知识统统交给他，不仅是为了让他能够通过一两次考试，而是为了他能够熟练地应用这些知识，甚至能够处理两三种相互交织的复杂的危险的情况。&lt;/li&gt;
&lt;li&gt;就像任何一个优秀的代数学家，他要学会有时候用正向思维，有时候采用逆向思维，这样他就能够明白什么时候应该把主要的注意力放在他想要的那些事情上，而什么时候放在他想要避免的那些情况上。&lt;/li&gt;
&lt;li&gt;他必须接受各门学科的训练，力求把他未来因为错误操作而造成损失的可能性降到最低；最重要的操作步骤必须得到最严格的训练，达到最高的掌握水平。&lt;/li&gt;
&lt;li&gt;他必须养成核对“检查清单”的习惯。&lt;/li&gt;
&lt;li&gt;在接受最初的训练之后，他必须常规性地保持对这些知识的掌握：经常使用飞行模拟器，以免那些应付重要问题的只是因为长期不用而生疏。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class="p"&gt;326&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;但仔细想想，其实它没有那么难，前提是我们考虑到了下面三个因素：&lt;/p&gt;
&lt;p&gt;首先，“所有必要技能”这个概念让我们明白
，我们无需让每个人都像拉普拉斯那样精通天体力学，也无需让每个人都精通其他各门学科。事实上只要让每个人掌握每个学科中真正的大道理就够了。&lt;/p&gt;
&lt;p&gt;其次，在精英教育中，我们拥有足够多的天赋和时间。&lt;/p&gt;
&lt;p&gt;第三，逆向思考和使用“检查清单”是很容易学到的——无论是在飞行时还是在生活中。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;332&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;激情澎湃的人缺乏掌握跨学科只是所需的客观态度，受意识形态影响的人很难拥有综合各门学科知识的能力。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;333&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;硬科学的治学精神与方法既然能够帮助生物学，那么它没有理由帮不到基础程度远远比不上生物学的软科学。在这里我想解释一下我所说的治学精神与方法，它包括下面四点：&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;你们必须依照基础性给各个学科排序，并按照顺序使用它们。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;不管是否喜欢，你们必须熟练掌握并经常使用这四门基础学科最重要的内容，而且对于那些比你们自己的学科更加基础的学科，要给于特别的关注。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;在吸收不同学科的知识时，要弄清楚那些知识是怎么来的，而且不要背离“经济原则”，只要有可能，首先通过自己或其他学科中更为基本的原理对现象进行解释。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;但是如果第3步并没有对现象解释提供有用的新观点，你们可以通过提出假设和进行验证确立的新原理，就像旧的原理创建的方式一样。但你不能使用任何旧的原理冲突的新的原理，除非你们能够证明旧的原理是错误的。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;334&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="hlb"&gt;一切重要的图书都应该立即重读。&lt;/span&gt;&lt;/p&gt;
&lt;p class="attribution"&gt;——叔本华&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class="p"&gt;335&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在利用非正式的教育来弥补自己的知识缺陷的过程中，我发现，虽然我的学习意愿并不算非常强烈，但在这种基本治学精神与方法的指引之下，我的能力得到了极大的提高，这远远超乎我原本的意料。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;336&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在我看来，这种荒唐的现象意味着软科学院系的主要激励机制是很成问题的。错误的激励机制是主要原因，因为正如约翰逊博士曾经一针见血地指出的，&lt;span class="hlr"&gt;如果真理和一个人的利益背道而驰，那么这个人就很难接受真理。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;336&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;软科学教育机构现在这样顽固地容忍单学科的狭隘，不但是毫无必要的，而且也是没有好处的。如果让我来解决的话，我认为约翰逊博士的方法是可行的。请别忘了约翰逊博士描绘学术界由于懒惰而无知的状况时所用的字眼。在约翰逊博士看来，这种行为是“背叛”。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;336&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果责任不能驱使人去改善这种情况，还可以考虑利益。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id105"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id244"&gt;第六讲 一流慈善基金的投资实践&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;344&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;比如说投资顾问，则会让瑞典司机都相形见绌，实际上每个投资专家都公开声明他的业绩高于平均线，尽管事实恰好相反。但你们也许会会想，我的基金至少会在平均线以上啦。它的规模很大，聘请最好的人才，用客观的专业态度谨小慎微地处理投资问题。对此我想说的是，过度的所谓专业态度往往会给你们造成极大的伤害——恰恰是极其仔细的过程常常会造成人们对他忙所得到的结果过度自信。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;346&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在思考中格外谨慎不全是好事，有时居然会造成格外的错误，这种情况当然令人烦恼。但大多数好东西都有讨厌的“副作用”，思考也不例外。要消除思考的副作用，最好的办法是向那些最优秀的物理学家学习，他们会系统性地批判自己。诺比尔奖得主理查德·费曼下面这句话很好地概括了这些物理学家的心态：“首要的原则是你必须别欺骗自己，因为自己是最好骗的人。”&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;349&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在美国，一个人或一个机构如果用绝大多数财富来对三家优秀的美国公司进行长期投资，那么肯定能够发大财。这样一个所有者为什么要在乎其他投资者在某个时刻的业绩比他的好还是坏呢？如果他像伯克希尔一样，理性地认为由于他的购入成本更低，更为关注长期的绩效，而且把大量的资金集中投资在几个他最喜欢的选择上，那么他的长期受益将会非常出色，他就更不会关心这样的问题了。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;349&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;此外，这个世界的好事并不全是由于基金会的捐赠而做成的。更多的好事是由基金会投资的公司通过日常经营完成的。有些公司做的好事比其他公司多得多，因为它们能为投资者提供高于平均线的长期回报。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id106"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id245"&gt;第七讲 在慈善圆桌会议早餐会上的讲话&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;357&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;今天我在这里要谈的是美国股市上涨带来的所谓“财富效应”。&lt;/p&gt;
&lt;p&gt;首先我要坦白相告，“财富效应”是指学院派经济学研究的内容，我从来没有上过哪怕一节经济学课，也从来没有通过预测宏观经济的变化而赚到一分钱。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;357&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;现在每个人都同意两个观点：第一，当股价上涨时，消费意愿会跟着上涨，而当股价下跌时，消费意愿也会跟着下跌；第二，消费意愿对宏观经济而言至关重要，然而对于“财富效应”的规模和时机，财富效应和其他效应之间的相互关系，包括像股价的上涨会促进消费的增加，而消费的增加则会催动股价的上涨这样明显的道理，各个专业人士的意见并不一致。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;362&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果一个基金，或者其他投资者，每年将3%的资产浪费在多余的、不带来任何收益的管理成本上，而其管理的股票投资组合正处于急速上涨的阶段，那么它仍然会觉得变富裕了，尽管浪费的钱不少；而那些得到被浪费的3%的人虽然其实是“灰金客”，却认为他们的钱是通过正当渠道赚来的。这种情况起到的作用是跟那些尚未败露的、肆无忌惮的挪用公款差不多。这个过程能够自我维持很长的时间。而且在这个过程中，那些得到3%的人貌似在消费自己赚来的钱，但他们的钱其实来自一种隐蔽的、由股票价格上涨带来的“财富效应”。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;362&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;可是长久以来，经济学家认为非理性的花销是成功经济不可或缺的一部分，这让我们感到既困惑又不安。我们不妨把非理性的花销叫做“傻子消费”。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;363&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;而且我也认为人们应该认清现实，即使并不喜欢它；实际上，当不喜欢它的时候，就应该认识清楚。我认为人们应该高兴地接受通过仔细思考而无法破解的悖论。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;364&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果所有股票的价值有一半是疯狂哄抬的结果，这种情况不是跟半数退休金基金的资产都是古代艺术品一样可怕吗？&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;367&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;生活中有一个粗略的道理是这样的：如果一个机构在复杂的大环境中有一方面做的不够好，那么它其他方面也非常有可能做的不够好。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;367&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;两个古老的法则能够引导我们：一个是道德的法则，一个是谨慎的法则。&lt;/p&gt;
&lt;p&gt;道德的法则来自塞穆尔·约翰逊，他认为对于一个身居要位的官员而言，保持可以轻易消除之无知就是在道德上的渎职。谨慎的法则是一句广告中蕴含的道理：华纳及石瓦赛公司有句机械工具的广告语说：“需要新的机器而尚未购买的公司，其实已经在为它花钱了。”我相信这个规则对于思想工具来说同样适用。如果你们缺乏正确的思想工具，你们，以及你们试图要帮助的人，就已经深受你们这种可以轻松消除之无知的毒害。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;371&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;请爱护你的声誉，像珍惜你最贵重的珠宝那样——因为信誉就像火焰，点着之后，你可以轻松地让它燃烧，可是一旦把它扑灭，你必须很费力才能再次点燃它。获取好声誉的办法是努力成为你想要成为的人。&lt;/p&gt;
&lt;p&gt;——苏格拉底&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id107"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id246"&gt;第八讲 2003年的金融大丑闻&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;377&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;当时美国通常的会计做法是这样的，假如先给了员工认股权，公司便可以将股票低于市场价格卖给员工，折让给员工的部分就相当于现金（如果员工同时将股票以市场价格立刻卖掉的话），但在做账的时候并不用记为薪酬支出，从而不会影响年报披露的盈利。虽然这种特别奇怪的记账方法遭到某些最聪明正直的会计师的反对，但会计行业还是采纳了，因为大多数企业的管理人员不愿（会计师）将他们从行使股票期权中得到的收益算入公司成本，那样的话他们任职的公司的利润就会下降。会计行业在做出这个特别怪异的决定时竟然奉行的是那些跟优裕的资深会计师截然不同的人所奉行的准则。这项准则通常是那些食不果腹、无权无势的人遵守的：“谁给我面包吃，我就给谁唱歌。”幸运的是，税务部门并没有像会计师行业那样采用这种特别怪异的记账方法。税务部门拥有基本的常识，理所当然地将行使股票期权获得的收益视为薪酬成本，在计算企业所得税的时候会把这部分减去。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;377&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;厄普顿·辛克莱&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;“让人们去理解那些跟他们的利益冲突的事情是很难的。”&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class="p"&gt;379&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;实际上，考虑到这种怪异的股票期权记账方法对企业文化和股市热情的影响，这种说辞往往是正确的。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;388&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;除了少数几个公认的不切实际、过于迂腐、愤世嫉俗的怪物之外，没有人批评宽特科技的财务报表。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;383&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;下面是著名经济学家约翰·肯尼斯·加尔布雷思的名言集锦：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="hlb"&gt;“我们都认为悲观是智力超群的标志。”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;“美当然没有绝对的标准。所以追求美才会如此有趣。”&lt;/p&gt;
&lt;p&gt;“如果你什么都不想做，那么就你去开会吧。”&lt;/p&gt;
&lt;p&gt;“预测经济的惟一功能是让占星学变得令人尊敬。”&lt;/p&gt;
&lt;p&gt;“现代保守主义从事的是道德哲学中最古老的活动，也就是说，他们要为自私寻找一个超级漂亮的道德借口。”&lt;/p&gt;
&lt;p&gt;“许多美国人死于食物过多，而非死于食物太少。”&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;“当面临要么改变想法、要么证明无须这么做的选择时，绝大多数人都会忙于寻找证据。”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;“那些走运的人总是说他们过得幸福是因为他们的道德很高尚。”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;“难道你不明白吗，’让一家’企业停泊在废话当中，和让它驶入麻烦的思维之海比起来，是一种好地太多、太多的做法。”&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;“有权势的人总是宁愿拿全副身价去冒险，也不肯舍弃一点利益。”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;“在任何大型组织里面，和大多数人一起错比一个人对安全得多。”&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="section" id="id108"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id247"&gt;重读第八讲&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;388&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在我看来，做假账无异于在盖高层公寓楼的时候把钢筋从水泥中抽走，允许这么做的行业和国家必将学到惨痛的教训。而且假账的破坏作用比那些害死人的豆腐渣工程更大。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;389&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;自从我写下这第八讲以来，情况已经有所改善。目前美国的会计行业要求职员股票期权的部分真实成本在损益表中必须被记为支出。然而，等到股票期权被行使时，账目上记录的总成本往往比实际发生的总成本低很多。此外，那部分记到盈利下面的成本通常被故意用不正当的办法降低了。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;389&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;享乐是罪恶的最大动因。&lt;/p&gt;
&lt;p class="attribution"&gt;——柏拉图&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id109"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id248"&gt;第九讲 论学院派经济学：考虑跨学科需求之后的优点和缺点&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;391&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;当然，从许多方面来讲，经济学都是软科学中的皇后。它应该比其他软科学出色。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;392&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以你们有权知道一个有趣的事实：我从来没有上过一节经济学课。你们可能觉得奇怪，我既然这么毫无资格，这么还敢大言不惭地发表这次演讲呢？答案是，我在胆量方面是黑带水平，我天生就胆大。就我所知，有些女人在花钱方面是黑带水平，她们天生就会花钱。而我呢，我得到的是胆量黑带。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;393&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这段令人非常悲伤的历史证明了本杰明·富兰克林在《穷查理年鉴》中说过的话：”&lt;span class="hlr"&gt;如果你想要说服别人，要诉诸利益，而非诉诸理性。&lt;/span&gt; “这个人改变了他的愚蠢观点，是因为再不改变的话，他就要吃亏了。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;393&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;伯克希尔取得了非凡的业绩，但我们从来毫不留意僵化的有效市场理论。我们也从来不曾留意这种思想派生出来的各种理论。人们将这些学院派经济学理论用于公司理财，进而演变出诸如资产定价模式等等荒谬的理论，我们从来不去注意。鬼才相信只要投资高波动性的股票，每年就能获得比市场平均回报率高七个百分点的收益呢。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;394&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果篱笆那边，在别人的学科里有更好、更重要的思想，我就无法乖乖地呆在我自己的学科里。所以我就四面八方寻找那些真正有用的重要思想。没有人教我这么做，我天生如此。我还天生喜欢寻根究底。如果遇到难题，这是常见的事情，我就会努力去摸索，如果失败了呢，我就会先把它放在旁边，然后再回来对付它。我花了整整20年时间才搞清楚邪教如何招揽众教以及这种方法为什么会有效，但大学的心理学系到现在还没搞清楚，所以我走在它们前面。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;395&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;依照这种治学方法，你必须领悟所有比你自己的学科更加基础的学科的所有重要思想。只有掌握了哪些最基础的知识和原理，你才能够清清楚楚地解释问题。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;395&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;硬科学的知识组织模型提倡知识应该竟尽可能简化，所有如果有人以更为简洁的方法阐明一个原理，这个原理最初的发现者就会被历史遗忘。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;396&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我向来认为，虽然总是会有很多人比我聪明得多，但是在思维游戏里面，我未必会落后于他们。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;396&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在格里高利·曼昆撰写的教材中，我们可以发现，这位经济学家从其他学科吸取的养分的本领已经非常高明了。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;396&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;书中列举了许多经济学原理：机会成本是一种超级力量，所有希望获得正确答案的人都可以使用。还有，激励机制也是一种超级力量。最后还有”公用品悲剧“的原理，这个原理是由我的老朋友，加州大学芭芭拉分校教授贾雷特·哈丁提出的。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;398&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;经济学有哪些缺陷呢？&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;致命的自闭，导致”铁锤人综合症“，通常会引起经济学家过度强调某些可以量化的因素。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class="p"&gt;399&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;你们不能只拥有一把铁锤，你们必须拥有所有的工具。你们拥有的方法必须不止一种。你们在使用这些工具的时候，应该把它们列成一张检查清单，因为如果指望在需要的时候合适的工具会自动冒出来，那么你们将错过很多好机会。但如果你们掌握了所有的工具，并在头脑中把它们排列成一张检查清单，那么你们将会得到许多用其他方法得不到的答案。&lt;/p&gt;
&lt;p&gt;实际上，每个人都会（1）过度强调那些有相关数据的因素的重要性，因为它们让人们有机会使用在高等学府学来的统计学技巧，并且（2）不把那些可能更加重要但没有相关数据的因素考虑在内。这是我终生试图避开的错误，我从来不后悔自己这么做。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;400&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;托马斯·汉特·摩根在加州理工学院生物系禁止使用弗莱登计算器。有人说：“摩根博士，你到底在搞什鬼啊？”他回答说：“我就像一个在1849年的萨克拉门托河（Sacramento
River）边寻找黄金的人。虽然才智有限，但我能够弯腰捡起大金块。只要能够捡到大金块，我就不会让我系里的人浪费稀缺的资源，用矿金开采的方法去找金子。”这是托马斯·汉特摩根终生奉行的宗旨。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;401&lt;/span&gt;&lt;/p&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;没有采用硬科学基本的全归因治学方法。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;曼昆研究经济学的方式的错误之处在于，他吸收了其他学科的知识，却没有指出这些知识的来源。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;401&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果你不这么做那就像经营企业时使用了一种糟糕的文档归类方法。这削弱了你的能力，让你无法做最好的自己。现在呢，曼昆十分聪明，所以虽然他的方法不完善，但还是做的很出色。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;401&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;曼昆用的就是这种方法。他只是拿过来。这比不拿好的多。但比吸收所有学科的精华、指出借鉴内容的来源并尽可能简化繁为简地使用所有知识的方法差得多。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;402&lt;/span&gt;&lt;/p&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;物理学妒忌。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我把经济学的第三个缺陷称为物理学妒忌。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;402&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我是希望经济学家采用硬科学的基本治学方法，养成指明其借鉴知识的来源的习惯，但我不希望它由物理学妒忌而渴望一种无法到达的准确度。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;403&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;经济学涉及的系统太过复杂。渴望做到物理学那么精确不会给你们带来任何好处，只会让你们陷入麻烦之中，就像麦肯锡那个可怜的傻瓜。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;403&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;要经济学家关注爱因斯坦比较容易理解，因为爱因斯坦说过一句著名的话：“一切应该尽可能简单，但不能过于简单。”&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;404&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以呢，经济学应该模仿物理学的基本治学方法，但是永远不应该追求像物理学公式那么准确的理论。&lt;/p&gt;
&lt;ol class="arabic simple" start="4"&gt;
&lt;li&gt;太过强调宏观经济学。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class="p"&gt;406&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;他肯定有一套非常棒的激励机制来驱动他的员工。必定有一套很好的员工选择系统。他必定非常善于做广告。他确实是。他是个艺术家。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;406&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;一个成功的生意人必须做对很多事情，并用良好的制度来保证不会犯错。同样地，这个问题的答案也不难得到。但这种特殊的成功背后还有其他原因吗？&lt;/p&gt;
&lt;p&gt;我们聘请一些商学院毕业生，他们解决问题的能力并不比你们出色。也许这就是我们很少聘用商学院毕业生的原因吧。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;407&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;极度的成功很有可能是由下面这些因素共同造成的：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;将一到两个因素最大化或者最小化。例如，好事多或者我们的家具电器商店。&lt;/li&gt;
&lt;li&gt;增加一些成功的因素，以便取得更大的成效，这种成效的提高通常是非线性的，让人想起有关临界点或者物理学中的临界物质的理论。结果通常是非线性的。你们只要增加一点点物质，就能得到一种lollapalooza效应。当然，我这辈子都在寻找lollapalooza效应，所以我对那些能够解释这种效应如何发生的模型特别感兴趣。&lt;/li&gt;
&lt;li&gt;将几个优点发挥到淋漓尽致。例如，丰田或者勒斯·施瓦伯。&lt;/li&gt;
&lt;li&gt;顺应某些重大的潮流。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class="p"&gt;408&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;反正我推荐你们使用这种解决问题的方法，遇到问题要进行正向思考和逆向思考。我还建议学院派经济学要更好地研究我在这里展示的这些非常细小的微观经济学问题。&lt;/p&gt;
&lt;ol class="arabic simple" start="5"&gt;
&lt;li&gt;经济学综合的太少。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class="p"&gt;408&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我的第五个批评是经济学中综合太少了，不但没有综合传统经济学之外的知识，也没有综合经济学内部的知识。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;412&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我认为你们在生活中并没有必要去推销那些你自己永远不会购买的东西。即使那是合法的，我也不认为那么做是一个好主意。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;413&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;第二个和综合相关的有趣问题涉及经济学中两个著名的范例。第一个是李嘉图提出的贸易中的比较优势原理，另外那个是亚当·斯密的图钉工厂。当然，这两者都能极大地提高人均经济产出，都能将各种职能分配到那些非常善于执行这些职能的人手里。然而，它们也有很大的差别：前者——图钉工厂——是中央计划的极端典型，它的整个系统是由某个人设计出来的；而后者，也就是李嘉图的相对优势，则完全是自发的国际贸易自动产生的后果。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;415&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;有史以来最聪明的人之一普朗克为什么要放弃经济学呢？答案是，他说：“经济学太难了。你想尽办法，得到的结果却总是无须而不确定的。”这满足不了普朗克追求有序的愿望，所以他放弃了。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;416&lt;/span&gt;&lt;/p&gt;
&lt;ol class="arabic simple" start="6"&gt;
&lt;li&gt;对心理学的极度无知及其造成的负面后果。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class="p"&gt;417&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在这里，我想要给你们一条极端的指令。这套指令甚至比硬科学的基本组织性治学方法还要严格。这是塞缪尔·约翰逊提出来的。实际上，他说如果一个学者能够通过少量的工作轻轻松松地去掉自己的一个无知，却不去做，那么这个学者的行为就等于背叛。这是他的原话，“背叛”。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;417&lt;/span&gt;&lt;/p&gt;
&lt;ol class="arabic simple" start="7"&gt;
&lt;li&gt;对二级或者更高级别的效应关注太少。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class="p"&gt;419&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我通常不会使用正式的可行性报告。我不让人们帮我做可行性报告，因为我不喜欢办工作上乱糟糟的，但是我总是看到有些很愚蠢地去起草可行性报告，许多人觉得它们有用，不管他们有多么愚蠢。在美国，丢一份愚蠢的可行性报告在办公桌上是一种有效的销售技巧。投资银行家更是精于此道。我从来也不看投资银行家的可行性报告。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;419&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;不管怎么说，正如医疗保险的例子所表明的，基于某些深层的心里原因，所有人类制度都会被钻空子，而且人们在钻空子的博弈游戏中表现出了高超的技巧，因为博弈原理有这么大的潜力。社会制度的人并不懂得如何防止钻营。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;420&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;罪魁祸首是那些立法机构。这些机构的许多成员是从法学院毕业的，可是他们通过了鼓励欺骗的法律；他们不认为自己的所作所为对文明社会有极大的破坏作用，因为他们并没有考虑到说谎和欺骗造成的二级后果或三级后果。所以呢，这种情况随处可见，就像日常生活的其他部分一样，经济生活中也充满了欺诈。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;422&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果你们试图和一些经济学教授谈论这个话题——这我已经做过第三次——他们会吃惊地会回避，好像你冒犯了他们似的，因为他们不喜欢这种讨论。这种讨论会让他们的漂亮学科变得一团糟，因为如果你们忽略二级和三级后果，经济学就会简单得多。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;422&lt;/span&gt;&lt;/p&gt;
&lt;ol class="arabic simple" start="8"&gt;
&lt;li&gt;对“捞灰金” 的概念关注太少。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class="p"&gt;423&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;加尔布雷思认为，尚未败露的贪污行为会对经济产生很大的凯恩斯刺激效应，因为那个钱被贪污的家伙以为他仍然像从前那么富裕，于是延续原来的消费方式，而那个贪污的家伙则增加了购买力。我认为加尔布雷思的分析是正确的。&lt;/p&gt;
&lt;ol class="arabic simple" start="9"&gt;
&lt;li&gt;对美德效应和恶行效应不够重视&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class="p"&gt;424&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;但如果你们跟经济学家谈起美德和恶行，他们会感到浑身不自在。因为美德和恶行无法用大量的数据图标来表示。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;425&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我想进一步指出，极端的诚信精神能够让经济系统运转得更好。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;425&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;顺便提一下，每个人都对美国公司的高层管理人员拿那么多薪水感到气愤。人们应该感到气愤的。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;425&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其实好办法就在眼前：如果董事会的成员都不是领薪水的大股东，那么我们就将惊奇的发现，由于我们降低了互惠倾向引发的影响，公司高层管理人员领取太多薪酬的现象将会消失。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;426&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;反正现在的情况与富兰克林的设想截然相反。其中一个现象是，许多教授——他们大多数需要钱——被各种企业委任为董事。&lt;/p&gt;
&lt;p&gt;人们往往没有认识到，人世间大多数结果都是不公平的，而且道德规范有时候必须不公平，才能取得最好的效果。过于追求公平，会给社会制度带来严重的功能障碍。这些制度应该故意制定得对个体不公平，因为这样的话它们整体上对我们大家会更公平。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;426&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;容忍对某些人有一点不公平，以便对所有人公平，这是我向你们所有人推荐的模式。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;427&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;恶行效应引发的另一个有趣问题和妒忌有关。妒忌在摩西的法律中是饱受指责的。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;429&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;凯恩斯说：“介绍新观念倒不是很难，难的是清除那些旧观念。”爱因斯坦说得更好，他把他那些成功的理论归功于“好奇、专注、毅力和自省”。他说的自省就是摧毁你们自己最热爱、最辛苦猜得到的观念。如果你们确实能够善于摧毁你们自己的错误观念，那是一种了不起的才华。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;430&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我呼吁大家熟练地掌握更多的跨学科知识，这样才能更好地理解积极生活和其他一切。我还呼吁大家别因为遇到无法消除的复杂性和悖论而丧气。那只会增加问题的乐趣。我的灵感同样来自凯恩斯：粗略的正确好过精准的错误。&lt;/p&gt;
&lt;p&gt;最后我想重复我以前在相同的场合讲过的一句话：如果你轻车熟路地走上跨学科的途径。你将永远不想往回走，因为那就像砍断你的双手。&lt;/p&gt;
&lt;div class="section" id="id110"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id249"&gt;事关信任&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;433&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;“无论你们多么聪明，总有一些更聪明的人，如果他们真的想骗你们，你们就会上当。所以，要确定与你们同事的聪明人值得你们信赖。”&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="gould"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id250"&gt;第十讲 在南加州大学GOULD法学院毕业典礼上的演讲&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;437&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;父母为子女付出了很多心血，把智慧和价值观传授给子女，他们应该永远受到尊敬。我还很高兴我左边有许多亚洲人的面孔。我这辈子一种很崇拜孔子。我很喜欢孔子关于“孝道”的思想，他认为孝道既是天生的，也需要教育，应该代代相传。你们大家可别小看这些思想，请留意在美国社会中亚洲人的地位上升得有多快。我认为这些思想很重要。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;438&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我非常幸运，很小的时候我就明白这样一个道理：&lt;span class="hlr"&gt;要得到你想要的某种东西，最可靠的办法是让你自己配得起它。这是个十分简单的道理，是黄金法则。&lt;/span&gt; 你们要学会己所不欲，勿施于人。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;438&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;总的来说，拥有这种精神的人在生活中能够赢得许多东西。他们赢得的不只是金钱和名誉。他们还赢得尊敬，理所当然地赢得与他们打交道的人的信任。能够赢得别人的信任是非常快乐的事情。&lt;/p&gt;
&lt;p&gt;有时候你们会发现有些彻头彻尾的恶棍死的时候既富裕又有名，但是周围的绝大多数人都知道他们死有余辜。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;439&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我很小就明白的第二个道理是，&lt;span class="hlr"&gt;正确的爱应该以仰慕为基础，而且我们应该去爱那些对我们有教育意义的先贤。&lt;/span&gt; 不知道怎么的我懂这个道理，并且一辈子都在实践它。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;439&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;另外一个道理——这个道理可能会让你们想起孔子——是，获得智慧是一种道德责任，它不仅仅是为了让你们的生活变得更加美好。而且有一个相关的道理非常重要，那就是你们必须坚持终身学习。如果没有终身学习，你们大家将不会去的很高的成就。光靠已有的知识，你们在生活中走不了多远。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;439&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;层次较低的生活也有同样的要求。我不断地看到有些人在生活中越过越好。他们不是最聪明的，甚至不是最勤奋的，但是他们是学习机器。他们每天夜里睡觉时都比早晨聪明一点点。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;440&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;人类社会只有发明了发明的方法之后才能发展，同样道理，你们只有学习了学习的方法之后才能进步。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;440&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;再拿沃伦·巴菲特来说。如果你们拿着计时器观察他，你们会发现他醒着的时候有一半时间是在看书。他把剩下的时间大部分用来跟一些非常有才华的人进行一对一的交谈，有时候是打电话，有时候是当面，那些都是他信任而且也信任他的人。仔细观察的话，沃伦很像个学究，虽然他在世俗生活中非常成功。&lt;/p&gt;
&lt;p&gt;学术界有许多非常有价值的东西。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;441&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;那时候有个爱开玩笑的教授说：“ &lt;span class="hlb"&gt;什么事法律头脑？如果有两件事交织在一起，相互之间有影响，你努力只考虑其中一件，而完全不顾另外一件，以为这种思考方式既实用有可行的头脑就是法律头脑。&lt;/span&gt; ”我知道他是在说反话，他说的那种“法律”方法是很荒唐的。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;441&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;以为真正重要的大道理占了整个学科95%的份量，所以对我而言，从所有学科吸取我所需要的95%的知识，并将它们变成我思维习惯的一部分，倒也不是很难的事情。当然，掌握这些道理之后，你们必须不断通过实践去使用它们。这就像钢琴演奏家，如果你们不持续练习，就不可能弹好。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;441&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;但这种习惯也会带来危险，因为它太有用了。如果你们使用它，那么当你们和其他学科的专家——也许这个专家甚至是你的老板，所以能够轻而易举地伤害你们——在一起时，你们会常常发现，原来你们的知识比他更丰富，更能够解决他所遇到的问题。当他束手无策的时候，你们有时会知道正确答案。&lt;span class="hlr"&gt;遇到这样的情况是非常危险的。如果你们的正确让其他有身份有地位的人觉得没面子，那么你们可能会引发别人极大的报复心理。我还没有找到避免这个严重问题伤害的完美方法。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;尽管年轻时，我的扑克牌玩得很好，但在我认为我知道得比上级多的时候，我不太擅长掩饰自己的想法。我并没有很谨慎得去努力掩饰自己的想法，所以我总是得罪人。现在人们通常把我当成一个行将就木的没有恶意的古怪老头，但是在从前，我有过一段很难度过的日子。我建议你们不要学我，最好学会隐藏你们的睿见。&lt;/span&gt;
&lt;span class="p"&gt;441&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;那是一种在大型的律师事务所里面往上爬的好办法。&lt;span class="hlb"&gt;但我并没有那么做。我通常率性而为，如果有人看不惯我的作风，那就随便咯，我又不需要每个人都喜欢我。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我想进一步解释为什么人们必须拥有跨学科的心态，才能高效而成熟地生活。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;443&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;西塞罗有句话很著名，他说 &lt;span class="hlb"&gt;如果一个人不知道他出生之前发生过什么事情，那么他在生活中像一个无知的孩童&lt;/span&gt; 。这个道理是非常正确的。西塞罗正确地嘲笑了那些愚蠢得对历史一无所知的人。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;443&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果你们能够做到这一点，我郑重地向你们保证，总有一天你们会在不知不觉中意识到：“我已经成为我同龄人中最有效率的人之一。”&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;444&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;对于复杂适应系统以及人类大脑而言，如果采用逆向思考，问题往往会变得更容易解决。如果你们把问题反过来思考，你们通常就能够想得更加清楚。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;444&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;让我现在就来使用一点逆向思考。什么会让我们在生活中失败呢？我们应该避免什么呢？有些答案很简单。例如， &lt;span class="hlb"&gt;懒惰和言而无信会让我们在生活中失败。如果你们言而无信，那么就算有再多的优点，业无法避免悲惨的下场。所以你们应该养成言出必行的习惯。懒惰和言而无信是显然要避免的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;444&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;年轻人特别容易陷入强烈而愚蠢的意识形态当中，而且永远走不出来。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;445&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以你们要非常小心地提防强烈的意识形态，它对你们宝贵的头脑是极大的危险。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;445&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;我有一条“铁律”，它帮助我在偏向于支持某种强烈的意识形态时保持清醒。我觉得我没有资格拥有一种观点，除非我能比我的对手更好地反驳我的立场。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;446&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这种别陷入极端意识形态的方法在生活中是非常非常重要的。如果你们想要成为明智的人，严重的意识形态很有可能会导致事与愿违。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;446&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;有一种叫作“自我服务偏好”的心理因素也经常导致人们做傻事。它往往是潜意识的，我们所有人都难免受其影响。你们认为“自我”有资格去做它想做的事情，例如，自我透支收入来满足它的需求，那有什么不好的呢？&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;446&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;总的来说，妒忌、怨憎、仇恨和自怜都是灾难性的思想状态。过度自怜可以让人近乎偏执。偏执是最难逆转的东西之一。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;448&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;以为对你们有利的就是对整个社会有利的，也别根据这种自我中心的潜意识倾向来为你们的愚蠢或邪恶的行为辩解，那是一种可怕的思考方式。你们要让自己摆脱这种心理，以为你们想成为智者而不是傻瓜，想做好人而不是坏蛋。你们也必须在你们自己的认知和行动中允许别人拥有自我服务的偏好，以为大多数人将无法非常成功地清除这种心理。人性就是这样。如果你们不能容忍别人在行动中表现出自我服务的偏好，那么你们又是傻瓜。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;448&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;遇到这种情况，正确的说服技巧是本杰明·富兰克林指出的那种。他说：“ &lt;span class="hlr"&gt;如果你想要说服别人，要诉诸利益，而非诉诸理性。&lt;/span&gt; ”人类自我服务的偏好是极其强大的，应该被用来获得正确的结果。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;449&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;另外一种应该避免的事情是受到变态的激励机制的驱动。你们不要处在一个你们表现得越愚蠢或者越糟糕，它就提供越多回报的变态激励系统之中。变态的激励机制具有控制人类认知和行为的强大力量。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;449&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;变态的工作关系也是应该避免的。你们要特别避免在你们不崇敬或者不想像他一样的人手下干活，要不然那是很危险的。&lt;/span&gt; &lt;span class="hlb"&gt;我们所有人在一定程度上都受到权威人物的控制，尤其是那些为我们提供回报的权威人物。要正确地对付这种危险，必须同时拥有才华和决心才行。在我年轻的时候，我的办法是找出我尊敬的人，然后想办法调到他手下去，但是别批评任何人，这样我通常能够在好领导手下工作。&lt;/span&gt; 许多律师事务所是允许这么做的，只要你们足够聪明，能够做的很得体。总之在你们正确地仰慕的人手下工作，你们在生活中取得的成就将会更加令人满意。&lt;/p&gt;
&lt;p&gt;养成一些让你能够保持客观公正的习惯当然对认知非常有帮助。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;449&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;人们还需要养成核对检查清单的习惯。核对检查清单能够避免很多错误，不仅仅对飞行员来说是如如此，你们不应该光是掌握广泛的知识，而是应该把它们在头脑中列成一张检查清单，然后再加以使用。没有其他方法能够取得相同的效果。&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;另外一个我认为很重要的道理就是，将不平等的最大化通常能够收到奇效。&lt;/span&gt; 我认为生活就像比赛，也充满了竞争，我们要让那些最有能力和最愿意成为学习机器的人发挥最大的作用。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;451&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;你们不希望你们的飞机是以一种太过平等主义的方式设计出来的。你们也不希望你们的伯克希尔·哈撒韦采用这样的管理方式。&lt;span class="hlr"&gt;你们想要让最好的球员打很长时间的比赛。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;451&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;我认为这个世界的知识可以分为两种：一种是普朗克知识，它属于那种真正懂的人。他们付出了努力，他们拥有那种能力。另外一种是司机知识。他们掌握了鹦鹉学舌的技巧；他们可能有漂亮的头发；他们的声音通常很动听；他们给人留下深刻的印象。但其实他们拥有的是伪装成真实知识的司机知识。我想我刚才实际上描绘了美国所有的政客。（听众鼓掌。）如果你们在生活中努力想成为拥有普朗克知识的人，而避免成为拥有司机知识的人，你们将会遇到这个问题。到时候会有许多巨大的势力与你们作对。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;452&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;从某种程度上讲，我这代人辜负了你们，我们给你们留下了个烂摊子，现在加利福尼亚州的立法机构里面大多数议员都是左派的傻瓜和右派的傻瓜，这样的人越来越多，而且他们没有一个人是可以被请走的。这就是我这代人为你们做的事情。但是，你们不会喜欢太过简单的事情，对吧？&lt;/p&gt;
&lt;p&gt;另外一件我发现的事情是，如果你们真的想要在某个领域做的很出色，那么你们必须对它有强烈的兴趣。我可以强迫自己把许多事情做的相当好，但我无法将我没有强烈兴趣的事情做到非常出色。从某种程度上来讲，你们也跟我差不多。所以如果有机会的话，你们要想办法去做那些你们有强烈兴趣的事情。&lt;/p&gt;
&lt;p&gt;还有就是，你们一定要非常勤奋才行，我非常喜欢勤奋的人。我这辈子遇到的合伙人都极其勤奋。我想我之所以能够和他们合伙，部分原因在于我努力做到配得起他们，部分原因在于我很精明地选择了他们，还有部分原因是我运气好。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;453&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;另外一个你们需要应付的问题是，你们在生活中可能会遭受到沉重的打击，不公平的打击。有些人能挺过去，有些不能。我认为爱比克泰德的态度能够引导人们作出正确的反应。他认为生活中的每一次不幸，无论多倒霉，都是一个锻炼的机会。他认为每一次不幸都是吸取教训的良机。人们不应该在自怜中沉沦，而是应该利用每次打击来提高自我。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;453&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我爷爷去世许多年啦，我认为自己有责任结果火炬，传达他的价值观。他的价值观之一是，节俭是责任的仆人。芒格爷爷担任联邦法官的时候，联邦法官的遗孀是得不到抚恤金的。如果他赚了钱存不起来，我奶奶将会变成一个凄凉的寡妇。除此之外，家有余资也能让他更好地服务别人。由于他是这样的人，所以他终生量入为出，给他的遗孀留下了一个舒适的环境。&lt;/p&gt;
&lt;div class="section" id="id111"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id251"&gt;艾比克泰德的道德观&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;453&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="hlr"&gt;控制你的情欲，以免它们报复你。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;别根据你的愿望来要求现实，应该根据现实来确定你的愿望。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;说话之前，先理解你要说的话。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;智者不为他缺少的东西悲哀，而为他所拥有的东西高兴。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;如果你想要进步，别在意别人觉得你很愚蠢。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;自以为什么都懂的人不可能开始学习。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;你遇到什么事并不重要，重要的是你做出了什么反应。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;凡事尽力而为，别计较结果。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;人若控制不了自己，自由便无从谈起。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;唯有受过教育的人是自由的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;困扰人们的并非事物，而是他们对事物的看法。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;要和那些比你优秀的人为伴，他们能促使你做到最好。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;赋予并非拥有许多财产，而是拥有很少需求。&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class="p"&gt;454&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我爷爷用他的优质资产的三分之一去交换了那家银行的劣质资产，从而拯救了它。我一直记得这件事情。这件事让我想起豪斯曼（注：A.E. Housman，1859-1936）的一首短诗，那首诗好像是这样的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;别人的想法&lt;/p&gt;
&lt;p&gt;是飘忽不定的，&lt;/p&gt;
&lt;p&gt;他们想着和恋人幽会&lt;/p&gt;
&lt;p&gt;想走大运或出名。&lt;/p&gt;
&lt;p&gt;我总是想着麻烦，&lt;/p&gt;
&lt;p&gt;我的想法是稳重的，&lt;/p&gt;
&lt;p&gt;所以当麻烦来临时&lt;/p&gt;
&lt;p&gt;我早已做好准备。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;你们可能会说：“谁会在生活中整天期待麻烦的到来啊？”其实我就是这样的。在这漫长的一生中，我一直都在期待麻烦的到来。现在我已经84岁啦。就像爱比克泰德，我也拥有一种蒙受恩宠的生活。我总是期待麻烦的到来，准备好麻烦来临时如何对付它，这并没有让我感到不快乐。这根本对我没有任何害处，实际上，这对我有很大的帮助。所以我要把豪斯曼和芒格法官的道理传授给你们。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;455&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;你们在生活中应该追求的是尽可能地培养一张无缝的信任之网。如果你们拟定的婚姻协议书长达47页，那么我建议你们这婚还是不结为妙。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id112"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id252"&gt;第十一讲 人类误判心理学&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id113"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id253"&gt;前言&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;458&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这也许跟我的性格有关，我向来指出和谈论传统智慧中的错误。虽然这些年来我因为这种脾气吃了不少苦头，但是江山易改，本性难移，我并由因为吃了生活中的苦头而改掉自以为是的性格。&lt;/p&gt;
&lt;p&gt;我作出这个决定的第二个原因是，我赞成第欧根尼（Diogenes）的说法。第欧根尼说过：”从来不得罪人的哲学家有什么用呢？“&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id114"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id254"&gt;人类误判心理学&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;459&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我明白人是”社会动物“，他会观察周围人们的各种行为，并自动地接受他们的影响。我还知道人类就像被驯养的动物和猴子，也生活在一种等级结构中，他倾向于尊重当权者，喜欢和同阶层的成员合作，同时对处于下层并与之竞争的人表现出极大的不信任和不喜欢。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;460&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;那时，我渴望更多理论的历史已经已经很长了。这部分是因为，我总是喜欢把理论当作破解难题的工具和满足我那像猴子般的好奇心的手段；部分是因为，我发现理论结构非常有用，能够帮助人们得到他们想要的东西。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;460&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;在我追求知识的过程中，有两种思维习惯起到了很大的作用。第一，我总是试图通过伟大的代数学家雅各比提倡的逆向思维来考虑问题。雅各比说：”反过来想，总是反过来想。”我得到正确判断的方法，通常是先收集各种错误判断的例子，然后仔细考虑该怎样避免得到这些下场。第二，我非常热衷于收集错误判断的例子，所以我完全无视不同行业、不同学科之间的界限。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;460&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;除此之外，我已经明白，现实世界的问题不会恰好落在某个学科的界限之内。它们跨越了界限。如果两种事物存在密不可分的相互关系，我认为那张试图考虑其中一种事物而无视另一种事物的方法是很值得怀疑的。我担心的是，如果我试图用这种方法去解决问题，最终我将会——用约翰·刘易斯（John
L. Lewis）的不朽名言来说——“ &lt;span class="hlb"&gt;没有脑袋，只有一个顶上长着头发的脖子。&lt;/span&gt; ”&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;463&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;人类的感知和认知系统中那些总体上很有用的倾向往往会出错，如果不对比小心提防，就会很容易受到别人故意的操控。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id115"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id255"&gt;一 奖励和惩罚 超级反应倾向&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;464&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我们还应该听取本杰明·富兰克林的建议。富兰克林在《穷查理年鉴》中说过：“ &lt;span class="hlr"&gt;如果你想要说服别人，要诉诸利益，而非诉诸理性。&lt;/span&gt; ”这句睿智的箴言引导人们在生活中掌握一个重要而简单的道理：当你该考虑动用激励机制的威力时，千万千万别考虑其他的。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;465&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;激励机制的超级威力所造成的一个重要后果就是我说的“激励机制引起的偏见”。有的人因为受过教育而变得道德高尚，然而在激励机制的驱动之下，他可能会有意或无意地做出一些不道德的行为，以便得到他想要的东西，而且他还会为自己的糟糕行为寻找借口，就像施乐公司那些为了得到最高提成而不惜损害顾客利益的销售员。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;466&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;帕特森的口头禅是“寿衣没有口袋”，他和卡内基一样，在离开人世之前，把大量的财产都捐作善款了。帕特森的收款机对文明的贡献非常巨大，他在改善和推广收款机方面所做的工作也非常有效，所以他很可能配得起罗马诗人贺拉斯自撰的墓志铭：“我并没有彻底地死去。”&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;468&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;激励机制引起的偏见的另外一个常见后果是，人们倾向于钻各种制度的空子，他们往往在损人利己方面表现得极有创意。因此，几乎所有制度设计都必须具备防止钻空子的重要属性。制度设计还需要遵守如下的原则：尽量避免奖励容易作假的事情。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;468&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;当然，现在驱使人们行动的主要奖励是金钱。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;468&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;同样道理，人类也会为了钱而工作——而且为了钱而更加卖命地工作，因为人类的金钱除了可以换到食物之外，还能换到许许多多美好的东西，拥有或花掉金钱通常也会让人显得有身份。此外，富人往往会出于习惯，更加努力地为金钱而工作，尽管他们早就不需要更多的钱。总的来说，金钱是现代文明的主要驱动力，这在非人类动物的行为中是没有先例的。金钱奖励也跟其他形式的奖励混合在一起。例如，有些人花钱买身份，有些靠身份捞钱，而有些人同时做这两件事。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;469&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;虽然在各种奖励中金钱是最主要的。但它并非是惟一有效的奖励。人们也会为了性、友谊、伴侣、更高的地位和其他非金钱因素而改变他们的行为和认知。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;469&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;实际上，许多拥有心理学博士学位的顾问经常要求商业组织教会管理人员用“祖母的规矩”来管理他们自己的日常行为，借此改善它们的奖励系统。具体来说，祖母的规矩就是要求孩子在吃甜点之前先把他们的胡萝卜吃掉。把它应用到商界，就是要求管理人员每天强迫他们自己先完成他们不喜欢而必要的任务，再奖励他们自己去处理那些他们喜欢的任务。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id116"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id256"&gt;二 喜欢/热爱倾向&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;470&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;喜欢/热爱倾向造成的一个非常具有现实意义的后果就是，它是一种心理调节工具，促使人们：&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;（1）忽略其热爱对象的缺点，对其百依百顺；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;（2）偏爱那些能够让自己联想起热爱对象的人、物品和行动（这一点我们将会在“受简单联想影响的倾向”中讨论）；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;（3）为了爱而扭曲其他事实。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;喜爱/热爱会引发倾慕，反之亦然。倾慕也会引起并且强化喜欢/热爱倾向。这种“反馈模式”一旦形成，通常会造成极端的后果，有时候会促使人们为了帮助自己心爱的人而不惜故意自我毁灭。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id117"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id257"&gt;三 讨厌/憎恨倾向&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;470&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;讨厌/憎恨倾向也是一种心理调节工具，它能促使深陷其中的人们：&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;（1）忽略其对讨厌对象的优点；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;（2）讨厌那些能够让自己联想起讨厌对象的人、物品和行动；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;（3）为了仇恨而扭曲其他事实。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这种扭曲往往很极端，导致人们的认知出现了极大的偏差。当世贸中心被摧毁的时候，许多巴基斯坦人立刻认为是印度人干的，而许多穆斯林则认为是犹太人干的。这种致命的扭曲通常使得相互仇视的双方很难或不可能握手言和。以色列和巴勒斯坦之间很难和解，因为一方历史中记载的事实与另外一方历史中记载的事实大相径庭，很少有相同之处。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id118"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id258"&gt;四 避免怀疑倾向&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;471&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;人们在做决定之前，必须让自己习惯于戴上一个客观的“面具”。这个“面具”能够让人们客观地看待问题，这一点我们将会在下面“避免不一致性倾向”时看出来。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;471&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;是什么引发了避免怀疑倾向呢？如果一个人没有收到威胁，又无需考虑任何问题，他是不会基于通过作出决定来消除怀疑的。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id119"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id259"&gt;五 避免不一致倾向&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;472&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;没几个人能够列出许多他们已经改掉的坏习惯，而有些人哪怕连一个都列举不出来。与此相反，几乎每个人都有大量持续很久的坏习惯，尽管他们自己也知道这些习惯不好。考虑到这种情况， &lt;span class="hlb"&gt;在许多时候我们说三岁看老不是没有道理的&lt;/span&gt; 。在狄更斯的《圣诞欢歌》中，可怜的雅各布·马里的鬼魂说：“ &lt;span class="hlb"&gt;我戴着我在生活中锻造的锁链。&lt;/span&gt; ”&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;472&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在生活中维持许多好习惯，避免或者戒除许多坏习惯，这样的生活才是明智的。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;472&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我们很容易看出来，如果任由避免怀疑倾向引发的快速决定和拒绝改变这种决定的倾向相结合，将会使现代人的认知出现大量的错误。而且实际情况也确实如此。我们所有人都曾和许多冥顽不灵的人打过交道，那些死抱着他们在小时候形成的错误观念，直到进了坟墓还不肯放手。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;473&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;正确的教育应该是一个提高认知能力的漫长过程，以便我们变得足够有智慧，能够摧毁那些因拒绝改变倾向而被保留的错误想法。正如在世界顶尖大学任教的凯恩斯爵士谈及他那些高级知识分子同事时指出的，新思想之所以很难被接受，并不是因为它们本身太过复杂。新思想不被接受，是因为它们与原有的旧思想不一致。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;473&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;当一个精子进入卵子，卵子就会自动启动一种封闭机制，阻止其他精子的进入。人类头脑强烈地趋向于于此相同的结果。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;所以人们倾向于积累大量僵化的结论和态度，而且并不经常去检查，更不会去改变，即便有大量的证据证明它们是错误的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;473&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;与此相反，普朗克说，唯有新的一代成长起来，较少受到旧理论毒害的他们才能接受新理论。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;473&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;处在巅峰期的爱因斯坦非常善于摧毁他自己的思想，但是爱因斯坦晚年却从没有完全接受量子力学。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;473&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;毕竟，如果他们认为某样东西不好，却又为止作出重大牺牲，那他们的行为就会显得和他们的思想不一致。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;474&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;本杰明·富兰克林原本是费城一个默默无闻的小人物，当时他想得到某个重要任务的垂青，于是经常设法请那个人帮他一些无关紧要的小忙，比如说借一本书给他之类的。从那以后，那个大人物就更加欣赏和信任富兰克林了，因为一个不值得欣赏、不值得信任的富兰克林与他借书给富兰克林了的行为中暗示的赞许并不一致。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;474&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;如果有个人受到操控，故意不停地去伤害另外一个人，那么他就会倾向于贬低甚至憎恨那个人。&lt;/span&gt; 这种避免不一致性倾向造成的效应解释了那句谚语所含的道理：“人永远不会忘记自己做过的坏事。”&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;474&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;避免不一致性倾向是如此强大，乃至一个人只要假装拥有某种身份、习惯或者言论，他自己通常就会信以为真。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id120"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id260"&gt;六 好奇心倾向&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;475&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;最好的现代教育机构（这样的机构在许多地方都为数甚少）能够增强人们的好奇心，而好奇心则能帮助人们防止或者减少其他心理倾向造成的糟糕后果。好奇心还能让人们在正式教育结束很久后依然拥有许多乐趣和智慧。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id121"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id261"&gt;七 康德式公平倾向&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;475&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;康德以其“绝对命令”（categorical
imperative，又译为定言令式）而闻名。所谓绝对命令是某种“黄金法则”，它要求人们遵守某些行为方式，如果所有人都遵守这些方式，那么就能够保证社会制度对每个人来说都是好的。应该说，在现代社会，每个有文化的人都表现出并期待从别人那里得到康德所定义的这种公平。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id122"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id262"&gt;八 羡慕/妒忌倾向&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;475&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果某个物种在进化过程中经常挨饿，那么这个物种的成员在看到食物时，就会产生占有那食物的强烈冲动。&lt;span class="hlb"&gt;如果被看到的食物实际上已经被同物种的另外一个成员占有，那么这两个成员之间往往会出现冲突的局面。&lt;/span&gt; 这可能就是深深扎根在人类本性中的艳羡/妒忌倾向的进化起源。&lt;/p&gt;
&lt;p&gt;兄弟姐妹之间的妒忌明显是非常强大的，并且儿童往往比成年更容易妒忌自己的兄弟姐妹。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;476&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;现代生活中的妒忌也无所不在。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;476&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;而现在的投资银行、律师事务所等地方的艳羡/妒忌效应通常比大学教职工中的此效应更加极端。许多大型律师事务所担心艳羡/妒忌会造成混乱，所以它们历来给所有高级合伙人提供的薪酬都是差不多的，完全不管他们对事务所的贡献有多大的差别。我同沃伦·巴菲特一起工作，分享对生活的观察已经几十年了，听到他不止一次明智地指出：“驱动这个世界的不是贪婪，而是妒忌”。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id123"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id263"&gt;九 回馈倾向&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;477&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;回馈倾向不但能够和激励机制的超级威力结合起来产生好的结果，它还跟避免不一致性倾向共同促成了以下结果：（1）人们履行在交易中作出的承诺，包括在婚礼上作出的终于对方的承诺；（2）牧师、鞋匠、医生和其他所有职业人士恪守职责，做出正确的行为。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;479&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;人类生活中最美好的部分也许就是情感关系，情感关系中的双方更感兴趣的是如何取悦对方，而非如何被取悦——在回馈倾向的作用下，这样的情况并不算罕见。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id124"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id264"&gt;十 受简单联想影响的倾向&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;479&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;提高价格的销售策略对奢侈品而言尤其有效，因为那些付出更高价格的顾客因此而展现了他们的良好品味和购买力，所以通常能够获得更高的地位。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;480&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;避免因为过去的成功而做蠢事的正确对策是：（1）谨慎地审视以往的每次成功，找出这些成功里面的偶然因素，以免受这些因素误导，从而夸大了计划中的新行动取得成功的概率；（2）看看新的行动将会遇到哪些在以往的成功经验中没有出现的危险因素。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;480&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在《穷查理年鉴》中，富兰克林提议：“ &lt;span class="hlb"&gt;结婚前要睁大双眼看清楚，结婚后要睁一只眼闭一只眼。&lt;/span&gt; ”也许这种“睁一只眼闭一只眼”的方法是正确的，但我喜欢一种更难做到的办法：“ &lt;span class="hlb"&gt;实事求是地看清现实，可还是去爱。&lt;/span&gt; ”&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;481&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;憎恨和讨厌也会造成由简单联想引起的认知错误。在企业界，我常常看到人们贬低他们讨厌的竞争对手的能力和品德。这是一种危险的做法，通常不易察觉，因为它是发生在潜意识层面的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;有关某个人或某个讨厌的结果的简单联想也会造成另外一种常见的恶果，这可以从“波斯信使综合症”中看出来。&lt;/span&gt; 古代波斯人真的会把信使杀掉，而这些信使唯一的过错是把真实的坏消息（比如说战败）带回家。对于信使来说，逃跑躲起来，真的要比依照上级的心愿完成使命安全的多。&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;波斯信使综合症在现代生活中仍然很常见，尽管不再像原来那样动辄出人命。在许多职业里，成为坏消息传递者真的是很危险。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;481&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;有时候律师们知道，如果他们推荐一种不受欢迎然而明智的解决方案，会招来客户的怨恨，所以他们会继续把官司打下去，乃至造成灾难性的后果。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;481&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;要避免哥伦比亚广播公司那样因波斯信使综合症而自食其果，正确的对策是有意识地，养成欢迎坏消息的习惯。伯克希尔有一条普遍的规矩：“有消息要立刻向我们汇报。只有好消息使我们可以等待的。”还有就是要保持明智和消息灵通，那就是让人们知道你有可能从别处听说坏消息，这样他们就不敢不把坏消息告诉你了。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;481&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;受简单联想影响的倾向通常在消除以德报德的自然倾向方面有惊人的效果。有时候，当某个人接受恩惠时，他所处的情况可能很差，比如说穷困潦倒、疾病缠身、饱受欺凌等等。除此之外，受惠者可能会妒忌施惠者的优越的处境，从而讨厌施惠者。在这样的情况下，由于施惠的举动让受惠者连想起自身的不幸遭遇，受惠者不但会讨厌那个帮助他的人，还会试图去伤害他。这解释了那个著名反应（有人认为是亨利·福特说的）：“这人为什么如此憎恨我呢？我又没有为他做过什么事情。”&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id125"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id265"&gt;十一 简单的、避免痛苦的心理否认&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;482&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;现实太过痛苦，令人无法承受，所以人们会扭曲各种事实，知道他们变得可以承受。我们或多或少都有这种毛病，而这经常会引发严重的问题。这种倾向造成的最极端的后果常跟爱情、死亡和对化学物质（酒精、毒品等）的依赖有关。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id126"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id266"&gt;十二 自视过高的倾向&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;483&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;自视过高的人比比皆是。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;483&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;这种过度高估自己的私人物品的现象在心理学里面有个名称：“禀赋效应”。&lt;/span&gt; 人们作出决定之后，就会觉得自己的决定很好，甚至比没作出这种决定之前所认为的还要好。&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;自视过高的倾向往往会使人们偏爱那些和自己相似的人。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;483&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;由于人类的这种心理特征，相似的人组成的派系群体总是人类文化中非常有影响的一部分，甚至在我们明智地试图消除其最糟糕的效果之后仍如此。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;484&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;和赛马博彩相比，体育彩票更容易上瘾——部分原因就在于人们会自动地过度赞赏他自己得出的复杂结论。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;484&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;自视过高往往会导致糟糕的雇佣决定，因为大部分雇主高估了他们根据面试印象所得结论的价值。防止这种蠢事的正确对策是看轻面试的印象，看重求职者以往的业绩。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;484&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在托尔斯泰看来，那些恶贯满盈的罪犯并不认为他们自己有那么坏。他们或认为&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;（1）他们从来没有犯罪；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;或&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;（2）考虑到他们在生活中遭遇的压力和种种不幸，他们做出他们所做过的事，变成他们所成为的人，是完全可以理解和值得原谅的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;“托尔斯泰效应”的后半部分， &lt;span class="hlr"&gt;也就是人们不去改变自己，而是为自己那些可以改变的糟糕变现寻找借口，是极其重要的。由于绝大多数人都会以可以改变的糟糕表现寻找太多荒唐的理由，由此来试图让自己心安理得，所以采用个人和机构的对策来限制这种愚蠢的观念造成的破坏是非常有必要的。&lt;/span&gt; 从个人层面来说，人们应该试图面对两个事实：&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;（1）如果一个人能够改正糟糕的表现，却没有去改正，而是给自己找各种各样的借口，那他就是品德有问题，而且将会遭受更多的损失；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;（2）在要求严格的地方，比如说田径队或通用电气，如果一个人不做出什么应有的表现，而是不停地找借口，那么他迟早会被开除。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;而机构化解这种“托尔斯泰效应”的对策是：&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;（1）建设一种公平的、唯才是用的、要求严格的文化，外加采用能够提升士气的人力资源管理方法；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;（2）开除最糟糕的不守规矩者。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;485&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我听过一个教育孩子的故事特别有效，那个孩子过了50年还对学到的教训念念不忘。那孩子后来变成南加州大学音乐学院的院长。他小时曾经从他父亲的老板的仓库里偷糖果吃，被他父亲发现之后辩解说，他打算过会儿就放回去。他父亲说：“儿子，你还不如想要什么就拿什么，然后在每次这么做的时候，都把自己成为小偷。”&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;避免因为自视过高而做傻事的最佳方法是，当你评价你自己、你的亲人朋友、你的财产和你过去未来的行动的价值时，强迫自己要更加客观。&lt;/span&gt; 这是很难做到的，你也无法做到完全客观，但比起什么都不做，放任天性的心里倾向不受约束地发展，却又好得多。&lt;/p&gt;
&lt;p&gt;虽然自视过高通常会给认知带来负面的影响，但也能引起某些离奇的成功，因为有时过度自信刚好促成了某项成功。这个因素解释了下面这句格言：“ &lt;span class="hlr"&gt;千万别低估那些高估自己的人。&lt;/span&gt; ”&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;485&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;此外，如果人们因为出色地完成了任务，或者拥有美好的人生而感到骄傲，那么这种自我暂时是一种非常有建设性的力量。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;485&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;此外，一个人只要值得信赖，哪怕他选的道路崎岖不平，他的生活也会比那些不值得信赖的人要好得多。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id127"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id267"&gt;十三 过度乐观的倾向&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;485&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;大约在基督出生之前300年，古希腊最著名的演说家德摩斯梯尼（Δημοσθένης）说：“一个人想要什么，就会相信什么。”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;485&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;解决愚蠢的乐观主义的正确方法是通过学习，习惯性地应用费马和帕斯卡的概率论。&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id128"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id268"&gt;十四 被剥夺超级反应倾向&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;486&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;除此之外，如果有个人即将得到某样他非常渴望的东西，而这样东西却在最后一刻飞走了，那么他的反应就会像这件东西他已经拥有了很久却突然被夺走一样。我用一个名词来涵括人类对这两种损失经验（损失已有的好处和损失即将拥有的好处）的自然反应，那就是被剥夺超级反应倾向。&lt;/p&gt;
&lt;p&gt;人们在表现出被剥夺超级反应倾向的过程中，经常会因小题大做而惹来麻烦。他往往会对眼前的损失斤斤计较，而不会想到那损失也许是无关紧要的。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;486&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;人类和芒格家的狗差不多。&lt;span class="hlr"&gt;人们在失去——或者有可能失去——财产、爱情、友谊、势力范围、机会、身份或者其他任何有价值的东西时，通常会做出不理性的激烈反应，哪怕只失去一点点时也是如此。因此，因为势力范围受到威胁而发生的内耗往往会给整个组织造成极大的破坏。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;486&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;被剥夺超级反应倾向通常能够保护意识形态观点或者宗教观点，因为它能够激发直接针对那些公开质疑者的讨厌/憎恨心理倾向。这种情况会发生，部分原因在于，这些观点现在高枕无忧，并拥有强大的信念维护体系，而质疑者的思想若是得到扩散，将会削弱它们的影响力。大学的认为社科院系、法学院和各种商业组织都表现出这种以意识形态为基础的团体意识，他们拒绝几乎所有和它们的自身的知识有矛盾的外来知识。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;486&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;数百年来，正统教会基于这样的理由杀害了许许多多异教徒，而且在杀死他们之前通常还会施以酷刑，或者干脆就将他们活活烧死。&lt;/p&gt;
&lt;p&gt;极端的意识形态是通过强烈的方式和对非信徒的极大敌意得到维护的，这造成了极端的认知功能障碍。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;487&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;有一种办法能够化解这种受到刻意维护的团体意识，那就是建设一种极端讲礼貌的文化，哪怕双方的意识形态不同，但彼此之间要保持彬彬有礼，就像现在美国最高法院的行为那样。另外一种方法是刻意引进一些对现在的团体意识抱怀疑态度而又能力突出、能言善辩的人。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;487&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;一个一百八十度的景观哪怕损失了一度，有时候也足够引起让邻居反目成仇的被剥夺超级反应倾向。我买过一座房子，原来的房东和他的邻居因为他们之中一人新种了一棵小树苗而结下深仇大恨。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;488&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;有些人可能会觉得我对剥夺超级反应倾向的定义太宽泛，把人们失去即将得到的好处的反应也包括在内，比如说那些老虎机玩家的反应。然而，我认为我对这个倾向的定义还应该更加宽泛一些。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id129"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id269"&gt;十五 社会认同倾向&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;488&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果一个人自动依照他所观察的周围人们的思考和行动方式去思考和行动，那么他就能够把一些原本很复杂的行为进行简化。而且这种从众的做法往往是有效的。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;489&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;当然，家有儿女的父母经常无奈地了解到，青少年特别容易由于社会认同倾向而出现认知错误。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;489&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以对父母来说，预期教训子女，毋宁控制他们交往朋友的质量。后者是更明智的做法。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;489&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在企业的高管层中，像青少年一样有从众心理的领导人也并不少见。如果有家石油公司愚蠢地买了个矿场，其他石油公司通常会很快地加入收购矿场的行列。如果被收购的是一家化肥厂，情况也是如此。实际上，石油公司的这两种收购曾经蔚然成风，而它们收购的结果都很糟糕。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;489&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;社会认同倾向在什么时候最容易被激发呢？许多经验给出了下面这个明显的答案：&lt;span class="hlr"&gt;人们在感到困惑或者有压力的时候，尤其是在既困惑又有压力的时候，最容易受社会认倾向的影响。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;489&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;由于坏行为和好行为都会通过社会认同倾向而得到传播，所以对于人类社会而言，下面两种措施是非常重要的：（1）在坏行为散播之前阻止它；（2）倡导和展现所有的好行为。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;489&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我父亲说，轮到他的时候，他禁止自己效仿其他人从某种程度上来讲是违法的做法。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;489&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;并非所有人都能抵制坏行为的社会传染。因此，我们往往会遇到“谢皮科综合症”：它指的是弗兰克·谢皮科所加入的那个纽约警察局机器腐败的情况。谢皮科因为拒绝和警察局的同事同流合污，差点遭到枪杀。这种腐败现象是由社会认同倾向和激励机制引起的，这两种因素共同造成了“谢皮科综合症”。我们应该多多宣讲谢皮科的故事，因为这个可怕的故事向人们展示了社会认可倾向这种非常重要的因素会造成一种非常严重的邪恶现象。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;490&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在社会认同的范围之内，企业的外部董事通常不会采取任何行动。他们不会反对任何比拿斧头杀人程度轻的事情，只有出现了某些令董事会在公众面前难堪的情况他们才会干预。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;491&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果我们只能从各种涉及社会认同倾向的教训中挑选出一个，并将其用于自我提高的话，我会选择下面这个教训：学会如何在其他人犯错误的时候别以他们为榜样，因为很少有比这个更值得掌握的技能。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id130"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id270"&gt;十六 对比错误反应倾向&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;491&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;大规模的破坏经常会毁掉终身的幸福，比如有的女性很优秀，可是她的父母特别糟糕，结果她可能会嫁给一个只有跟她父母比起俩才算不错的男人。或者说有的男性娶的第二位妻子只有跟第一位妻子比起来才算过得去。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;491&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;人们即使对这种操纵消费者的伎俩心知肚明，也往往忍不住会上当。这种现象部分地解释了报纸上有那么多广告的原因。它还证明了这个道理：了解心理操纵伎俩并非就是一种完美的防御措施。&lt;/p&gt;
&lt;p&gt;当一个人逐步走向灭亡时，如果他每一步都很小，大脑的对比错误反应倾向通常会任由这个人走向万劫不复的境地。这种情况会发生，是因为每一步和他当前位置的对比太小了。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;491&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我们最好记住本杰明·富兰克林那句最有用的格言：“小小纰漏，能沉大船。”&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id131"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id271"&gt;十七 压力影响倾向&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;492&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;每个人都知道，突然的压力，比如遭遇威胁，会导致人体内部的肾上腺素激增，推动更快、更极端的反应。每个上过心理概论课的人都知道，压力会使社会认可倾向变得更加强大。&lt;/p&gt;
&lt;p&gt;有一种现象知道的人不少但还没有被充分认识：轻度的压力能够轻微地改善人们的表现，比如说在考试中；而沉重的压力则会引发彻底失调。&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;但是除了知道沉重的压力能够引起抑郁症之外，很少人对它有更多的了解。例如，大多数人知道“急性应激性抑郁症”（acute
stress
depression）会使人们的思维出现紊乱，因为它引起极端的悲观态度，而且这种悲观态度往往会持续很长时间，导致人们身心俱疲，什么都不想做。&lt;/span&gt; 幸运的是，正如大多数人知道的，这种抑郁症是人类较容易治愈的疾病之一。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id132"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id272"&gt;十八 错误衡量易得性倾向&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;493&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;人类的大脑是有限和不完美的，它很容易满足于容易得到的东西。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;493&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以人类的大脑容易会高估容易得到东西的重要性，因而展现出易得性——错误衡量倾向。&lt;/p&gt;
&lt;p&gt;避免受易得性——错误衡量倾向影响的主要对策通常是按程序办事，包括使用几乎总是很有帮助的检查清单。&lt;/p&gt;
&lt;p&gt;另外一种对策就是模仿达尔文那种特别重视反面证据的做法。应该特别关注的是那些不容易被轻易量化的因素，而不是几乎只考虑可以量化的因素。还有一种对策，那就是寻找并聘请一些知识渊博、富于怀疑精神、能言善辩的人，请他们扮演现有观点的反方角色。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;494&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;实际上，古希腊和古罗马那些伟大的演说家正是使用鲜明的形象作为记忆辅助手段，才能够在不用笔记的情况下滔滔不绝而有条理地发表演讲。&lt;/p&gt;
&lt;p&gt;应付这种倾向时所需要记住的伟大原理很简单：别只是因为一样事实或者一种观念容易得到，就觉得它更为重要。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id133"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id273"&gt;十九 不用就忘倾向&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;494&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;明智的人会终身操练他全部有用然而很少用得上、大多数来自其他学科的技能，并把这当作是一种自我提高的责任。如果他减少了他操练技能的种数，进而减少了他掌握的技能的种数，那么他自然会陷入“铁锤人倾向”引起的错误之中。他的学习能力也会下降，因为需要用来理解的新经验的理论框架已经出现了裂缝。对于一个善于思考的人而言，把他的技能编排成一张检查清单，并常常将这张清单排上用场，也是很重要的。其他操作模式会让他错过许多重要的事物。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id134"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id274"&gt;二十 化学物质错误影响倾向&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;494&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;请参见前面“简单的、避免痛苦的心里否认”&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id135"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id275"&gt;二十一 衰老——错误影响倾向&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;495&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;带着快乐不断思考和学习在某种程度上能够延缓不可避免的衰退过程。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id136"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id276"&gt;二十二 权威——错误影响倾向&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;495&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;和其所有祖先相同，人类也生活在等级分明的权力结构中，所以大多数人生下来就要跟随领袖，能够成为领袖的则只有少数人。因此，人类社会被正式组织成等级分明的权力结构，这些结构的文化则增强了人类天生就有的追随领袖的倾向。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;496&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;对权威人物不应该的尊敬造成了这种情况：这位总裁和许多甚至比他更糟糕的管理人员明明早就该被革除职务，却继续担任一些重要商业组织的领导人。内中蕴含的意义不言自明：选择将权力交给谁时要很谨慎，因为权威人物一旦上台，将会得到权威——错误影响倾向的帮助，那就很难被推翻。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id137"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id277"&gt;二十三 废话倾向&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;497&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;聪明的行政机构应该采取一种非常重要的做法，就是让那些啰里啰嗦、喜欢说废话的人远离严肃的工作。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id138"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id278"&gt;二十四 重视理由倾向&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;人，尤其是生活在发达文化中的人，天生就热爱准确的认知，以及获取准确认知过程中得到的快乐。正式由于这个原因，填字游戏、桥牌、象棋、其他智力游戏和所有需要思维技巧的游戏才会如此广受欢迎。&lt;/p&gt;
&lt;p&gt;这种倾向给人们的启发不言而喻。如果老师在传授知识时讲明正确的原因，而非不给任何原因，只是高高在上地把知识罗列出来，那么学生往往会学的更好。因此，不仅在发布命令之前要想清楚原因，而且还应该把这些原因告诉命令的接受者，没有比这更明智的做法了。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;498&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;总的来讲，如果人们毕生致力于将他们的直接和间接经验悬挂在一个解释“为什么”的理论框架之上，那么他们对知识的吸收和使用就会变得更加容易。实际上，“为什么”这个问题是竖在精神宝库门外的罗塞塔石碑（注：Rosetta
Stone，古埃及石碑，因石碑上用希腊文字、古埃及文字和当时通俗体文字等三种不同语言版本可有埃及国王托勒密五式的诏书而成为今天人们研究古埃及历史的重要历史文物。）&lt;/p&gt;
&lt;p&gt;不幸的是，重视理由倾向是如此强大，乃至一个人给出的理由哪怕是毫无意义的或者是不准确的，也能使他的命令和要求更容易得到遵从。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="lollapalooza"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id279"&gt;二十五 lollapalooza倾向——数种心理倾向共同作用造成极端后果的倾向&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;(The End)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="book-digests"></category><category term="书摘"></category><category term="2021阅读年"></category><category term="书-五星"></category></entry><entry><title>活好</title><link href="/articles/how-many-heartcounts-do-i-have" rel="alternate"></link><published>2021-01-15T10:00:00+08:00</published><updated>2021-01-15T10:00:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2021-01-15:/articles/how-many-heartcounts-do-i-have</id><summary type="html">&lt;p class="first last"&gt;How many heartcounts do I have？&lt;/p&gt;
</summary><content type="html">
&lt;!-- --&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你的人生只有一件事，会是什么？&lt;/p&gt;
&lt;p&gt;答案是：活好！&lt;/p&gt;
&lt;p&gt;判断一个人活得好不好的标准很简单，就看别人想不想和你在一起，希不希望成为你的样子。&lt;/p&gt;
&lt;p&gt;我们见过很多功成名就的人活得并不好，他们的员工和孩子都不想和他们在一起，更不希望成为他们的样子。&lt;/p&gt;
&lt;p&gt;如果你的小孩想要成为你的样子，那还需要使劲教吗？如果你的小孩不想成为你的样子，你再怎么努力教他，有用吗？&lt;/p&gt;
&lt;p class="attribution"&gt;——台湾《商业周刊》创始人 金惟纯&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id8"&gt;觉知弱点——贪、怕、懒、怨&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;把懒和贪放在一起，有一个概念，叫投资回报。&lt;/li&gt;
&lt;li&gt;把懒和怨放在一起，有一个概念，叫无能为力。&lt;/li&gt;
&lt;li&gt;把懒和怕放在一起，有一个概念，叫回避矛盾。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;活好，就是不陷入「既期待高回报，又无能为力、选择逃避」的不作为模式，也就是要首先积极地对自己负责。&lt;/p&gt;
&lt;p&gt;爱因斯坦说（&lt;a class="reference external" href="http://www.news.hypercrit.net/2012/11/13/einstein-on-insanity/"&gt;也有说不是&lt;/a&gt;）：“Insanity: doing the same thing over and over again and expecting different results.”&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id9"&gt;刻意练习——不贪、不怕、不懒、不怨&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;不贪——知足，面对利益&lt;/li&gt;
&lt;li&gt;不怕——勇敢，面对风险&lt;/li&gt;
&lt;li&gt;不懒——勤劳，面对付出&lt;/li&gt;
&lt;li&gt;不怨——担当，面对责任&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id10"&gt;边界与安全感&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;一个人的边界是「感觉」：舒适的时候都是在圈内（安全），逆境的时候都是在圈外（风险）。&lt;/p&gt;
&lt;p&gt;圈内和圈外有很多名字：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;影响圈 | 关注圈&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Performance Zone | Learning Zone&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;M.Scott Peck《少有人走的路1》 —— 心智成熟的旅程&lt;/p&gt;
&lt;p&gt;我感到害怕。就在沮丧的时刻，仿佛神谕一般，我听到一种声音，一种来自潜意识深处的声音：“人生唯一的安全感，来自充分体验人生的不安全感。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id11"&gt;能力与成长&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;人的能力，就是解决问题的能力。能力的强弱，是通过要问题的复杂程度来衡量的，实际上世界上并没有两个一模一样的问题。&lt;/p&gt;
&lt;p&gt;所谓成长，就是不断增强能力，扩大影响圈，解决更多的更难的问题（不仅仅是自己的，更也是社会的）。一个人的能力是有限的，影响圈也是有限的，当要解决更大的问题的时候，一定会和社会、和其他人发生联系。而想要获得和维护良好的人际关系，核心的本质是平等、尊重、不评判。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id12"&gt;文化&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Richard Dawkins《自私的基因》&lt;/p&gt;
&lt;p&gt;总而言之，我们人类的独特之处可以归结为一个词——文化。我是作为一个科学工作者使用这个字眼的，它并不带有通常的那种势利的含义。文化的传播有一点和遗传相类似，即它能导致某种形式的净化，尽管从根本上来说，这种传播是有节制的。&lt;/p&gt;
&lt;p&gt;利他行为背后的目标函数是：最大化个体基因在种群基因库中的占比。 吸血蝙蝠可以讲述一个新的神秘故事，一个关于共享、互助、合作的故事。它们昭示这样一个善良的思想：即使我们都由自私的基因掌舵，好人终有好报。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;手中的权力，不是用来制定僵硬的规则，或者来满足自己的圈内需求，而更多的应该是创造一种让所有参与者共同成长的良性文化，克服贪怕懒怨，并用权力隔离威胁到这种文化传播的异类。&lt;/p&gt;
&lt;p&gt;也要意识到，文化也是有局限性的，没有一种文化可以包容万物，一定程度上文化和格局等同，要像生物态一样，不断迭代和发展——以促进最大范围内的协同发展、共同成长为目标、激发他人的善意，解决别人实际存在的问题。&lt;/p&gt;
&lt;/div&gt;
</content><category term="ideas"></category><category term="文化"></category></entry><entry><title>《你为什么不道歉》</title><link href="/articles/book-digests-9787111601289" rel="alternate"></link><published>2020-07-08T00:00:00+08:00</published><updated>2021-03-05T00:00:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2020-07-08:/articles/book-digests-9787111601289</id><summary type="html">&lt;p class="first last"&gt;Harriet Lerner / 哈丽特·勒纳 | 机械工业出版社 | &lt;a class="reference external" href="https://douban.com/isbn/9787111601289"&gt;ISBN&lt;/a&gt;&lt;/p&gt;
</summary><content type="html">
&lt;!-- --&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id45"&gt;五种错误道歉方式&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id46"&gt;“但是……”型道歉&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;14&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果你喜欢在道歉之后加一句“但是……”，对方的感觉马上就会变味儿。千万要注意这两个字，&lt;span class="hlb"&gt;它会给人感觉你在找借口，会把前面转达的所有信息统统磨掉&lt;/span&gt;。无论你在“但是”部分说明的情况是否属实，这句话都会让道歉行为变得虚伪。这种表达方式的潜台词是：“你看，在那种情况下，我的粗鲁
/ 迟到 / 刻薄语气完全可以理解嘛！”&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id47"&gt;逃避责任式道歉&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;16&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;“很抱歉让你担心了”，也是一种虚伪的道歉。&lt;span class="hlb"&gt;真诚的道歉关注的是道歉者的错误行为，而不是接受道歉一方的情绪反应&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;18&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;“要是……”型道歉&lt;/p&gt;
&lt;p&gt;“要是”这个词也会让道歉接受者怀疑自己的情绪反应。&lt;/p&gt;
&lt;p&gt;可以说，几乎所有以“要是……”开头的道歉都不是真诚的道歉。&lt;/p&gt;
&lt;p&gt;“要是……”型道歉还会让人感觉道歉者居高临下的态度。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id48"&gt;令人困惑的道歉&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;20&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;无论忍你和组织系统，焦虑程度越高，个体对他人的感受和行为（而非对自我感受和行为）所负的责任就越大。受此影响，人们往往会做出混淆因果关系的判断。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id49"&gt;“讨价还价”式道歉&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;21&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;“讨价还价”也是一种会让道歉感觉变味儿的错误做法，道歉者似乎理所当然地认为只要道歉了，对方就必须宽恕和谅解自己。如此一来，道歉仿佛变成了对对方的慰藉。实际上，道歉不应被视为人际关系中讨价还价的筹码，不能认为只要道了歉，对方就必须宽宏大量地既往不咎。&lt;/p&gt;
&lt;p&gt;在密切的人际关系中，“你能原谅我吗”“请原谅我吧”，这些都是重要的仪式化表达，不能轻易脱口而出。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;22&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;不难看出，如果犯错的一方道歉之后马上要求得到原谅，这种做法会压缩受伤害方必需的情绪恢复过程。在道歉方的请求下，后者心肠一软往往会草率地原谅对方，殊不知这样会剥夺自己必要的体验愤怒和痛苦的过程。&lt;/p&gt;
&lt;p&gt;真诚道歉时，每个道歉者都能希望获得对方的谅解和宽恕，但是这种宽恕不能强求，否则它会让对方感到为难，让这份道歉变得面目全非，甚至造成更大的伤害。真诚的道歉，需要给对方足够的时间和空间去化解伤害，只有这样才能达到道歉的目的。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id50"&gt;令人反感的道歉&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;23&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;对那些压根不愿跟你对话的人来说，最好的道歉方式莫过于闭口不言。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id51"&gt;其他可能破坏人际关系的道歉方式&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span class="p"&gt;27&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;注意，不要在毫无意义的小事上反复道歉，在真正重要的问题上表达歉意才让人觉得诚恳。&lt;/p&gt;
&lt;div class="section" id="id9"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id52"&gt;分清界限&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;28&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;要做出真诚的道歉，必须体量对方的感受，并认识到自己的错误。缺少真情实意的道歉，听起来机械枯燥且毫无悔意。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;29&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;有效道歉应当充分关注受害一方的经历和感受，而不是把自己（道歉方）的情绪时刻挂在嘴边。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;30&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;道歉后表现得绝望无助，恨不得让对方马上反过来安慰自己，这不是道歉，而是情感绑架。虽然嘴上在说对不起对方，实际上你给人的感觉是他对不起你，因此受伤害的一方理应理解你的处境有多悲惨，明白你的自责自悔有多深刻，意识到也许你以后都不必再开口道歉了——这显然不是真诚的道歉。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;30&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;说到底，真诚的道歉关注的目标不是道歉方，而是道歉接受放。要想做出情真意切的道歉，应当关注的是受害方的愤怒和痛苦。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id10"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id53"&gt;不要轻描淡写&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;32&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;对于人际关系而言，无法改正行为错误也会造成严重的负面影响。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id11"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id54"&gt;正确有效的道歉&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;33&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;正确有效的道歉需要开门见山直奔主题。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;33&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;遗憾的是，在现实生活中，我们总是看到各种道歉流于形式，使人们无法意识到各自应负的责任，搞不清楚究竟在为何事道歉。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id12"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id55"&gt;如何在面对批评时有效道歉&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span class="p"&gt;36&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;准确的说，他们会认为如果我们不考虑自己的行为并做出道歉，这种人际关系就会陷入停滞。&lt;/p&gt;
&lt;p&gt;特别是在面对毫无来由或过分的批评时，我们很难按捺自己的性子，不能很好的降低防御意识。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;36&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;真诚的道歉具有深刻的治疗作用，无法有效聆听他人观点并做出道歉，往往会葬送我们的人际关系。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;39&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;家庭成员在道歉时，最关键的问题在于，如果我们的目标是维护良好的人际关系，那么必须表现出自己最为成熟的一面，绝不能指责暴跳如雷。反过来说，别人对我们的指责不一定都是错的，因为我们并不是完美无缺的圣人。&lt;/p&gt;
&lt;p&gt;只有在经历过这个阶段后，我们才能听进去孩子的批评和抱怨，才能以开放心态为每个父母都会犯下的错误道歉，才能真正赢得孩子的尊重。换句话说，要想让子女道歉，首先父母必须学会聆听。实际上，这种技巧对于任何人际关系来说都是必须掌握的。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;43&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;接下来是最难的部分，如果有人指责我们，说他的痛苦是我们造成的，这种情况下是很难安静下来聆听对方的观点的。在对话中，我们会下意识地关注那些对我们不公或不正确的观点，并马上做出激烈反应。以开放的心态聆听并提出问题，可以帮助我们更好地了解对方的观点，这是一项很那做到的内心修炼。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;43&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;要做到直面批评和有效聆听，需要付出极大的勇气。&lt;/p&gt;
&lt;div class="section" id="id13"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id56"&gt;如何降低自我防御意识&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;48&lt;/span&gt;&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;意识到你的自我防御机制&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;深呼吸&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;聆听的目的是了解对方观点&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;对不明白的地方进行询问&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;寻找一致观点&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;为自己那部分错误道歉&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;让对方意识到你已经充分了解他们的看法，而且会继续思考所谈的问题&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;感谢批评者和你分享内心的感受&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;主动延续对话&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;分清沟通和羞辱的界限&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;时机不对时应停止聆听&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;表达你的不同看法&lt;/p&gt;
&lt;p&gt;你应当像批评者表明你对事情的不同看法，而不是一味应承对方，做和事佬，为了避免冲突毫无原则的道歉。即使对方不能从你的角度思考问题，你也要听从内心的真实想法。在这个问题上时机非常重要，你可以另找时间表达自己的不同观点，这样有利于对方更好地接受。&lt;/p&gt;
&lt;p&gt;无论道歉的表达有多真诚，无法聆听和体会对方的愤怒和痛苦就不能有效修补破损的人际关系。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id14"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id57"&gt;不会道歉的人&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span class="p"&gt;54&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;有些文化群体非常重视道歉和宽恕行为，有些群体则不甚强调。要了解来自大洋彼岸的不同思维方式，不一定非要成为那里土生土长的居民。实际上，每一种人际关系都具备一定的跨文化特征，因为每个人都会从不同的角度看待问题，从而坚信自己的立场是正确无误的。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;57&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我们对道歉行为的理解和认识与所处的家庭文化环境密不可分，这种影响往往是通过几代人塑造而造成的。只有跳出人际冲突来看待这些观点，我们才能看出这种影响是如何对自己发挥作用的，才能在必要的情况下对其加以修正。&lt;/p&gt;
&lt;div class="section" id="id15"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id58"&gt;完美主义的问题&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;59&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;当个人良好形象受到挑战时，每个人都会做出自我防御，把自己彻底封闭起来。&lt;/p&gt;
&lt;p&gt;有些人对自己要求完美，容不得半点错误，这样会失去向别人道歉的情绪反应空间，起码在自尊心很容易受到打击的领域（如工作场合或者子女教育方面），很难做出道歉。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id16"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id59"&gt;自我价值的意义&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;61&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;完美主义者就像在自卑山谷中走钢丝，随时都有如临深渊的感觉。他们强调自己在各个方面都必须表现优异，殊不知完美都是会犯错、并不完美的普通人。在这种心理模式下，他们甚至都不敢在内心承认自己会犯错。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;61&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;想要做出郑重道歉，首先你要有勇气承认自己并不完美，认识到自己的缺点和能力不足。认清自我也是对自己的尊重，有了这种尊重，你才能承认会做错事，不会产生道歉就低人一等或被人超越的感觉。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;62&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;自我价值感对于人们能否清晰认识自己所犯的错误具有重要意义。自我价值感越强，人们就越容易体会受伤害一方的感受，从而更容易做出发自心底的道歉。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id17"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id60"&gt;难以承受的羞耻感&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;62&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;羞耻感可以极大摧毁一个人的自我价值，是他感觉自己充满缺点、能力不足，游离于人际关系之外。内疚感可以应发懊悔情绪，促使我们道歉，但羞耻感的影响完全不同。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;63&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;羞耻和内疚是两种完全不同的心理情绪。内疚感的产生是因为我们的行为违反了个人价值观和信仰，从而令良心感到不安。内疚感通常与特定的、让我们感到不光彩的行为有关，例如背叛朋友的信任，或是撒谎伤害他人。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;63&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;为避免出现羞耻感，我们不得不把真是的自己隐藏在黑暗中。&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;但是有人会反其道而行之，把羞耻感转变成蔑视、傲慢、控制欲、高人一等、强势和优越感。对于后面这种情况，这些人肯定非常顽固，绝不会向任何人道歉。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;64&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;对于那些能够正视个人伤害行为和愿意承担责任的人来说，为其自我价值奠定基础是非常必要的。只有在这个基础上，伤害过他人的人才能设身处地地为别人着想，才能产生同理心并感到悔恨。只有在这个的基础上，他们才能面对自己并不光彩的行为并做出道歉。当然做出真诚道歉并不一定能改变错误，但毕竟这是个良好的开始。&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id18"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id61"&gt;为什么大恶之人没有悔意&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;65&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;人的恶行越严重，带来的耻辱越大，作恶者就越难以体会受害者的感受并产生悔意。他们反过来会这样为自己开脱：“这不是我的错”“我也控制不了自己”“这件事没什么大不了的”。自我欺骗的程度越深，作恶者自我保护的借口就越多，甚至把责任归咎于受害的一方。他们会这样自我辩解：“这是她自找的”“我这么做是为他好”“这样做是必需的”，甚至“我这还是头一次……”&lt;/p&gt;
&lt;p&gt;无论在个人生活中还是政治场合，只要无法正视违背个人价值观和他人带来的羞耻感，我们就会为自己编织各种自我保护的借口。&lt;/p&gt;
&lt;p&gt;当我们的身份和价值感逐渐消失殆尽时，我们将无法做真诚道歉，必须重新赢得别人的信任。为了生存，我们会把自己包裹在借口、轻视和否定当中。当我们冷静下来重新开始思考时，自我防御已经不只是可以观察和跨越的路障。&lt;span class="hlb"&gt;当我们失去价值观时，自我防御就成了唯一的生活方式。&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id19"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id62"&gt;羞辱犯错者无法解决的问题&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;67&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我们一旦为犯错者贴上羞辱性标签（例如“老色鬼”），无形中就会大大缩小他们忏悔和做出积极改变的可能性。只有那些把犯错误视为人性一部分的人，那些意识到自我形象具有不断变化的多面性的人，才能真正忏悔并做出真诚道歉。换句话说，&lt;span class="hlr"&gt;污名化和妖魔化犯错者不会启发他们的思想，不会软化他们的灵魂，也不会打破他们的自我防御。这样做只能起到相反的作用。&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id20"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id63"&gt;黑暗的童年和其他蹩脚借口&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;67&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;羞辱犯错者固不可取，另外，为犯错者寻找借口和心理原因也无法解决问题。如果把犯错者是为不具备能力、选择和意志的人，他们便会失去其行为真正负责的机会。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;68&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果否认其能力，允许犯错者寻找借口或心理原因，他们就无法维持尊严和信誉。虽然我们有必要考虑犯错者过去和现在的经历对其行为的影响，但痛苦的个人经历或当前状态并不能为他们的错误行为构成正当理由。大多数遭遇创伤经历或苦难当下的人都不会持续伤害他人。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id21"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id64"&gt;给受伤害方的重要建议&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;68&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;受害方总是想着和加害方当面对峙，希望此方式得到诚恳的道歉。他们的道歉方式应明确承认所犯的错误，承认所发生的事实和伤害感情的沟通方式。&lt;/p&gt;
&lt;p&gt;如果得不到期望的结果，受害方往往会感觉再次受到伤害。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;69&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;无论对方做出怎样的反应，注意陈述事实即可。记住，真诚的道歉永远都不是唾手可得的。&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;无论你的沟通方式有多好，只要让犯错者感觉受到指责或威胁，他们就不会主动承担责任和感到悔意。&lt;/span&gt; 对方是否愿意为错误行为承担责任，这一点和他们是否爱你毫无关系。&lt;span class="hlr"&gt;实际上，承担责任、产生同理心和悔意，以及做出真诚的道歉的能力，取决于犯错者的自爱程度和自我尊重程度。换句话说，我们只能自我检视这些能力，并不能将其赋予他人。&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id22"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id65"&gt;怎样应对高度自我保护的犯错者&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span class="p"&gt;72&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;有些人死也不肯道歉，而且根本改变不了。他们自我保护意识国强，随时会出现羞耻感，无法或不愿意客观地看待自己我，不能承认错误并承担起应付的责任。&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;实际上很多时候，道歉和妥协是一种需要当事人双方进行互动的艺术，会根据具体情况随时出现变化。这就意味着，如果你无法得到对方的道歉，那么很可能这种情况部分是因为你造成的，哪怕你对此毫不知情。这句话可能让满腹委屈的受伤害方无法接受，但是问题是事实的确如此。&lt;/span&gt;&lt;/p&gt;
&lt;div class="section" id="id23"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id66"&gt;强调事实&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;74&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;受到不公正责备的人在沟通时会充满敌意地聆听对方。带着这种戒备心理交流，我们会毫无意识地关注那些被夸大、扭曲和抹黑的事实，而不是关注对方想要表达的核心内容。如此一来，双方便会陷入争吵，为了细枝末节的问题去较真。一单开始争吵，道歉就成了遥不可及的目标。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;75&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果你想让对方反思自己的行为并做出道歉，千万记住一个沟通基本原则——只对事，不对人。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;76&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;自相矛盾的是，恰恰是在面对自己最为信赖和重要的人际关系时，我们才会表现出极不成熟和高度自私的一面。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id24"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id67"&gt;言简意赅&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;77&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;当对方不愿听你表达时，他们能够接受的信息非常有限。如果你的表达太絮叨，无形中会助长对方的排斥心理，根本不可能有效感受你的愤怒或痛苦。这是因为他们会关闭和清空内心的情绪反应空间，无法接受你传达的信息，无法思考你想表达的真正观点。无论对方年纪多大、是否成熟，这种沟通方式都是无效的。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;81&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;面对不肯悔改的犯错者，我们总是喜欢过度渲染问题，展开长篇大论的说教，仿佛这样就能改变对方的心意。实际上这样做毫无益处，甚至会让问题变得雪上加霜。我们很难意识到，自己的语气和啰嗦表达会起到完全相反的效果。尽管每每碰壁，很多人还是认为说得越多越好，这样才能让对方意识到其观点的正确性，意识到对他人造成的伤害有多深。&lt;/p&gt;
&lt;p&gt;尽管没有做过大规模调研，但我的观察表明，&lt;span class="hlr"&gt;在容易引起激烈情绪反应的对话中，一方越是长篇大论，另一方自我封闭的速度就越快。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;82&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;诚然，在很多情况下，较长的时间有利于人际关系的修补，有利于对方充分理解你的愤怒或痛苦感受。但是在很多小事上，言简意赅的表达反而能更好地解决问题。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id25"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id68"&gt;不要羞辱对方&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;85&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;通过羞辱对方，我们可令他人作出道歉，这是因为羞辱这种强迫力量。如果受到羞辱的人地位相对较低，他们会遵从我们的要求做出强制性道歉。但是羞辱并不能激发对方的反省和自我审视，不利于犯错者的个人成长。在自我贬低和自我责备的环境下，犯错者是不可能形成自爱行为的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我们只能自己为自己的行为道歉，不能为自己和他人的不同道歉。&lt;/p&gt;
&lt;p&gt;&lt;span class="hlr"&gt;当我们从批评具体行为转变为攻击他人摇摇欲坠的个人价值时，对方反思其错误行为、体会受害者感受、做出忏悔以及修正错误的可能性会大大降低。羞辱只会让我们和他人的人际关系受到根本性损害，哪怕这种损害可能多年之后才会显现出来。&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id26"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id69"&gt;如何分清责任？一个令人恼火的问题&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;85&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果无法理清沟通双方该为哪些问题负责，道歉和人际关系修复的过程便充满困惑。如果你是受到伤害或感到愤怒的一方，你应当尽可能弄清楚自己在这种复杂互动中发挥的作用。当然，想要弄清楚这个问题并不容易。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id27"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id70"&gt;最后的忠告&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;90&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;人总是这样，在被命令该如何思考、感受和行动时，我们很难做出积极响应，被人命令道歉也是如此。&lt;span class="hlb"&gt;只有不强迫对方说对不起，你才有可能实现让其道歉的目的。&lt;/span&gt; 反之，如果对方的道歉是在你的强迫下做出的，这种道歉看到不是真心实意的。在和对方沟通之前，你可以想想看真诚的、发自内心的道歉应当是怎样的。只要对方是出自善意做出的道歉，对我们来说都是可以坦然接受的。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id28"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id71"&gt;怎样教会孩子道歉&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;90&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;实际上，道歉能力是一项父母向可以向子女馈赠的重要财富。它能让孩子形成强烈的公正感，如果父母抵触或否认孩子知道的事实，肯定会让孩子产生心理上的负担。&lt;/p&gt;
&lt;p&gt;语言不是表达歉意的唯一方式&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;101&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;就算再顽固不化的犯错者，也会试着通过非语言方式缓解气氛，重归于好，或是通过具体行动表明自己的歉意和希望修补人际关系的愿望。&lt;span class="hlb"&gt;无论哪种方式，能够有效让对方感受到道歉的诚意都是可行的。&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id29"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id72"&gt;和解失败是谁的过错&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span class="p"&gt;108&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;人类很奇怪，越是重要持久的人际关系，我们越是难以对错误行为做出道歉。在这种情况下，双方都认为如果对方不反思自己的行为并做出道歉，两人之间的关系就会止步不前。至于问题是哪一方硬气的，有何不对之处，怎样才能修补人际关系以及谁该先道歉的问题，双方则很少达成一致。&lt;/p&gt;
&lt;div class="section" id="id30"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id73"&gt;司空见惯的问题&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;110&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;但现在他们都感觉精疲力竭，谁也不愿做出妥协，都坚持认为自己的观点正确无误。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id31"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id74"&gt;一个巴掌拍不响&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;111&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;无论退缩还是纠缠，都是为了摆脱压力、减轻负担。这两种方式无所谓好坏对错，但退缩者遇到纠缠者，往往会陷入恶性循环。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id32"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id75"&gt;错在哪一方&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;112&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我们总是这样，一遇到问题就像搞清楚谁对谁错，是谁挑起的争端。实际上人际关系问题不是非黑即白那么简单。上面两位旁观者既对也不对，因为人际关系是以圆形而不是线性方式互动的。也就是说，一方的行为会引发并强化另一方的行为。对于人际关系问题来说，我们要考虑的真正问题不是争端由哪一方挑起或是哪一方不对，而是双方怎样才能在互动中各自修正自己的应对方式。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id33"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id76"&gt;各自承担责任是迈向成功的第一步&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;113&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;光做出道歉还不够，双方至少有一方必须改变其应对压力的习惯性行为。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;113&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;实际上，一方只需做出微小的行为改变，就能带来人际关系的巨大改观，因为这样做能有效打破双方错误模式形成的恶性循环。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id34"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id77"&gt;有效表达&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;116&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;简明扼要地说出沟通的底线，表明我们需要的容忍限度，既有利于维护人际关系，也有利于保持自我。这样做最终会为我们的人际关系带来友好和尊重。大多数性格外向的人宁愿面对态度强势且明确要求自己做出行为改变的伴侣，也不愿面对三缄其口的伴侣。确定具有建设意义的抱怨可以让伴侣意识到你希望改善人际关系，而且愿意为此努力付出。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;119&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果我们总是以焦虑的态度或责备的方式过于关注他人，做出道歉无疑是有效的人际关系修补方式。在道歉中，我们应说明在自我关注方面出现的不足。做好自我关注有利于打破”纠缠
~退缩“的沟通模式，无论对方做出怎样的反应，都能使我们的立场得到稳固。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id35"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id78"&gt;改变行为需要付出长期努力&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;119&lt;/span&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;在需要时做出道歉&lt;/li&gt;
&lt;li&gt;让对方感觉到被爱被尊重&lt;/li&gt;
&lt;li&gt;尊重彼此的不同，包括应对压力的不同方式&lt;/li&gt;
&lt;li&gt;强调自我行为的改变，而不是等待对方先做出改变&lt;/li&gt;
&lt;li&gt;停止负面评论对婚姻关系的伤害，以正面鼓励取而代之&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id36"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id79"&gt;错误成见&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;121&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;简而言之，你应当既保持自我，又努力展现出新的一面。没有这种冒险意识，你会陷入对自我墨守成规的认识，从而无益于人际关系的改变。哪些善于做出真诚道歉的人，不但能意识到保持自我的重要性，同样能意识到展现出自我另一面的重要性。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id37"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id80"&gt;任重道远&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;123&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;正所谓欲速则不达，在如此重要的问题上，最关键的不是改变问题的速度，而是改变的方向。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id38"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id81"&gt;最令人震惊的道歉&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;继续对话&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;131&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;对于他人希望忘记的经历，我们最好不要过度探寻或是往事重提。&lt;/p&gt;
&lt;div class="section" id="id39"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id82"&gt;关于原谅&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id40"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id83"&gt;究竟何为原谅&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class="p"&gt;139&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;从这个意义上说，他们真正寻求的是解脱和放下，希望继续前行的超脱，而不是对对方的原谅。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;140&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;从佛教观点来说，原谅的本质是放下。但这并不代表我们必须为了放下而原谅他人的特定行为。&lt;/p&gt;
&lt;p&gt;&lt;span class="p"&gt;140&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;放下是一种自我保护，它能帮助我们从负面情绪中得到解脱。长期陷入慢性痛苦会使我们的精力和创造力逐渐被侵蚀，每一天都过的郁闷而失落。一旦被无益的痛苦牢牢攥住，我们就会停留在过去，无法正确面对当下，无法乐观积极地面向未来。心理学认为愤怒情绪可以分为两种，一种是有益的愤怒，它能维持我们的尊严和自我；另一种是无益的愤怒，它会让我们生活在黑暗的痛苦中无法自拔，时刻充满怨恨和报复心理。显然，后者只会让我们充满负面情绪，生活从此变得消极黯淡。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id41"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id84"&gt;最后的忠告&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;153&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;最重要的是，千万不要让别人告诉你该不该原谅犯错者&lt;/span&gt; ，哪怕他们是你的心理治疗师、母亲、老师、精神指导、好友或人际关系问题专家。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id42"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id85"&gt;怎样让内心平静&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id43"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id86"&gt;令人苦恼的执念&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;164&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;最后，沉迷于愤怒的内心对话可以让我们在幻想中寄希望于未来——说不定哪天犯错者会幡然醒悟，意识到对我们造成的伤害呢？其实这种做法不过是自欺欺人罢了，难道仅凭一厢情愿的想象，就能让对方对我们的痛苦感同身受吗？&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id44"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id87"&gt;知易行难&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="p"&gt;171&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="hlb"&gt;对受到伤害的一方来说，最难接受的是犯错者可能永远都不会道歉，永远都不会客观地看待自己，永远都不会敞开心扉聆听他人的感受。想要放下愤怒和憎恨，我们必须放弃改变过去的幻想，放弃假设未来的念头。只有做到这些，我们才能赢得当下，慢慢摆脱愤怒感对自己的侵蚀。&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="book-digests"></category><category term="书摘"></category><category term="2020阅读年"></category><category term="书-五星"></category></entry><entry><title>尊重，就是不要用自己的标准要求别人</title><link href="/articles/respect-dont-apply-your-standard-to-the-others" rel="alternate"></link><published>2020-05-09T10:00:00+08:00</published><updated>2020-05-09T10:00:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2020-05-09:/articles/respect-dont-apply-your-standard-to-the-others</id><summary type="html">&lt;p class="first last"&gt;每个人都不一样，和而不同。&lt;/p&gt;
</summary><content type="html">&lt;!--  --&gt;
&lt;p&gt;人和人都是不同的，视角、想法、诉求都不一样。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;每个人都在做自己认为「对」的事情。&lt;/p&gt;
&lt;p&gt;如果用「非黑即白」的二元逻辑去看别人的想法。&lt;/p&gt;
&lt;p&gt;只要和自己不一样，       那么别人都是「不对」的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因为不一样，所以有矛盾和冲突。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;表达清楚自己的诉求和方法。&lt;/p&gt;
&lt;p&gt;理解清楚别人的诉求和方法。&lt;/p&gt;
&lt;p&gt;和而不同 — 从不同中找相同，形成共识，建立信任。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不要用自己的标准要求别人。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;共识越多，拉近距离。&lt;/p&gt;
&lt;p&gt;共识越少，保持距离。&lt;/p&gt;
&lt;p&gt;志同道合，或者，道不同不相为谋。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;「为你好」是一种自私的绑架&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;「好」只是自己认为的「好」，还是别人的 「真正诉求」？&lt;/p&gt;
&lt;p&gt;澄清自己认为好的标准，不要让别人欠下无法承受的人情债。&lt;/p&gt;
&lt;p&gt;从别人真正的诉求角度，力所能及地去帮助别人才是真的好。&lt;/p&gt;
&lt;/blockquote&gt;
</content><category term="ideas"></category><category term="文化"></category></entry><entry><title>如果，把一个人看成一个HTTP Server</title><link href="/articles/if-consider-a-person-as-a-http-server" rel="alternate"></link><published>2020-05-05T14:00:00+08:00</published><updated>2020-05-05T14:00:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2020-05-05:/articles/if-consider-a-person-as-a-http-server</id><summary type="html">&lt;p class="first last"&gt;其实HTTP协议背后的设计理念，可以认为是在说一个人，挺有意思的。&lt;/p&gt;
</summary><content type="html">
&lt;!-- --&gt;
&lt;div class="section" id="http"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id4"&gt;HTTP状态码和视角&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;在 RFC2616 - HTTP/1.1: Status Code Definitions 标准里，最常用的HTTP 状态码一共有3类&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Successful - 2xx&lt;/li&gt;
&lt;li&gt;Bad Request - 4xx&lt;/li&gt;
&lt;li&gt;Server Error - 5xx&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;所有来自于外界的 request 和 反馈的response 就是和外界的连（guan）接（xi）&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;2xx 是正常&lt;/li&gt;
&lt;li&gt;4xx 和 5xx 是异常。异常在英文里叫exception ，也就是例外&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;也就是说，这个”人”经常会说&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;2xx - 好的，我可以 --&amp;gt; 结果，大家皆大欢喜&lt;/li&gt;
&lt;li&gt;4xx - 这不是我的问题，怪别人 —&amp;gt; 结果，让别人修bug，也得等别人修bug&lt;/li&gt;
&lt;li&gt;5xx - 是我错了，怪自己  —&amp;gt; 结果，老老实实修自己的bug去&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;一般人，对于强（wan）大（neng）的系统的预期：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;大部分时候都在「理所当然」回应2xx&lt;/li&gt;
&lt;li&gt;很少回应4xx&lt;/li&gt;
&lt;li&gt;主动修复5xx&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id5"&gt;一切总有例外&lt;/a&gt;&lt;/h2&gt;
&lt;img alt="" src="../images/2020/05-05/relationship-is-not-reliable.png"/&gt;
&lt;p&gt;什么叫承受委屈？&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;把别人的4xx，当做自己的5xx，默默修成2xx了&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;什么叫甩锅？&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;（本来就是三个和尚）&lt;/li&gt;
&lt;li&gt;把自己的5xx，说成别人的4xx，不是我的责任。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;什么叫很难理解&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;对request和response的定义，涉及到的概念解释不同&lt;/li&gt;
&lt;li&gt;每个人背后切分4xx和5xx的理念和逻辑不一样&lt;/li&gt;
&lt;li&gt;探寻root cause的动机不同&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id6"&gt;「始于君子，终于小人」&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;什么叫事前逞强？&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;盲目乐观&lt;/li&gt;
&lt;li&gt;在对后市一无所知的时候，无畏答应了一堆2xx&lt;/li&gt;
&lt;li&gt;在对后市一无所知的时候，无知假设了一堆2xx&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;什么叫事后扯皮？&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;甲：为什么定义成我的5xx，不是你的4xx?&lt;/li&gt;
&lt;li&gt;乙：为什么定义成我的4xx，不是你的5xx？&lt;/li&gt;
&lt;li&gt;丙：（边吃瓜，边浇油）&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;什么叫「你应该」？&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;因为不是说好的 2xx吗&lt;/li&gt;
&lt;li&gt;因为别人家的HTTP Server都返回2xx&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id7"&gt;怎么办？”重构（知识结构）”&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;底线 - 丑话说前面，自己的代码记得写上 &lt;tt class="docutils literal"&gt;try - catch - finally&lt;/tt&gt;  兜底&lt;/li&gt;
&lt;li&gt;接纳 - 把处理异常（例外）的逻辑方法，从 &lt;tt class="docutils literal"&gt;catch - finally&lt;/tt&gt;，改写成到处理已知的逻辑 &lt;tt class="docutils literal"&gt;switch (case), default&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;放下成见 - 去接纳一些世界上更多不能用简单逻辑解释的事情，比如中医，比如一些神经网络。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个过程叫——学习做最好的自己。&lt;/p&gt;
&lt;/div&gt;
</content><category term="ideas"></category><category term="文化"></category></entry><entry><title>正弦 (1)</title><link href="/articles/sine-1" rel="alternate"></link><published>2019-07-08T14:00:00+08:00</published><updated>2019-07-08T14:00:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2019-07-08:/articles/sine-1</id><summary type="html">&lt;p class="first last"&gt;所有完美的背后，都是残缺; 所有成功的背后，都是苦难; 所有得到的背后，都是失去&lt;/p&gt;
</summary><content type="html">&lt;!--  --&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;完美的本质是一切符合预期，万事如意。&lt;/p&gt;
&lt;p&gt;这需要很强的控制力。不仅对自己，也对周围环境。&lt;/p&gt;
&lt;p&gt;这很难，因为一切都在变。&lt;/p&gt;
&lt;p&gt;环境在变，与之相匹配的自适应性能力也要变。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;我们总以为知道自己知道了一些”真相”，”看清了”一些本质，并且可以用逻辑去证明。&lt;/p&gt;
&lt;p&gt;可这永远是源于我们自己的视角，&lt;/p&gt;
&lt;p&gt;看到的不等于真相，理解的不等于本意。&lt;/p&gt;
&lt;p&gt;我们终究还是生活在一个无知的世界里，看不清，也没有能力理解绝对全部。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;沟壑永远存在。&lt;/p&gt;
&lt;p&gt;因为弱小，我们需要安全感，以保证我们看不见的部分不会对自己造成伤害。&lt;/p&gt;
&lt;p&gt;因为弱小，我们需要信任感，这并不源于ta自以为能做什么，而是ta过去做了什么。&lt;/p&gt;
&lt;p&gt;我们用逻辑和推理去建立自己的安全感，以消除对未知的恐惧。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;快乐是一种痛苦，就像没有苦并不知道什么是甜。&lt;/p&gt;
&lt;p&gt;愤怒是一种弱小，因为不仅驾驭不了周围环境，而且也驾驭不了面对失望的情绪。&lt;/p&gt;
</content><category term="ideas"></category><category term="正弦"></category></entry><entry><title>使用Nexus3进行Snapshot和Release管理</title><link href="/articles/nexus3-maven-snapshot-and-release" rel="alternate"></link><published>2017-01-23T21:34:00+08:00</published><updated>2017-01-23T21:34:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2017-01-23:/articles/nexus3-maven-snapshot-and-release</id><summary type="html">&lt;p class="first last"&gt;介绍 nexus3、parent pom以及 project pom的distribution management.&lt;/p&gt;
</summary><content type="html">
&lt;!-- --&gt;
&lt;div class="section" id="nexus3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id1"&gt;Nexus3中的关键角色与用户&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="snapshotdeploy"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id2"&gt;Snapshot库的Deploy角色&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;nx-repository-view-maven2-maven-snapshots-edit&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在Nexus库中创建拥有以上角色的用户，例如 &lt;cite&gt;developer&lt;/cite&gt;。&lt;/p&gt;
&lt;p&gt;这个角色，必须要包含 &lt;cite&gt;nx-anonymous&lt;/cite&gt; 这个「匿名角色」，否则会被以 &lt;cite&gt;ReasonPhrase:Forbidden.&lt;/cite&gt; 理由拒绝。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="releasedeploy"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id3"&gt;Release库的Deploy角色&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;nx-repository-view-maven2-maven-releases-edit&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在Nexus库中创建拥有以上角色的用户，例如 &lt;cite&gt;publisher&lt;/cite&gt;。&lt;/p&gt;
&lt;p&gt;这个角色，必须要包含 &lt;cite&gt;nx-anonymous&lt;/cite&gt; 这个「匿名角色」，否则会被以 &lt;cite&gt;ReasonPhrase:Forbidden.&lt;/cite&gt; 理由拒绝。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="m2-settings-xmlservers"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id4"&gt;.m2/settings.xml中servers的设置&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code xml literal-block"&gt;
&lt;span class="nt"&gt;&amp;lt;settings&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;servers&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;server&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;id&amp;gt;&lt;/span&gt;snapshot&lt;span class="nt"&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;username&amp;gt;&lt;/span&gt;developer&lt;span class="nt"&gt;&amp;lt;/username&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;password&amp;gt;&lt;/span&gt;password-of-developer-in-nexus&lt;span class="nt"&gt;&amp;lt;/password&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/server&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;server&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;id&amp;gt;&lt;/span&gt;release&lt;span class="nt"&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;username&amp;gt;&lt;/span&gt;publisher&lt;span class="nt"&gt;&amp;lt;/username&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;password&amp;gt;&lt;/span&gt;password-of-publisher-in-nexus&lt;span class="nt"&gt;&amp;lt;/password&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/server&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/servers&amp;gt;&lt;/span&gt;
...
&lt;span class="nt"&gt;&amp;lt;/settings&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="maven-project"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id5"&gt;maven project&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="super-parent-maven-project"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id6"&gt;super-parent maven project&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;对于每个组织或者企业，使用一个顶级的、唯一的parent project是十分有必要的，这可以统一各级子工程的发布管理配置。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;scm&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;url&amp;gt;&lt;/span&gt;http://your.domain/and-path&lt;span class="nt"&gt;&amp;lt;/url&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;connection&amp;gt;&lt;/span&gt;scm:git:ssh://git@your.vcs.domain/your-path&lt;span class="nt"&gt;&amp;lt;/connection&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/scm&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;distributionManagement&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;snapshotRepository&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;id&amp;gt;&lt;/span&gt;snapshot&lt;span class="nt"&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;url&amp;gt;&lt;/span&gt;http://your.nexus/repository/maven-snapshots&lt;span class="nt"&gt;&amp;lt;/url&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/snapshotRepository&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;repository&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;id&amp;gt;&lt;/span&gt;release&lt;span class="nt"&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;url&amp;gt;&lt;/span&gt;http://your.nexus/repository/maven-releases&lt;span class="nt"&gt;&amp;lt;/url&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/repository&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/distributionManagement&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;build&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;pluginManagement&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-release-plugin&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.5.3&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/pluginManagement&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其中，&lt;tt class="docutils literal"&gt;snapshotRepository&lt;/tt&gt; 中的 &lt;tt class="docutils literal"&gt;id&lt;/tt&gt; 与 &lt;tt class="docutils literal"&gt;.m2/settings.xml&lt;/tt&gt; 中的 &lt;tt class="docutils literal"&gt;server/id&lt;/tt&gt; 需要保持一致。&lt;/p&gt;
&lt;p&gt;在例子中，两处都都同时使用了 &lt;tt class="docutils literal"&gt;snapshot` 以及 ``release&lt;/tt&gt; 。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="snapshot-deploy"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id7"&gt;snapshot deploy&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;snapshot deploy 是每个developer日常进行snapshot library发布的正常行为。&lt;/p&gt;
&lt;p&gt;在每个developer的本地，都可以针对一个 maven project 执行： &lt;tt class="docutils literal"&gt;mvn deploy&lt;/tt&gt; 操作，将任意的 &lt;tt class="docutils literal"&gt;Version&lt;/tt&gt; 以 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-SNAPSHOT&lt;/span&gt;&lt;/tt&gt; 结尾的 &lt;tt class="docutils literal"&gt;artifact&lt;/tt&gt; 部署至 &lt;tt class="docutils literal"&gt;snapshot&lt;/tt&gt; 库中。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="release-publish"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id8"&gt;release publish&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;maven-release-plugin&lt;/span&gt;&lt;/tt&gt; 是用作正式发布使用的maven插件。&lt;/p&gt;
&lt;p&gt;其中有两个关键的mvn 指令， &lt;tt class="docutils literal"&gt;mvn release:prepare&lt;/tt&gt; 以及 &lt;tt class="docutils literal"&gt;mvn release:perform&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;mvn release:prepare&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个指令主要的操作目标是VCS (例如GitLab) ，它的执行条件有：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;本地的所有代码已经提交，对于git而言，本地的所有代码，都已经经过 &lt;tt class="docutils literal"&gt;git push&lt;/tt&gt; ，也就是说stage区不存在修改过的文件。&lt;/li&gt;
&lt;li&gt;mave坐标中的Version，必须以 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-SNAPSHOT&lt;/span&gt;&lt;/tt&gt; 结尾，否则该指令会罢工。这个指令的执行过程，是交互式的，它会询问三项内容：&lt;/li&gt;
&lt;li&gt;指定要发布的Version值，一般来说，它会自动提示不包含 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-SNAPSHOT&lt;/span&gt;&lt;/tt&gt; 部分的版本号&lt;/li&gt;
&lt;li&gt;VCS的tag名称。例如，git分支上的tag。&lt;/li&gt;
&lt;li&gt;下一个开发版，含的 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-SNAPSHOT&lt;/span&gt;&lt;/tt&gt; 版本号，一般来说，它会自动将最后一位数字版本号自动增加1。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这个动作执行之后，会生成两个主要的文件：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;原来pom.xml的备份文件&lt;/li&gt;
&lt;li&gt;release.properties，即本次release的相关信息。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;同时，这个指令还会对修改后的release版本进行&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;mvn release:perform&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个指令主要的操作目标是仓库 (Repository，例如 Nexus)。&lt;/p&gt;
&lt;p&gt;它的主要目的，是把本地已经生成好的 release library 部署至仓库。并不会对 VCS 进行任何写操作。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="experiences"></category><category term="maven"></category><category term="nexus3"></category><category term="scm"></category></entry><entry><title>图片的管理与运营</title><link href="/articles/the-way-of-pubsub-diagram" rel="alternate"></link><published>2017-01-12T23:01:00+08:00</published><updated>2017-01-12T23:01:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2017-01-12:/articles/the-way-of-pubsub-diagram</id><summary type="html">&lt;p class="first last"&gt;现有的大部分商业、免费的绘图工具的基本假设是，图片的作者与图片的使用者，使用的是同一个工具，并没有考虑到图片的具体引用场景，并根据上下文环境进行自适应调整。&lt;/p&gt;
</summary><content type="html">
&lt;!-- --&gt;
&lt;p&gt;没错，这又是一个还没实现的理想，缺的是时间资源。&lt;/p&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id15"&gt;（工程设计）图的窘境&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;脑图、UML图、PPT中的图形，是经常用到的集中画图的方式。这些方式都会造成图片的绘制限制，或者使用限制。&lt;/p&gt;
&lt;p&gt;使用A工具绘制而成的图片，非常容易的在 B/C/D... 等工具和场景中被「引用」。&lt;/p&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id16"&gt;上下文无感知&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个图片不能在多个场合进行引用，主要体现在无法根据上下文条件进行自适应的调整，例如&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;矢量缩放&lt;/li&gt;
&lt;li&gt;配色主题的更换&lt;/li&gt;
&lt;li&gt;格式的自动转换&lt;/li&gt;
&lt;li&gt;重构、抽取与局部引用&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id17"&gt;内容价值弱反馈，变更无感知&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;目前大部分的绘图工具的设计，都缺乏对「协作」的支持。&lt;/p&gt;
&lt;p&gt;也就是说，他们都假设了，「产物的作者 &lt;strong&gt;就是&lt;/strong&gt; 使用者」。&lt;/p&gt;
&lt;p&gt;简而言之，就是用同一个工具进行编辑、修改和演示。&lt;/p&gt;
&lt;p&gt;从协作的角度来说，「产物的作者 &lt;strong&gt;不是&lt;/strong&gt; 使用者」&lt;/p&gt;
&lt;p&gt;简而言之，就是进行编辑、修改的工具，和进行演示的工具不是同一个，是相互松耦合的。&lt;/p&gt;
&lt;p&gt;即便是实现了松耦合的工具设计，目前也缺乏 「使用者」 对于上游 「作者」 进行内容更新的通知与提醒。&lt;/p&gt;
&lt;p&gt;这些因素，导致了内容的分享变得困难，对内容的价值评价变得无法进行。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id18"&gt;二进制图片的内容管理&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;二进制图片，是没有办法采用面向文本的 &lt;tt class="docutils literal"&gt;diff&lt;/tt&gt; 工具，对的内容进行精准比较的。&lt;/p&gt;
&lt;p&gt;图的重度依赖者，又非常希望能够看到两张图片在内容上的细节差异，不想在一张图片的若干版本中，重复的进行着「找不同」的游戏。&lt;/p&gt;
&lt;p&gt;这也是二进制图片，表达「图意」的难点。在数据处理领域，称之为「无结构的数据」。&lt;/p&gt;
&lt;p&gt;这种称呼，其实是站在图片的使用者角度，无法用计算机直接理解图片的「图意」。&lt;/p&gt;
&lt;p&gt;目前的人工智能或者说是机器学习，对于图片的识别已经有了长足的进步，能够识别「日常」的一些「简单图片」。&lt;/p&gt;
&lt;p&gt;不过，对于「工程制图」的结构识别、模型还原的应用，还不多见。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id19"&gt;图的制作&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id20"&gt;商业或者封闭的绘制工具&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一般，商业的绘制工具，对图的物理格式，都采用特有的方式进行编码，即便是基于 &lt;tt class="docutils literal"&gt;XML&lt;/tt&gt; 方式进行解析，大多数情况下，只能靠人猜测其含义。&lt;/p&gt;
&lt;p&gt;同时，商业工具，还会持有一些「布局算法」，并可能以专利的形式进行保护。&lt;/p&gt;
&lt;p&gt;这样，对于非官方的「图片浏览器」而言，则会产生布局效果差强人意的结果。&lt;/p&gt;
&lt;p&gt;很明显的例子是，对于 Office 系列文件的图形化渲染， 用A工具绘制的图片，在B工具内打开，可能就会发生剧烈的变形。&lt;/p&gt;
&lt;p&gt;也就是说，这些封闭的绘图工具，在产品设计的时候，有一个基本的假设，那么就是图片的绘制，与图片的浏览，都在本工具之内进行。
这可能是增加产品「用户粘性」的一个手段？&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id21"&gt;基于文本生成的例子&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;以git为代表的管理工具，是对文本文件，进行版本管理的最佳选择。&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;SVG&lt;/tt&gt; 等等以 &lt;tt class="docutils literal"&gt;XML&lt;/tt&gt; 为核心的文本格式矢量图，或者是以 &lt;a class="reference external" href="http://plantuml.com/"&gt;PlantUML&lt;/a&gt; 为代表的，有自己特有语法的描述语言，可以进行多种输出图片格式的图形转换。&lt;/p&gt;
&lt;p&gt;在软件领域，&lt;a class="reference external" href="http://plantuml.com/"&gt;PlantUML&lt;/a&gt; ，是在设计阶段，最为「淳朴」的UML绘制工具，也就是说，整体布局由 &lt;a class="reference external" href="http://plantuml.com/"&gt;PlantUML&lt;/a&gt; 自行通过算法完成，用户很多时候能够采取一些「小技巧」来实现布局上的「更高要求」。&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/2017/01-13/the-way-of-pubsub-diagram-5.png" style="width: 450px; height: 400px;"/&gt;
&lt;p&gt;可以说，&lt;a class="reference external" href="http://plantuml.com/"&gt;PlantUML&lt;/a&gt; 是可以解决一些小规模程序的设计图的绘制问题。 同时还能够以文本的形式，对内容进行版本管理。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id22"&gt;使用标记语言聚合内容&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;标记语言，是基于文本的，它很大程度上解决了内容与格式的紧耦合模式。&lt;/p&gt;
&lt;p&gt;这种方式，相比传统的 Office套件（无论那个厂商），放弃了一些「所见即所得」的撰写体验（其实也有热心群众提供非官方插件支持），但释放了内容的「复用、分享」能力。&lt;/p&gt;
&lt;p&gt;把修饰文字的「元信息」，通过简单的特殊符号，附加在特定的文字周围。&lt;/p&gt;
&lt;p&gt;比较简单的和典型的有（按学习难度排序）&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Markdown"&gt;Markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docutils.sourceforge.net/rst.html"&gt;reStructuredText&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.methods.co.nz/asciidoc/index.html"&gt;AsciiDoc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些标记语言，都是基于文本的，并且天然的支持以「URL」的方式对图片进行引用。&lt;/p&gt;
&lt;p&gt;例如，本文，就是用 &lt;a class="reference external" href="http://docutils.sourceforge.net/rst.html"&gt;reStructuredText&lt;/a&gt; 编写的，引用图片时候，只需要写成：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="ow"&gt;image&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt; /images/2017/01-13/the-way-of-pubsub-diagram-4.png
    &lt;span class="nc"&gt;:height:&lt;/span&gt; 400px
    &lt;span class="nc"&gt;:width:&lt;/span&gt; 450px
    &lt;span class="nc"&gt;:align:&lt;/span&gt; center
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;就能够完成对一个图片的引用，当然，还可以是外链的URL。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id10"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id23"&gt;图的引用&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;对，我没写错，是「引用」，不是「应用」。&lt;/p&gt;
&lt;p&gt;也就是说，图的「作者」不是「引用者」，这种情况，在知识互连、知识共享、知识集成的时代，非常常见。&lt;/p&gt;
&lt;p&gt;图的引用场景是广泛的，常见的有：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;嵌入Office文件，例如Presentation&lt;/li&gt;
&lt;li&gt;PDF或者HTML格式的宣传册、白皮书、说明书&lt;/li&gt;
&lt;li&gt;网站、博客、微博&lt;/li&gt;
&lt;li&gt;微信公众号，还可能是多个&lt;/li&gt;
&lt;li&gt;可内置渠道信息、支持条件跳转与有效期的动态二维码&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="microsoft-office"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id24"&gt;老态龙钟的 Microsoft Office&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;其实，Apple家的Keynote也类似。只是Microsoft Office市场占有率更高一些。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Microsoft Word Version 15.30 (170107)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不支持用URL引用一个「外部远程」图片。&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/2017/01-13/the-way-of-pubsub-diagram-1.png" style="width: 450px; height: 400px;"/&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Microsoft Powerpoint Version 15.30 (170107)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不支持用URL引用一个「外部远程」Slide，图片也类似。&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/2017/01-13/the-way-of-pubsub-diagram-2.png" style="width: 450px; height: 400px;"/&gt;
&lt;/div&gt;
&lt;div class="section" id="google-docs"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id25"&gt;与时俱进的 Google Docs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;在探查之前，就一定猜到，Google一定是支持引用「外部URL」的。&lt;/p&gt;
&lt;p&gt;例如，可以在Google Docs中，插入一个URL形式的图片。&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/2017/01-13/the-way-of-pubsub-diagram-3.png" style="width: 450px; height: 400px;"/&gt;
&lt;/div&gt;
&lt;div class="section" id="office-365"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id26"&gt;令人失望的 Office 365&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;可以看到，企业文化、产品理念的差异，很容易体现在「功能细节」上，用户的内心自然而然会有公道的评价。&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/2017/01-13/the-way-of-pubsub-diagram-4.png" style="width: 450px; height: 400px;"/&gt;
&lt;/div&gt;
&lt;div class="section" id="id11"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id27"&gt;意料之外的 PlantUML&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;可以说，&lt;a class="reference external" href="http://plantuml.com/"&gt;PlantUML&lt;/a&gt; 是工具解耦上做的最充分的一个工具了（虽然任然有缺陷，例如对于中文的处理）&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://plantuml.com/"&gt;PlantUML&lt;/a&gt; 生成图片，可以基于「Web Service」进行。&lt;a class="reference external" href="http://plantuml.com/"&gt;PlantUML&lt;/a&gt; 官方提供了一个演示的例子：&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;http://www.plantuml.com/plantuml/proxy?src=&amp;lt;your_puml_url&amp;gt;&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;http://www.plantuml.com/plantuml/proxy?src=https://raw.github.com/plantuml/plantuml-server/master/src/main/webapp/resource/test2diagrams.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id12"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id28"&gt;有潜力的开源项目&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="presentation-slidehub"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id29"&gt;Presentation领域的 SlideHub&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;虽然 &lt;a class="reference external" href="https://github.com/ryuzee/SlideHub"&gt;SlideHub&lt;/a&gt; 不是直接对图片进行的分享，但是它基本上已经是除了 &lt;a class="reference external" href="http://www.slideshare.net/"&gt;SlideShare&lt;/a&gt; 之外，自行搭建演示文稿分享的不二选择了。&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.slideshare.net/"&gt;SlideShare&lt;/a&gt; 和 开源的 &lt;a class="reference external" href="https://github.com/ryuzee/SlideHub"&gt;SlideHub&lt;/a&gt; 都实现了对 &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Office_Open_XML"&gt;Office Open XML&lt;/a&gt; 的解析，以及对于Slide的切片。&lt;/p&gt;
&lt;p&gt;在 &lt;a class="reference external" href="http://www.slideshare.net/"&gt;SlideShare&lt;/a&gt; 上，每个用户都可以收藏自己重点关注的 Slide ，而不用收藏 Presentation 的全文。&lt;/p&gt;
&lt;p&gt;实际上， &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Office_Open_XML"&gt;Office Open XML&lt;/a&gt; 是一个开放的 Office 文件标准。&lt;/p&gt;
&lt;p&gt;Presentation的物理结构是基本上是这样的（用Zip解压工具，解压之后就能够看到，如果你不想看枯燥的标准的话）：&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/2017/01-13/the-way-of-pubsub-diagram-6.png" style="width: 400px; height: 450px;"/&gt;
&lt;p&gt;几个关键的目录：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;_rels&lt;/tt&gt; : 组织整个Presentation的结构，完成内容的编排。&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;diagrams&lt;/tt&gt; : 是以 &lt;tt class="docutils literal"&gt;XML&lt;/tt&gt; 为物理结构的矢量图。&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;media&lt;/tt&gt;: 外部的二进制图片，或者视频。&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;slideLayout&lt;/tt&gt; : slide的基本布局模板。&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;slideMaster&lt;/tt&gt; : slide母版的基本布局模板。&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;theme&lt;/tt&gt;: 基本的矢量图配色方案。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果，一系列的 Presentation 作者，是同一个人或者组织，那么这些 Presentation 的风格、主题应当较为类似。并且能够有很多的 &lt;tt class="docutils literal"&gt;diagrams&lt;/tt&gt; 能够复用。&lt;/p&gt;
&lt;p&gt;再进一步地，应当能够基于已有的 Presentation 进行快速的内容编排，形成一份新的 Presentation 。&lt;/p&gt;
&lt;p&gt;另一方面，如果一些 Slide 发生了版本变更，那么那些引用这些发生变更的 Slide 的 Presentation的作者，也应当能够收到「变更提醒」，进一步的有帮助他们完成内容的自动更新。&lt;/p&gt;
&lt;p&gt;也许这是 &lt;a class="reference external" href="http://www.slideshare.net/"&gt;SlideShare&lt;/a&gt; 企业版所拥有的能力。（ &lt;a class="reference external" href="http://www.slideshare.net/"&gt;SlideShare&lt;/a&gt; 有企业版吗？）&lt;/p&gt;
&lt;p&gt;不过，Google Slides 已经支持了 Import , 它缺的一个社区，缺一个对 &lt;tt class="docutils literal"&gt;diagram&lt;/tt&gt; 这些素材的管理:&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/2017/01-13/the-way-of-pubsub-diagram-7.png" style="width: 500px; height: 500px;"/&gt;
&lt;/div&gt;
&lt;div class="section" id="document-mkdocs"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id30"&gt;Document领域的 Mkdocs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;企业，对于 Document 的需求是频繁的，例如：合同、使用说明书、设计说明书，或者出版物，都需要有「内容」与「排版」分离的素材管理模型。&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.mkdocs.org/"&gt;MkDocs&lt;/a&gt; 是众多的「静态网站生成器」（SSG）中的一个 ( &lt;a class="reference external" href="https://www.staticgen.com/"&gt;StaticGen&lt;/a&gt; 对他们有个简要的介绍 ) 。&lt;/p&gt;
&lt;p&gt;另外，最著名的应当还要属于 &lt;a class="reference external" href="https://www.gitbook.com"&gt;gitbook&lt;/a&gt; ，但是它并不支持在企业中进行 on-premise 部署，只支持以 &lt;tt class="docutils literal"&gt;SaaS&lt;/tt&gt; 的云模式提供服务。&lt;/p&gt;
&lt;p&gt;它们好还是不好，这是个主观的判断，「合适」自身的特点，才是真的好。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id13"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id31"&gt;新媒体渠道&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;新媒体渠道，可能会包括企业「自运营」的网站，以及由第三方托管的「内容平台」，例如，微信公众平台。&lt;/p&gt;
&lt;p&gt;对于企业「自运营」的网站，可以使用一部分的 SSG 能力，实现对内容的版本化更新。&lt;/p&gt;
&lt;p&gt;对于类似于「微信公众平台」，则可以使用 &lt;tt class="docutils literal"&gt;OpenAPI&lt;/tt&gt; 进行素材的自动化管理。&lt;/p&gt;
&lt;p&gt;这类非官方的素材非常多，可以去 &lt;a class="reference external" href="https://github.com/search?utf8=%E2%9C%93&amp;amp;q=%E5%85%AC%E4%BC%97%E5%B9%B3%E5%8F%B0&amp;amp;type=Repositories&amp;amp;ref=searchresults"&gt;GitHub&lt;/a&gt; 上进行搜索。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id14"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id32"&gt;最后，还需要一个内容运营平台&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;这个内容管理平台应当具备几个要素&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;面向个体的素材管理&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;基本形式与转换&lt;/li&gt;
&lt;li&gt;版本&lt;/li&gt;
&lt;li&gt;原作者&lt;/li&gt;
&lt;li&gt;演绎者&lt;/li&gt;
&lt;li&gt;发布与引用更新通知&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;面向平台的运营生态&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;基于最小粒度的评价体系&lt;/li&gt;
&lt;li&gt;基于原作者的反馈评价&lt;/li&gt;
&lt;li&gt;为知识付费&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content><category term="ideas"></category><category term="Office OpenXML"></category><category term="版本控制"></category><category term="知识引用"></category><category term="知识分享"></category></entry><entry><title>EnhancedREST 1.0.0 规范</title><link href="/articles/enhanced-rest-1-0-0-specs" rel="alternate"></link><published>2016-12-30T13:01:00+08:00</published><updated>2016-12-30T13:01:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2016-12-30:/articles/enhanced-rest-1-0-0-specs</id><summary type="html">&lt;p class="first last"&gt;RESTful 是一个将HTTP传输协议以及JSON报文体相结合的RPC通信风格，但目前并不存在一个得到普遍认可和约束的工业技术规范。由于RESTful风格形式简洁，工具链丰富，收到广大开发者的喜爱。同时也由于其落地实现的随意性，导致各大企业都有不同的落地实现方法，形成了不同形态的「方言」。无形之中增加了软件互联的成本，造成了有限的研发资源浪费。EnhancedREST规范了不同系统之间的技术标准，降低产品间的集成成本，提高研发效率。&lt;/p&gt;
</summary><content type="html">
&lt;!-- --&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id16"&gt;阅读知识背景要求&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;熟悉HTTP/1.1协议以及MIME-types&lt;/li&gt;
&lt;li&gt;熟悉RESTful&lt;/li&gt;
&lt;li&gt;熟悉分布式事务处理模型&lt;/li&gt;
&lt;li&gt;了解OAuth2协议&lt;/li&gt;
&lt;li&gt;了解Kerberos (V5) 协议&lt;/li&gt;
&lt;li&gt;了解Hash单向函数&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id17"&gt;修订历史&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;1.0.0 首次发布&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id18"&gt;背景与目标&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id19"&gt;编写背景&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;RESTful
是一个将HTTP传输协议以及JSON报文体相结合的RPC通信风格，但目前并不存在一个得到普遍认可和约束的工业技术规范。&lt;/p&gt;
&lt;p&gt;由于RESTful风格形式简洁，工具链丰富，收到广大开发者的喜爱。同时也由于其落地实现的随意性，导致各大企业都有不同的落地实现方法，形成了不同形态的「方言」。无形之中增加了软件互联的成本，造成了有限的研发资源浪费。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id20"&gt;编写目标&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;「书同文车同轨」，规范不同系统之间的技术标准，降低产品间的集成成本，提高研发效率，促进各产品规范、有序发展。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id21"&gt;基本约定&lt;/a&gt;&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;本规范中涉及大量对HTTP/1.1 协议的标准引用，对于HTTP
Header中各项规范定义，本规范以&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;”X-RL-”&lt;/span&gt;&lt;/tt&gt;作为前缀进行扩展，未扩展的遵循RFC所定义的含义。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id22"&gt;限制条件&lt;/a&gt;&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;本规范主要的使用范围，主要位于后端服务之间的RPC通信。&lt;/li&gt;
&lt;li&gt;对于每个Client/Server具有唯一性标识生成能力的要求。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id23"&gt;修订计划&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;补充TCC模式技术规范&lt;/li&gt;
&lt;li&gt;在对本规范进行实现之后，进行部分的内容修订&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id24"&gt;参考标准&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id10"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id25"&gt;直接参考标准&lt;/a&gt;&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://tools.ietf.org/html/rfc2616"&gt;RFC2616 Hypertext Transfer Protocol --
HTTP/1.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://tools.ietf.org/html/rfc7231"&gt;RFC7231 Hypertext Transfer Protocol (HTTP/1.1): Semantics and
Content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://tools.ietf.org/html/rfc6919"&gt;RFC2119 Key words for use in RFCs to Indicate Requirement
Levels&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://tools.ietf.org/html/rfc2045"&gt;RFC2045 Multipurpose Internet Mail Extensions (MIME) Part One:
Format of Internet Message
Bodies&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id11"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id26"&gt;间接参考标准&lt;/a&gt;&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://tools.ietf.org/html/rfc4120"&gt;RFC4120 The Kerberos Network Authentication Service
(V5)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://tools.ietf.org/html/rfc6749"&gt;RFC6749 The OAuth 2.0 Authorization
Framework&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="rpc"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id27"&gt;分布式事务的RPC模式简介&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="commit-compensation-cc"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id28"&gt;Commit-Compensation (CC)&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;「提交-补偿」模式：要求提供方提供对原请求的补偿（也称作撤销，反向）操作能力。&lt;/p&gt;
&lt;p&gt;双方可依照5个操作进行RPC通信： * Commit 提交 * Compensation 补偿 *
Status 状态 * Fetch 获取 * Trace 跟踪&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="try-confirm-cancel-tcc"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id29"&gt;Try-Confirm/Cancel (TCC)&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;「尝试-确认/取消」模式：要求提供方提供资源预留、资源确认消费，资源预留取消的操作能力；要求提供方具备进行尝试操作后，自动针对「未确认操作」进行自动「取消」的能力。&lt;/p&gt;
&lt;p&gt;双方可依照6个操作进行RPC通信： * Try 尝试 * Confirm 确认 * Cancel
取消 * Status 状态 * Fetch 获取 * Trace 跟踪&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="event-sourcing-es"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id30"&gt;Event Sourcing (ES)&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;「事件溯源」模式：要求事件产生方（事件源）对消息根据时间排序；要求事件消费方根据事件发生顺序有序处理；要求在事件消费方（也就是DDD模型中的聚合根）对来自多个事件源的事件进行处理时，具备复杂事件处理（CEP）的能力。&lt;/p&gt;
&lt;p&gt;由于事件产生方与事件消费方采用异步消息模式进行通信，因此本规范暂时不对ES模式进行技术规范的约束。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="enhancedrest-cc"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id31"&gt;EnhancedREST-CC模式&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="client-side"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id32"&gt;Client Side 技术标准&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id12"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id33"&gt;Client Side 请求结构&lt;/a&gt;&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Consumer-Agent&lt;ul&gt;
&lt;li&gt;Client Group (MUST)&lt;/li&gt;
&lt;li&gt;Client Name (MUST)&lt;/li&gt;
&lt;li&gt;Client Version (SHOULD)&lt;/li&gt;
&lt;li&gt;Cluster Group (MUST)&lt;/li&gt;
&lt;li&gt;Cluster Name (MUST)&lt;/li&gt;
&lt;li&gt;InstanceId (MUST)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Request-Metadata&lt;ul&gt;
&lt;li&gt;Consumer&lt;ul&gt;
&lt;li&gt;Consumer Group (MUST)&lt;/li&gt;
&lt;li&gt;Consumer Name (MUST)&lt;/li&gt;
&lt;li&gt;Consumer Version (MUST)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MessageId (MUST)&lt;/li&gt;
&lt;li&gt;RequestId (MUST)&lt;/li&gt;
&lt;li&gt;TransactionId (SHOULD)&lt;/li&gt;
&lt;li&gt;Content-Type (SHOULD)&lt;ul&gt;
&lt;li&gt;Serialization Method (MUST)&lt;/li&gt;
&lt;li&gt;Data Structure Version (SHOULD)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;InstanceId (SHOULD)&lt;/li&gt;
&lt;li&gt;Accept (COULD)&lt;/li&gt;
&lt;li&gt;Access Token (Security Considerations)&lt;ul&gt;
&lt;li&gt;Client Access Token&lt;/li&gt;
&lt;li&gt;Consumer Access Token&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Request HMAC (Security Considerations)&lt;/li&gt;
&lt;li&gt;Timeout (COULD)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Consumer-Request&lt;ul&gt;
&lt;li&gt;5 Types&lt;ul&gt;
&lt;li&gt;Commit&lt;/li&gt;
&lt;li&gt;Compensation&lt;/li&gt;
&lt;li&gt;Status&lt;/li&gt;
&lt;li&gt;Fetch&lt;/li&gt;
&lt;li&gt;Trace&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Request-Body&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id13"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id34"&gt;Client Side 概念定义&lt;/a&gt;&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Consumer Consumer&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是指请求的实际产生者，不包括自然人。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Consumer Group Consumer Group&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是Consumer所属分组的唯一标识，一般为系统所属域。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Consumer Name Consumer Name&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是Consumer的名称，在Consumer Group内具备唯一性，一般为系统名。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Consumer Version Consumer Version&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Consumer的所包含功能的具体介质发布版本，一般的Release版本在物理介质上必须保证唯一性。（发布版本、介质、介质SHA1/MD5/SHA256，需要保持一致，有条件的还需要进行代码签名）&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Consumer-Agent Consumer-Agent&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是指用户行为的代理执行者。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Client 物理概念 Client&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是Consumer-Agent的物理实现，一般为承载请求的运行时容器。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Client Group Client Group&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是Client所属分组的标识，一般为容器提供者的唯一标识。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Client Name Client Name&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是Client的名称，在Client Group 内具备唯一性。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Client Version Client Version&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Client的具体发布版本，一般的Release版本在物理介质上必须保证唯一性。（发布版本、介质、介质SHA1/MD5/SHA256，需要保持一致，有条件的还需要进行代码签名）&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Cluster Group Cluster Group 是指Client
和Consumer的可部署介质，在目标运行环境中所属分类，一般对应到域。&lt;/li&gt;
&lt;li&gt;Cluster Name Cluster Name 是指Client&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;和Consumer的可部署介质，在目标运行环境中的具体集群名称，一般对应到一组相同功能实例，即集群。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;InstanceId InstanceId是指Client&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;和Consumer的可部署介质，在目标运行环境中的具体集群中，被分配的唯一序列号。其唯一性的范围，至少在集群内部，也可以是全局。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Request-Metadata&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;逻辑概念Request-Metadata 是请求中元信息的总称。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;MessageId MessageId&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是每个消息(报文)的唯一标识，由Client运行期即时生成。对于Client或Consumer发起的重试行为，需要提供不同的MessageId。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;RequestId RequestId&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是每个请求的唯一标识，由Consumer运行期即时生成。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;TransactionId TransactionId&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是每个请求的全链路标识，用于关联最源端开始的完整调用过程。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Content-Type&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;逻辑概念Content-Type 是用于说明客户端请求的报文体序列化方法的总称。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Serialization Method&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Serialization Method 是指请求报文的序列化方法。一般使用&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;MIME-types&lt;/span&gt;&lt;/tt&gt; (&lt;a class="reference external" href="https://tools.ietf.org/html/rfc2045"&gt;RFC2045&lt;/a&gt;)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Data Structure Version Data Structure Version&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是请求报文内数据结构的版本。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;InstanceId InstanceId&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是指Client在物理部署后，进程在集群内的唯一标识。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Access Token&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;逻辑概念Access Token是访问令牌的总称。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Client Access Token&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Client Access Token是表明客户端合法身份的标识，一般通过安全算法生成，并具备时效性。&lt;/p&gt;
&lt;p&gt;Consumer Access Token可以与&lt;a class="reference external" href="https://web.mit.edu/kerberos/"&gt;Kerberos&lt;/a&gt;协议相结合。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Consumer Access Token&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Consumer Access Token是表明消费合法身份的标识，一般通过安全算法生成，并具备时效性。&lt;/p&gt;
&lt;p&gt;Consumer Access Token可以与&lt;a class="reference external" href="https://tools.ietf.org/html/rfc6749"&gt;OAuth2&lt;/a&gt;协议相结合。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Request HMAC Request&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;HMAC是通过Hash函数、Consumer持有的私有秘钥、请求报文内容的摘要、盐，所生成的安全校验码，具备放篡改能力。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Timeout Timeout&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是指Consumer所限定的超时时间。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="http-1-1"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id35"&gt;HTTP/1.1 协议映射&lt;/a&gt;&lt;/h4&gt;
&lt;div class="section" id="http-method"&gt;
&lt;h5&gt;&lt;a class="toc-backref" href="#id36"&gt;HTTP Method 概念映射&lt;/a&gt;&lt;/h5&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Commit —&amp;gt; &lt;tt class="docutils literal"&gt;HTTP PUT&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Compensation —&amp;gt; &lt;tt class="docutils literal"&gt;HTTP PATCH&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Status —&amp;gt; &lt;tt class="docutils literal"&gt;HTTP HEAD&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Fetch —&amp;gt; &lt;tt class="docutils literal"&gt;HTTP GET&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Trace —&amp;gt; &lt;tt class="docutils literal"&gt;HTTP TRACE&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="http-header"&gt;
&lt;h5&gt;&lt;a class="toc-backref" href="#id37"&gt;HTTP Header 概念映射&lt;/a&gt;&lt;/h5&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;User-Agent&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;lt;Consumer &lt;span class="pre"&gt;Group&amp;gt;-&amp;lt;Consumer&lt;/span&gt; Name&amp;gt; / &amp;lt;Consumer Version&amp;gt; (&amp;lt;Server &lt;span class="pre"&gt;Group&amp;gt;-&amp;lt;Server&lt;/span&gt; &lt;span class="pre"&gt;Name&amp;gt;/&amp;lt;Server&lt;/span&gt; Version&amp;gt;)&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;From&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;&amp;lt;MessageId&amp;gt;@&amp;lt;InstanceId&amp;gt;.&amp;lt;Cluster&lt;/span&gt; &lt;span class="pre"&gt;Name&amp;gt;.&amp;lt;Cluster&lt;/span&gt; Group&amp;gt;&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Content-Type&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;lt;Serialization Method&amp;gt;&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Referer Upstream&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;lt;RequestId &amp;amp; RequestURL&amp;gt;&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;X-RL-CC-C-TID&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;lt;TransactionId&amp;gt;&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;X-RL-C-DSV&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;lt;Data Structure Version&amp;gt;&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;X-RL-C-INST&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;lt;InstanceId&amp;gt;&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;X-RL-C-CLAT&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;lt;Client Access Token&amp;gt;&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;X-RL-C-COAT&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;lt;Consumer Access Token&amp;gt;&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;X-RL-C-HMAC&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;Request HMAC&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;X-RL-C-TIMEOUT&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;lt;Timeout&amp;gt;&lt;/tt&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="url"&gt;
&lt;h5&gt;&lt;a class="toc-backref" href="#id38"&gt;URL 概念映射&lt;/a&gt;&lt;/h5&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;RequestId &amp;amp; RequestURL &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;http(s)://&amp;lt;domain&amp;gt;/&amp;lt;path&amp;gt;/&amp;lt;RequestId&amp;gt;&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="server-side"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id39"&gt;Server Side 技术标准&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id14"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id40"&gt;Server Side 响应结构&lt;/a&gt;&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Provider-Agent&lt;ul&gt;
&lt;li&gt;Server Group (MUST) Server Name (MUST)&lt;/li&gt;
&lt;li&gt;Server Version (SHOULD)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Response-Metadata&lt;ul&gt;
&lt;li&gt;Status Code (MUST)&lt;/li&gt;
&lt;li&gt;MessageId (MUST)&lt;/li&gt;
&lt;li&gt;ResponseId (MUST)&lt;/li&gt;
&lt;li&gt;RequestId (MUST)&lt;/li&gt;
&lt;li&gt;Content-Type (SHOULD)&lt;ul&gt;
&lt;li&gt;Serialization Method (MUST)&lt;/li&gt;
&lt;li&gt;Data Version (SHOULD)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;InstanceId (SHOULD)&lt;/li&gt;
&lt;li&gt;Response HMAC (Security Considerations)&lt;/li&gt;
&lt;li&gt;Message Date&lt;/li&gt;
&lt;li&gt;Response Date&lt;/li&gt;
&lt;li&gt;Retry-After&lt;/li&gt;
&lt;li&gt;Expires&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Provider-Response&lt;ul&gt;
&lt;li&gt;5 Types&lt;ul&gt;
&lt;li&gt;Commit: Commit Result&lt;/li&gt;
&lt;li&gt;Commit: Compensation Result&lt;/li&gt;
&lt;li&gt;Status: Request Current Status only&lt;/li&gt;
&lt;li&gt;Fetch: Final Result&lt;/li&gt;
&lt;li&gt;Trace: Commit, Compensation &amp;amp; Sub RPC call Trace&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Response-Body&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id15"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id41"&gt;Server Side 概念定义&lt;/a&gt;&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Provider Provider&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是指响应的实际产生者，不包括自然人。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Server 物理概念 Server&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是Provider-Agent的物理实现，一般为处理请求、作出应答的运行时容器。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Server Group Server Group&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是Server所属分组的标识，一般为容器提供者的唯一标识。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Server Name Server Name&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是Server的名称，在Server Group 内具备唯一性。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Server Version Server Version&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Server的具体发布版本，一般的Release版本在物理介质上必须保证唯一性。（发布版本、介质、介质SHA1/MD5/SHA256，需要保持一致，有条件的还需要进行代码签名）&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Cluster Group Cluster Group&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是指Server 和Provider的可部署介质，在目标运行环境中所属分类，一般对应到域。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Cluster Name Cluster Name&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是指Server和Provider的可部署介质，在目标运行环境中的具体集群名称，一般对应到一组相同功能实例，即集群。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;InstanceId InstanceId&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是指Server 和Provider的可部署介质，在目标运行环境中的具体集群中，被分配的唯一序列号。其唯一性的范围，至少在集群内部，也可以是全局。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Response-Metadata&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;逻辑概念Response-Metadata 是响应中元信息的总称。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Status Code Status Code&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是每个响应的状态编码，一般情况下遵循HTTP/1.1协议的标准。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;MessageId MessageId&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是每个消息(报文)的唯一标识，由Server运行期即时生成。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;ResponseId RequestId&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是每个响应的唯一标识，由Provider运行期即时生成。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Content-Type&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;逻辑概念Content-Type是用于说明客户端请求的报文体序列化方法的总称。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Serialization Method&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Serialization Method 是指响应报文的序列化方法。一般使用&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;MIME-types&lt;/span&gt;&lt;/tt&gt; (&lt;a class="reference external" href="https://tools.ietf.org/html/rfc2045"&gt;RFC2045&lt;/a&gt;)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Data Structure Version&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Data Structure Version&lt;/p&gt;
&lt;p&gt;是响应报文内数据结构的版本。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;InstanceId InstanceId&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是指Server在物理部署后，进程在集群内的唯一标识。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Response HMAC Response&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;HMAC是通过Hash函数、Consumer持有的私有秘钥、请求报文内容的摘要、盐，所生成的安全校验码，具备放篡改能力。参见RFC对ETag的定义。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Message Date Message&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Date是响应消息的生成时间，由Server给定。参见RFC对Date的定义。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Response Date Response&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Date是响应内容的生成时间，由Server给定。参见RFC对Last-Modified的定义。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Expire Date Expire&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Date是Commit操作结果的过期时间，由Provider给定。当Consumer在Expire
Date时间之后提交Compensation操作，有可能得到的是Compensation操作失败的结果。其他内容，参见RFC对Expires的定义。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Retry-After Expire&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Date是响应内容的过期时间，由Server给定。参见RFC对Retry-After的定义。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="http-1-1-header"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id42"&gt;HTTP/1.1 Header 概念映射&lt;/a&gt;&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Status Code&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参见上一节「HTTP Status Code 映射」&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Server&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;lt;Server &lt;span class="pre"&gt;Group&amp;gt;-&amp;lt;Server&lt;/span&gt; &lt;span class="pre"&gt;Name&amp;gt;/&amp;lt;Server&lt;/span&gt; Version&amp;gt;  &amp;lt;Provider &lt;span class="pre"&gt;Group&amp;gt;-&amp;lt;Provider&lt;/span&gt; Name&amp;gt; / &amp;lt;Provider Version&amp;gt; &amp;lt;Cluster &lt;span class="pre"&gt;Group&amp;gt;-&amp;lt;Cluster&lt;/span&gt; &lt;span class="pre"&gt;Name&amp;gt;/&amp;lt;InstanceId&amp;gt;&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;X-RL-CC-S-MID&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;lt;MessageId&amp;gt;&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;X-RL-S-RESID&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;lt;ResponseId&amp;gt;&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;X-RL-S-REQID&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;lt;RequestId&amp;gt;&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Content-Type&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;lt;Serialization Method&amp;gt;&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;X-RL-S-DSV&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;lt;Data Structure Version&amp;gt;&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;ETag&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;lt;Response HMAC&amp;gt;&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Date&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;lt;Message Date&amp;gt;&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Last-Modified&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;lt;Response Date&amp;gt;&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Retry-After&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;HTTP-date&lt;/span&gt; / &lt;span class="pre"&gt;delay-seconds&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="commit"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id43"&gt;响应 Commit 操作&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;针对Commit操作，允许返回以下响应码&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;201&lt;/tt&gt; Created 正常处理，并成功。&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;400&lt;/tt&gt; Bad Request 指Consumer提供的请求不符合约定的规格。&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;401&lt;/tt&gt; Unauthorized
指Consumer未提供可供Provider进行合法性验证的身份信息。&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;402&lt;/tt&gt; Payment Required 指Consumer所执行的请求，超过约定的流量限额。&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;403&lt;/tt&gt; Forbidden 指Consumer没有权限执行这项操作。&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;408&lt;/tt&gt; Request Timeout
指Consumer没有在Provider能够接受的请求报文接收时长内接收到完整报文。&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;409&lt;/tt&gt; Conflict
指Server所接受到的报文存在冲突。即相同的RequestId，所对应的Request
HMAC不一致。&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;413&lt;/tt&gt; Payload Too Large
指Client对Consumer所提供的报文，在进行序列化之后的长度，超过Server能够接受的最大长度。&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;414&lt;/tt&gt; URI Too Long
指Client所提供的URI，超过Server能够接受的最大长度。&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;500&lt;/tt&gt; Internal Server Error 指Server在处理过程中，发生了未知错误。&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;503&lt;/tt&gt; Service Unavailable 指Provider在处理过程中，发生了未知错误。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="compensation"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id44"&gt;响应 Compensation 操作&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;针对Compensation操作，允许返回以下响应码&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;400&lt;/tt&gt; Bad Request&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Consumer提供的请求不符合约定的规格。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;401&lt;/tt&gt; Unauthorized&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Consumer未提供可供Provider进行合法性验证的身份信息。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;402&lt;/tt&gt; Payment Required&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Consumer所执行的请求，超过约定的流量限额。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;403&lt;/tt&gt; Forbidden&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Consumer没有权限执行这项操作。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;404&lt;/tt&gt; Not Found&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Provider根据Consumer指定的RequestId没有找到相关的Commit请求。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;408&lt;/tt&gt; Request Timeout&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Consumer没有在Provider能够接受的请求报文接收时长内接收到完整报文。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;409&lt;/tt&gt; Conflict&lt;/li&gt;
&lt;/ul&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;指Server所接受到的报文存在冲突。即相同的RequestId，所对应的Request&lt;/dt&gt;
&lt;dd&gt;HMAC不一致。&lt;/dd&gt;
&lt;/dl&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;410&lt;/tt&gt; Gone&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;处理补偿操作，并成功。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;413&lt;/tt&gt; Payload Too Large&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Client对Consumer所提供的报文，在进行序列化之后的长度，超过Server能够接受的最大长度。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;414&lt;/tt&gt; URI Too Long&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Client所提供的URI，超过Server能够接受的最大长度。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;500&lt;/tt&gt; Internal Server Error&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Server在处理过程中，发生了未知错误。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;503&lt;/tt&gt; Service Unavailable&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Provider在处理过程中，发生了未知错误。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="status"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id45"&gt;响应 Status 操作&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;HTTP/1.1 不对HTTP Status Method提供请求体以及响应体的支撑。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;201&lt;/tt&gt; Created&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;处理提交操作，并成功。仅在Commit操作正常完整之后返回。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;410&lt;/tt&gt; Gone&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;处理补偿操作，并成功。仅在Compensation操作正常完整之后返回。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="fetch"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id46"&gt;响应 Fetch 操作&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;对于一个正常请求，以及后续可能出现的补偿请求，在Provider可能会产生多个响应结果，Fetch操作只会产生最后的操作结果。当Provider没有补偿操作进行时，返回的是Commit操作的结果；当Provider执行成功执行过Compensation操作时，返回的是Compensation操作结果。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;200&lt;/tt&gt; OK&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回Provider处理结果的内容。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;400&lt;/tt&gt; Bad Request&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Consumer提供的请求不符合约定的规格。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;401&lt;/tt&gt; Unauthorized&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Consumer未提供可供Provider进行合法性验证的身份信息。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;402&lt;/tt&gt; Payment Required&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Consumer所执行的请求，超过约定的流量限额。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;403&lt;/tt&gt; Forbidden&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Consumer没有权限执行这项操作。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;404&lt;/tt&gt; Not Found&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Provider根据Consumer指定的RequestId没有找到相关的Commit请求。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;408&lt;/tt&gt; Request Timeout&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Consumer没有在Provider能够接受的请求报文接收时长内接收到完整报文。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;414&lt;/tt&gt; URI Too Long&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Client所提供的URI，超过Server能够接受的最大长度。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;500&lt;/tt&gt; Internal Server Error&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Server在处理过程中，发生了未知错误。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;503&lt;/tt&gt; Service Unavailable&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Provider在处理过程中，发生了未知错误。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="trace"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id47"&gt;响应 Trace 操作&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;对于一个Provider，在处理
Commit操作的过程中，一方面可能依赖下游的其他Provider；另一方面后续可能还会出现
Compensation操作。因此，对于一次请求，处理的结果会产生一系列的处理轨迹。&lt;/p&gt;
&lt;p&gt;Trace操作，需要使用HTTP/1.1 Multipart响应机制对结果进行返回。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Content-Type&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;lt;Serialization Method&amp;gt;&lt;/tt&gt; (Multipart Content-Type)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;200&lt;/tt&gt; OK&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回Consumer处理结果的内容。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;400&lt;/tt&gt; Bad Request&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Consumer提供的请求不符合约定的规格。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;401&lt;/tt&gt; Unauthorized&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Consumer未提供可供Provider进行合法性验证的身份信息。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;402&lt;/tt&gt; Payment Required&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Consumer所执行的请求，超过约定的流量限额。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;403&lt;/tt&gt; Forbidden&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Consumer没有权限执行这项操作。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;404&lt;/tt&gt; Not Found&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Provider根据Consumer指定的RequestId没有找到相关的Commit请求。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;408&lt;/tt&gt; Request Timeout&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Consumer没有在Provider能够接受的请求报文接收时长内接收到完整报文。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;414&lt;/tt&gt; URI Too Long&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Client所提供的URI，超过Server能够接受的最大长度。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;500&lt;/tt&gt; Internal Server Error&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Server在处理过程中，发生了未知错误。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;503&lt;/tt&gt; Service Unavailable&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指Provider在处理过程中，发生了未知错误。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="ideas"></category><category term="EnhancedREST"></category><category term="REST"></category><category term="分布式系统"></category><category term="数据一致性"></category></entry><entry><title>企业软件是怎样炼成的 ，做软件的为什么总加班？</title><link href="/articles/how-to-build-enterprise-software" rel="alternate"></link><published>2016-12-27T16:00:00+08:00</published><updated>2016-12-27T16:00:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2016-12-27:/articles/how-to-build-enterprise-software</id><summary type="html">&lt;p class="first last"&gt;从软件产品的生产关系，看软件是如何被制造出来的。程序员们为什么要加班？&lt;/p&gt;
</summary><content type="html">
&lt;!-- --&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id7"&gt;企业软件产品的制造与消费&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;用生产关系来分析企业软件的制造过程，是非常合适的，但很少见。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;软件的原材料是一些片面的知识，软件是对一些片面知识集成之后的固化产物。&lt;/li&gt;
&lt;li&gt;软件的版本更新，既源于对新知识的集成，也源于对旧知识的淘汰。&lt;/li&gt;
&lt;li&gt;源代码、机器码，是知识在计算机层面的两个形态。&lt;/li&gt;
&lt;li&gt;程序员编写源代码、编译器将源代码转换机器码，是对「知识」这个生产资料进行加工的「工艺」。&lt;/li&gt;
&lt;li&gt;知识的直接价值，可以通过「软件产品的交易」的方式得到体现——被最终直接用户购买和使用。&lt;/li&gt;
&lt;li&gt;知识的间接价值，可以通过「软件被软件集成」的方式得到体现——作为中间产品被最终用户间接够买和使用。&lt;/li&gt;
&lt;li&gt;解决普通实际问题的软件，即应用软件，需要根据不同的应用场景和软件的最终运行环境，对不同来源的代码进行集成，这就需要「集成方案」。&lt;/li&gt;
&lt;li&gt;「集成方案」也称为「解决方案」，它和具体应用场景和软件运行环境紧密相关，灵活性与复杂程度较高，但通用性不强。&lt;/li&gt;
&lt;li&gt;「集成方案」是一类专业知识，同样可以被加工为「集成代码」，其结果是固化了被集成知识的范围以及使用方法，也就是固化了知识作为生产工具、形成生产力的过程。&lt;/li&gt;
&lt;li&gt;「集成」决定了以软件作为生产工具，形成生产力的生产关系——如何加工数据，并形成「数字产品」。&lt;/li&gt;
&lt;li&gt;一个应用软件（系统）的整体，是集成多个复杂知识领域的结果。&lt;/li&gt;
&lt;li&gt;设计复杂系统的模块化划分原则，依据的是不同领域的知识点。&lt;/li&gt;
&lt;li&gt;在设计过程中，声明对其他模块代码的引用和依赖，即表达了对其他知识的潜在使用需求，产生了知识消费的意向。&lt;/li&gt;
&lt;li&gt;对软件产品进行公开发布，是对知识的产品化发布，一方面将自有知识转化为拥有自主知识产权的知识产品，另一方面也确定了对被集成知识产品的订购关系。&lt;/li&gt;
&lt;li&gt;完成一次软件产品的交易，等同于完成一次对知识商品的交易。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id8"&gt;做软件的，为什么总加班？&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id9"&gt;软件部门的工作内容&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;在软件部门，按工作内容定义的职位已经非常繁多，架构师、程序员、开发者、码农，这些概念既有能力上的交集，也有经验上的差异。&lt;/p&gt;
&lt;p&gt;职位的划分方式，在不同IT规模的企业是不同的，有意思的是，这会呈现出千变万化组织结构——直接反应了企业内、来自人力资源的生产力。
（我想，这也是不少IT行业的研究图书，例如吴军博士的《浪潮之巅》，对企业组织结构进行研究的原因。）&lt;/p&gt;
&lt;p&gt;单看企业软件制造过程的两个工作内容，还是比较简单的。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;架构设计——制定集成方案&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是最为「烧脑」的「重脑力劳动」，要求从业者对「以知识作为资源进行开发」具备三个基本素质（生产力）：「系统性理解、场景化抽象、灵活集成」。&lt;/p&gt;
&lt;p&gt;被加工的「知识原材料」可以分为四类：「多视角的应用场景」、「可被集成的软件」、「运行的目标硬件环境」和「定制软件的实现工艺」，最终形成的设计产物，就是前文所提到的「集成方案」。&lt;/p&gt;
&lt;p&gt;对这四类「知识原材料」的深入、系统性的理解，掌握每个部分的机理，是形成一个合理、优秀「集成方案」的先决条件。&lt;/p&gt;
&lt;p&gt;这里的优秀，指的一个通过「集成方案」固化下来的复杂系统（包含软硬件），既能解决目前应用场景实际问题，同时能够保持长远发展所带来变更的「灵活适应性能力」。&lt;/p&gt;
&lt;p&gt;「集成代码」是「集成方案」的软件形态，需要通过「编码」进行实现。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;实现工艺——实现集成方案&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;编写源代码，是实现过程的首要环节，主要以敲击键盘、点击鼠标，并用眼睛观察计算机在显示器上给出的反馈，验证编码正确性构成。&lt;/p&gt;
&lt;p&gt;编码既是体力活，也是个手艺活，它能够直接决定软件作为未来生产工具的生产力——性能，也就是看在相同条件下，能不能最大地发挥出计算机的通用计算力。&lt;/p&gt;
&lt;p&gt;当然，人们已经深刻的认识到，人作为直接生产力，难以保证生产质量的稳定性，所以源代代码生成器（模板引擎，生成源代码的软件机器）也越来越多的涌现。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id10"&gt;到底为什么老加班？难以说清的工作环境&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这里所说的工作环境，不是指有没有免费、美味工作餐，提不提供下午茶，配不配备高效的办公用户——个人PC。
当然了，这些都能够提高员工的工作效率，降低企业隐形成本。（干活不开心，哪有生产力）&lt;/p&gt;
&lt;p&gt;从前面描述的工作内容中可以明显的感觉到，「知识原材料的不确定性」是难以定量描述工作环境的根本原因。&lt;/p&gt;
&lt;p&gt;也就是说，「知识原材料」没有像实体经济、制造业的那样工业标准。很少见到一个软件产品会标注着「执行标准」。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;「多视角的应用场景」&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大多数来自于应用场景各个参与方，以文字陈述性质的「功能需求说明书」，经过无数人的转手，原始意图已经被转义为「不知所云」。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;「可被集成的软件」&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;软件被集成的条件是能够开放互联，提供代码级的集成能力。&lt;/p&gt;
&lt;p&gt;对于已有软件集成者，一方面，阅读文档是最为直接了解原作者设计思路和意图的方法，另一方面，阅读源代码的边界判断条件，是精确掌握已有软件功能特点的必要手段。&lt;/p&gt;
&lt;p&gt;现实中的普遍现象是，普遍存在说明文档的过期或者缺失，这导致已有软件的集成者只能够阅读源代码对知识结构进行还原。&lt;/p&gt;
&lt;p&gt;这对于一个需要集成复杂的、规模庞大、超过个人或者团队认知能力、学习能力的软件而言，无疑是一个盲人摸象的行为。&lt;/p&gt;
&lt;p&gt;更不幸的是，当面对一些庞大、功能不稳定，只提供机器码，不提供源代码，说明手册描述不准确的软件，集成者看到的将是——末日。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;「运行的目标硬件环境」&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;众所周知，软件是要运行在硬件之上，才能把硬件的「通用无目标计算力」转换为「特殊专项生产力」。&lt;/p&gt;
&lt;p&gt;硬件的可靠性是基础，它的不稳定性可能来自于网络、来自于存储、来自于芯片，也可能来自于人为事故和自然灾害。&lt;/p&gt;
&lt;p&gt;硬件的不稳定性，一样需要通过软件进行解决。&lt;/p&gt;
&lt;p&gt;这些看不见摸不着的能力，不容易被应用层面的普通人理解，更难以体现价值，也只有发生系统故障、信息泄露、密码被盗才会被注意到。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;「定制软件的实现工艺」&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;应用系统软件之中，一定会包含根据应用场景的「定制部分」。&lt;/p&gt;
&lt;p&gt;定制部分的软件交付能力，现阶段不可能由一个人独立完成，也就是需要一个团队合作才能完成。&lt;/p&gt;
&lt;p&gt;有合作，就会有分工，有分工就会有上游和下游环节。&lt;/p&gt;
&lt;p&gt;从软件的设计、实现、交付、到维护，每个环节都是上一个环节的下游。&lt;/p&gt;
&lt;p&gt;复杂的依赖关系，交付过程导致质量问题难以被追溯。生产事故的出现，下游为上游背黑锅，在IT运营能力落后的企业里，是一个普遍现象。&lt;/p&gt;
&lt;p&gt;解决上述种种问题的手段，就是——加班。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id11"&gt;提高软件行业生产力的方向&lt;/a&gt;&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;制定企业IT运营能力基线&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;每个企业都会遇到IT系统的建设与持续更新问题。软件应用场景的变更是频繁的，计算机硬件设施的更替是缓慢的。&lt;/p&gt;
&lt;p&gt;对于企业IT而言，首先要深入理解应用系统是「蛋糕式」集成的的产物，每一层对下层的集成，都应该按照不同的速度进行持续的「新陈代谢」。&lt;/p&gt;
&lt;p&gt;每一层对上一层的支撑，应当形成企业内部的「可操作标准」，包括可靠性指标、集成模式、准确的文档说明，明确的责任关系，以及利益分配关系，有条件的还应当与财务报表相结合。&lt;/p&gt;
&lt;p&gt;每一层对上一层的支撑，还应当形成「按需自助的发布订阅」机制，对于陈旧的知识所对应的过期软件，应当提供下架、下线的能力。&lt;/p&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;改变以编码作为唯一集成方法的集成模式&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;固化的集成模式——根据已有经验，人工设计和组合已有软件——是企业IT系统为企业商业模式所带上的一副手铐。&lt;/p&gt;
&lt;p&gt;应当把每个知识点——也是软件功能点——作为一个神经元，通过机器学习的算法讲企业生产力自适应的集成在一起。&lt;/p&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;软件自主研发与商业采购并行&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以交付产品为商业模式的企业，其核心竞争力是「应需而变」的柔性生产力。&lt;/p&gt;
&lt;p&gt;交付「数字产品」企业，其生产力则直接依赖于企业IT生产系统，这一部分的软件产品，应当以自主研发为主，目的是保障商业模式所需要的专业知识与IT能力的高度一致。&lt;/p&gt;
&lt;p&gt;与企业主要产品所需要的核心生产力不相关的软件，采购成熟商业产品（主要评估维护成本）。从0到1的学习知识，掌握知识的成本远比直接购买知识的成本高。&lt;/p&gt;
&lt;/div&gt;
</content><category term="ideas"></category><category term="软件"></category><category term="知识产品"></category><category term="生产关系"></category></entry><entry><title>基于 HTTP/1.1 协议, 设计一个REST-like的RPC协议（下）</title><link href="/articles/design-an-rest-like-rpc-over-http11-part-2" rel="alternate"></link><published>2016-12-21T23:18:00+08:00</published><updated>2016-12-21T23:18:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2016-12-21:/articles/design-an-rest-like-rpc-over-http11-part-2</id><summary type="html">&lt;p class="first last"&gt;REST还是太过于简单，缺乏在众多复杂分布式应用场景下直接应用的能力。本文通过对HTTP/1.1协议的深入挖掘，设计一套设计REST-like的RPC通信协议。&lt;/p&gt;
</summary><content type="html">
&lt;!-- --&gt;
&lt;div class="section" id="http-1-1"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id7"&gt;HTTP/1.1 协议的潜力&lt;/a&gt;&lt;/h2&gt;
&lt;img alt="" class="align-center" src="/images/2016/12-21/design-an-rest-like-rpc-over-http11-part-2-1.png" style="width: 400px; height: 400px;"/&gt;
&lt;p&gt;RFC对于HTTP/1.1的规范，主要以 &lt;a class="reference external" href="https://tools.ietf.org/html/rfc2616"&gt;RFC2616&lt;/a&gt; 为基础，在 &lt;a class="reference external" href="https://tools.ietf.org/html/rfc7231"&gt;RFC7231&lt;/a&gt; , &lt;a class="reference external" href="https://tools.ietf.org/html/rfc5789"&gt;RFC5789&lt;/a&gt; 进行了补充说明。&lt;/p&gt;
&lt;p&gt;HTTP/1.1 协议，主要有9大方法，其中主要考察的有：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;POST&lt;/tt&gt; 写操作&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;PUT&lt;/tt&gt; 写操作&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;PATCH&lt;/tt&gt; 写操作&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;DELETE&lt;/tt&gt; 写操作&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;HEAD&lt;/tt&gt; 读操作&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;GET&lt;/tt&gt; 读操作&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;TRACE&lt;/tt&gt; 读操作（但可能会产生副作用）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外的 &lt;tt class="docutils literal"&gt;CONNECT&lt;/tt&gt; 方法主要处理与 HTTP Proxy 相关的事务 , &lt;tt class="docutils literal"&gt;OPTIONS&lt;/tt&gt; 方法用于对协议内容的协商。&lt;/p&gt;
&lt;p&gt;在2014年，RFC通过 RFC7230-7236 对RFC2616进了「Replace」。
不过RFC2616应用实在是过于广泛，即便是被宣布「Dead」，运行在全世界各地的协议实现，仍然是主流。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id8"&gt;幂等性考量&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;幂等的概念是，对于相同的请求，被处理任意次，对数据的操作结果，等同于处理一次。&lt;/p&gt;
&lt;p&gt;满足幂等性要求的Method，一般都是对于数据操作安全的。对于读操作，显然是满足幂等性要求的。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;PUT&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;DELETE&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;HEAD&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;GET&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上述四个方法，HTTP/1.1 要求协以幂等的方式进行实现。其中 &lt;tt class="docutils literal"&gt;HEAD&lt;/tt&gt; 以及是 &lt;tt class="docutils literal"&gt;GET&lt;/tt&gt; 是明显的读操作，而 &lt;tt class="docutils literal"&gt;PUT&lt;/tt&gt; 和 &lt;tt class="docutils literal"&gt;DELETE&lt;/tt&gt; 是写操作。&lt;/p&gt;
&lt;p&gt;在实现层面，对于幂等性的实现，都要求由请求方提供唯一性标识，也经常称之为「流水号」。它的生成方法，可以参见之前写的这篇文章：&lt;a class="reference external" href="/articles/id-and-unique-id-overview"&gt;标识与唯一标识概览&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;当然，标识也可以通过请求方提供的多个唯一性要素，类似以「联合主键」的方式，在服务端进行计算和判定一致性。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id9"&gt;承载性考量&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="http-header"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id10"&gt;HTTP Header&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;一般来说，Header部分的数据，都用来传输元数据。Header部分的数据结构，都以 Key-Value 的形式出现。&lt;/p&gt;
&lt;p&gt;对于复杂的Value，也就是Value中再嵌套数据结构，可以采用「;」对齐进一步 Key-Value 化。&lt;/p&gt;
&lt;p&gt;常见的 Request Header有：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;User-Agent&lt;/span&gt;&lt;/tt&gt; : &lt;tt class="docutils literal"&gt;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.95 Safari/537.36&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Refer&lt;/tt&gt; : &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;https://www.google.com/&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;User-Agent&lt;/span&gt;&lt;/tt&gt;: 用于申明客户端的身份，其本意是用于声明「用户操作行为的代理者」。&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;Refer&lt;/tt&gt;: 用于申明引用的地址，也就是本次请求源于上一次请求的地址。在分布式架构下，这个字段本质上是可以很好地用于声明一个请求链路的「上一跳地址」。&lt;/p&gt;
&lt;p&gt;常见的 Response Header有：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Status Code&lt;/tt&gt; ：&lt;tt class="docutils literal"&gt;200&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Server&lt;/tt&gt; ：&lt;tt class="docutils literal"&gt;SimpleHTTP/0.6 Python/2.7.10&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Date&lt;/tt&gt; : &lt;tt class="docutils literal"&gt;Mon, 19 Dec 2016 14:16:20 GMT&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;ETag&lt;/tt&gt; : &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;W/"5715dcfb-47e8"&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Expires&lt;/tt&gt; : &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;W/"5715dcfb-47e8"&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Content-Type&lt;/span&gt;&lt;/tt&gt; : &lt;tt class="docutils literal"&gt;application/json; &lt;span class="pre"&gt;charset=UTF-8&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;Status Code&lt;/tt&gt; ：是最为熟悉的响应头了。诸如 &lt;tt class="docutils literal"&gt;401&lt;/tt&gt; , &lt;tt class="docutils literal"&gt;403&lt;/tt&gt; , &lt;tt class="docutils literal"&gt;404&lt;/tt&gt; , &lt;tt class="docutils literal"&gt;500&lt;/tt&gt; , &lt;tt class="docutils literal"&gt;503&lt;/tt&gt; 等等响应码，RFC都对其进行了「业务化的定义」。&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;Server&lt;/tt&gt; : 默认都是以应用服务器的提供者和版本作为响应值。很多人都会把 &lt;tt class="docutils literal"&gt;Server&lt;/tt&gt; 的概念等同于 &lt;tt class="docutils literal"&gt;Machine&lt;/tt&gt; ，这是不正确的。&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;Date&lt;/tt&gt; ：指的是这一响应结果，在``Server``的响应时间，&lt;tt class="docutils literal"&gt;Client&lt;/tt&gt; 可以对这些数据进行加以利用。&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;ETag&lt;/tt&gt; ：则是对响应体进行的摘要Hash计算，设计的初衷是为了让 &lt;tt class="docutils literal"&gt;Client&lt;/tt&gt; 降低比较多个响应结果的差异，提高性能。&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;Expires&lt;/tt&gt; ：同样是提醒客户端，这一响应结果的有效期是多少，客户端可以自己根据过期时间，对所辖的缓存进行处理，或者出发其他时间。&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Content-Type&lt;/span&gt;&lt;/tt&gt; : 方便 &lt;tt class="docutils literal"&gt;Client&lt;/tt&gt; 对响应体进行反序列化的解析操作。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="http-body"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id11"&gt;HTTP Body&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;HTTP Body 并不是想象中的那样，只有 &lt;tt class="docutils literal"&gt;GET&lt;/tt&gt; 方法不能够支持请求体的传输。&lt;/p&gt;
&lt;p&gt;7个方法的 Request Body 支持情况如下：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;POST&lt;/tt&gt; 支持&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;PUT&lt;/tt&gt; 支持&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;PATCH&lt;/tt&gt; 支持&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;DELETE&lt;/tt&gt; 不支持&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;HEAD&lt;/tt&gt; 不支持&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;GET&lt;/tt&gt; 不支持&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;TRACE&lt;/tt&gt; 不支持&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;需要注意的是，&lt;tt class="docutils literal"&gt;DELETE&lt;/tt&gt; 方法并不支持请求体的传输。&lt;/p&gt;
&lt;p&gt;再看一下7个方法对于 Response Body 的支持情况：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;POST&lt;/tt&gt; 支持&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;PUT&lt;/tt&gt; 支持&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;PATCH&lt;/tt&gt; 支持&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;DELETE&lt;/tt&gt; 支持&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;HEAD&lt;/tt&gt; 不支持&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;GET&lt;/tt&gt; 支持&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;TRACE&lt;/tt&gt; 支持&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;相比之下，Response Body的支持情况，只有 &lt;tt class="docutils literal"&gt;HEAD&lt;/tt&gt; 方法不支持了。&lt;/p&gt;
&lt;p&gt;整体而言，对于用户贡献内容的行为（User Generate Content），HTTP/1.1 协议明显有着不平等的倾向性。&lt;/p&gt;
&lt;p&gt;也就是说，只有 &lt;tt class="docutils literal"&gt;POST&lt;/tt&gt; , &lt;tt class="docutils literal"&gt;PUT&lt;/tt&gt; , &lt;tt class="docutils literal"&gt;PATCH&lt;/tt&gt; 三个方法支持用户侧「提供内容」。&lt;/p&gt;
&lt;p&gt;现如今，任何的一个互联网平台，都以 UGC 为核心，以用户提供的 &lt;strong&gt;内容&lt;/strong&gt; 作为企业产品的生产资料，HTTP/1.1是不是有些落后了呢？&lt;/p&gt;
&lt;p&gt;另外，作为程序员，不了解 &lt;tt class="docutils literal"&gt;PUT&lt;/tt&gt; 以及 &lt;tt class="docutils literal"&gt;PATCH&lt;/tt&gt; 这两个幂等Method的正确方法，并且在前端生成「唯一性标识」，没有成熟框架的条件下，选择大面积使用 &lt;tt class="docutils literal"&gt;POST&lt;/tt&gt; 方法，似乎也得到了一个看似合理的解释。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id12"&gt;提交-补偿模式的处理分布式事务的协调方案&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;对于分布式事务，一共有三种典型的协调方案，分别是：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;提交 (Commit) - 补偿 (Compensation), C-C模式&lt;/li&gt;
&lt;li&gt;尝试 (Try) - 确认(Confirm) / 取消（Cancel）, T-C/C模式&lt;/li&gt;
&lt;li&gt;事件溯源 (Event Sourcing), ES模式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此处，对 C-C 进行一个极为简单的概述。&lt;/p&gt;
&lt;p&gt;C-C 模式，也就是对数据进行正向操作的「反操作」，是在同步业务场景下，最简单的模式。&lt;/p&gt;
&lt;p&gt;分布式事务的参与者的模型，是 &lt;tt class="docutils literal"&gt;1:n&lt;/tt&gt; , 也就是分属于不同服务的 &lt;tt class="docutils literal"&gt;1&lt;/tt&gt; 个消费者( &lt;tt class="docutils literal"&gt;Client&lt;/tt&gt; )与 &lt;tt class="docutils literal"&gt;n&lt;/tt&gt; 个提供者( &lt;tt class="docutils literal"&gt;Server&lt;/tt&gt; )， 共同完成一次协调过程。&lt;/p&gt;
&lt;p&gt;在消费者内部，需要内置一个「协调器」。 每次协调过程，则对于一个「协调处理单」的实体概念。&lt;/p&gt;
&lt;p&gt;消费者，每次在进行「协调请求」前，除了需要准备好请求内容之外，还要准备好生成一个「协调处理单」的唯一性标识，记为 &lt;tt class="docutils literal"&gt;RequestId&lt;/tt&gt; 。
消费者如果作为调用链中的一个中间环节，那么还需要附加携带 &lt;tt class="docutils literal"&gt;TransactionId&lt;/tt&gt; 作为全局流水号，为一次完整的全链路跟踪提供线索。&lt;/p&gt;
&lt;p&gt;提供者，每次在处理请求时，需要记录上游提供的 &lt;tt class="docutils literal"&gt;RequestId&lt;/tt&gt; ，同时还需要对响应结果，生成一个 &lt;tt class="docutils literal"&gt;ResponseId&lt;/tt&gt; ，并携带 &lt;tt class="docutils literal"&gt;RequestId&lt;/tt&gt; 作为关联标识。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="rest-like"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id13"&gt;提交-补偿模式的REST-like实现示例&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id14"&gt;消费方请求示例&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;C-C Commit Request cURL Syntax&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -X PUT -H &lt;span class="s2"&gt;"Content-Type: application/json"&lt;/span&gt; -H &lt;span class="s2"&gt;"User-Agent: &amp;lt;ConsumerId&amp;gt;"&lt;/span&gt;  &lt;span class="se"&gt;\\&lt;/span&gt;
 -H &lt;span class="s2"&gt;"Referer: &amp;lt;TransactionId&amp;gt;"&lt;/span&gt; -d &amp;lt;RequestBody&amp;gt; &lt;span class="s2"&gt;"https://&amp;lt;domain&amp;gt;/&amp;lt;path&amp;gt;/&amp;lt;RequestId&amp;gt;[?v=&amp;lt;Version&amp;gt;]"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;C-C Commit Request cURL Example&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -X PUT -H &lt;span class="s2"&gt;"Content-Type: application/json"&lt;/span&gt; -H &lt;span class="s2"&gt;"User-Agent: REST-like-Consumer"&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt;
 -H &lt;span class="s2"&gt;"Referer: 0987654"&lt;/span&gt; -d &lt;span class="s1"&gt;'{ "title":"This is an request example." }'&lt;/span&gt; &lt;span class="s2"&gt;"https://api.yanjiong.wang/article/new/67890"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;C-C Commit Request HTTP/1.1 Example&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;PUT /article/new/67890 HTTP/1.1
Host: yanjiong.wang
Content-Type: application/json
User-Agent: REST-like-Consumer
Referer: &lt;span class="m"&gt;0987654&lt;/span&gt;

&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"title"&lt;/span&gt;:&lt;span class="s2"&gt;"This is an request example."&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id15"&gt;提供方请求示例&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;C-C Commit Response HTTP/1.1 Syntax&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;HTTP/1.1 &amp;lt;Status Code&amp;gt;
Server: &amp;lt;Provider&amp;gt;/&amp;lt;Version&amp;gt;
Content-type: application/json
&lt;span class="o"&gt;[&lt;/span&gt;Date: &amp;lt;Date&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;Last-Modified: &amp;lt;Date&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;ETag: &amp;lt;Content Hash&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;X-CC-RequestId: &amp;lt;RequestId&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;C-C Commit Response HTTP/1.1 Example&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
Server: REST-like-Provider/2.1
Date: Wed, &lt;span class="m"&gt;21&lt;/span&gt; Dec &lt;span class="m"&gt;2016&lt;/span&gt; &lt;span class="m"&gt;15&lt;/span&gt;:03:33 GMT
Last-Modified: Tue, &lt;span class="m"&gt;20&lt;/span&gt; Dec &lt;span class="m"&gt;2016&lt;/span&gt; &lt;span class="m"&gt;08&lt;/span&gt;:37:25 GMT
ETag: W/&lt;span class="s2"&gt;"ebf-1591b60c988"&lt;/span&gt;
X-CC-RequestId: &lt;span class="m"&gt;67890&lt;/span&gt;

&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"title"&lt;/span&gt;:&lt;span class="s2"&gt;"This is an response example."&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="ideas"></category><category term="架构"></category><category term="REST"></category><category term="HTTP/1.1"></category><category term="HTTP"></category><category term="分布式事务"></category></entry><entry><title>基于 HTTP/1.1 协议, 设计一个REST-like的RPC协议（上）</title><link href="/articles/design-an-rest-like-rpc-over-http11-part-1" rel="alternate"></link><published>2016-12-20T23:18:00+08:00</published><updated>2016-12-20T23:18:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2016-12-20:/articles/design-an-rest-like-rpc-over-http11-part-1</id><summary type="html">&lt;p class="first last"&gt;REST还是太过于简单，缺乏在众多复杂分布式应用场景下直接应用的能力。本文对REST的不足进行了分析，对复杂场景下的RPC协议与报文的要求进行了梳理。&lt;/p&gt;
</summary><content type="html">
&lt;!-- --&gt;
&lt;div class="section" id="rest"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id16"&gt;REST本身是风格，不是规范&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;对于 &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Representational_state_transfer"&gt;REST&lt;/a&gt; 本身，以及它的四级的 &lt;tt class="docutils literal"&gt;Uniform interface&lt;/tt&gt; 的介绍，遍地开花，本文不作冗余的介绍。
较为权威，但不一定公正的描述，可以通过前面的链接直达 Wikipedia。&lt;/p&gt;
&lt;p&gt;REST只是一种实现风格，不是一个强制规范，更连连RFC规范都算不上。 （ &lt;a class="reference external" href="https://tools.ietf.org/html/rfc7231#ref-REST"&gt;RFC7231&lt;/a&gt; 作为参考文献，提到了一下 ）&lt;/p&gt;
&lt;p&gt;由此，REST的历史可以追述到2000年，也就是那篇很多人听过，但可能很多人没读过的 &lt;a class="reference external" href="http://roy.gbiv.com/pubs/dissertation/top.htm"&gt;博士论文&lt;/a&gt; ，它来自Roy Thomas Fielding。&lt;/p&gt;
&lt;p&gt;2000年，离现在也有段时日了，如今REST怎么就突然走红了呢？几个正常人都能够想到的因素是：它借助了日益「完善的HTTP协议」、丰富的工具链，网络的日益发达。&lt;/p&gt;
&lt;p&gt;对于HTTP协议，最权威的描述，莫过于RFC对其制定的规范了，有兴趣的可以去这里看下我对它的 &lt;a class="reference external" href="/articles/HTTPSpecsOverview"&gt;简要概览&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;可以说，REST对于HTTP协议的理解是比一般人要深入的，也使得URL的设计产生了「设计感」。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id17"&gt;REST的优势&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id18"&gt;丰富的工具与运行时环境&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;例如，&lt;a class="reference external" href="https://curl.haxx.se/"&gt;cURL&lt;/a&gt; (最好的「全能」URL处理命令行工具) , &lt;a class="reference external" href="https://www.getpostman.com/"&gt;POSTMAN&lt;/a&gt; （最好的GUI调试HTTP工具) , &lt;a class="reference external" href="https://nginx.org/en/"&gt;NGINX&lt;/a&gt; (最有希望成为市场第一的HTTP Server) , &lt;a class="reference external" href="https://httpd.apache.org/"&gt;Apache HTTP Server&lt;/a&gt; (稳居HTTP Server排名第一的常青树)&lt;/p&gt;
&lt;p&gt;由于HTTP协议，还能够非常好的通过部署SSL证书，实现HTTPS协议，REST的安全性也能够得到一定的提升，比如不安全链路下的内容防篡改。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id19"&gt;无状态&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这看上去是REST的一个优势，但使用REST的大多数服务，都是有状态的。无状态的设计，则是把对状态管理的责任，甩给了第三方平台。&lt;/p&gt;
&lt;p&gt;也就是说，无状态，更多的是对RPC通信协议的「无状态化设计」。&lt;/p&gt;
&lt;p&gt;服务对于无状态化的处理，大致有三种方式：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;状态信息通过请求，也就是入参传递&lt;/li&gt;
&lt;li&gt;状态信息通过外置的数据源存储，可能是缓存，也可能是数据库&lt;/li&gt;
&lt;li&gt;托管给运行时环境的容器，例如J2EE应用服务器集群&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="uniform-interface"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id20"&gt;Uniform interface&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这一点，是REST最只管，最富设计感的特性，它可以使得一个URL表达一个客观对象，使得URL富有现实含义。&lt;/p&gt;
&lt;p&gt;并且能够借助于，HTTP 协议的4个基本Method对这个对象的状态进行维护。&lt;/p&gt;
&lt;p&gt;最常见、入门级的例子，是对于 &lt;tt class="docutils literal"&gt;Order&lt;/tt&gt; , 或是 &lt;tt class="docutils literal"&gt;Book&lt;/tt&gt; ，再或是 &lt;tt class="docutils literal"&gt;Article&lt;/tt&gt; 这样的实体进行维护，比如以下四个HTTP Method：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;POST&lt;/tt&gt; : &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;https://yanjing.wang/articles/&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;GET&lt;/tt&gt; : &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;https://yanjing.wang/articles/design-an-rest-like-rpc-over-http11&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;DELETE&lt;/tt&gt; : &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;https://yanjing.wang/article/design-an-rest-like-rpc-over-http11&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;PUT&lt;/tt&gt; : &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;https://yanjing.wang/article/design-an-rest-like-rpc-over-http11&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;URL一致性，使得这些URL看上去「几乎完美」，它及表达了目标对象的所述域，也表达了分类，还为目标对象分配了唯一性的标识。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id21"&gt;REST的不足&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id22"&gt;不支持分布式事务&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;关于REST的绝大多数文章里，都没有设计「分布式事务」，这个复杂、难解的问题。&lt;/p&gt;
&lt;p&gt;对于「分布式事务」，我的一个观点是——这是个伪命题。分布式事务并不存在，只存在本地事务。&lt;/p&gt;
&lt;p&gt;在分布式环境下，保障多个点数据一致的算法，有Paxos以及Raft。&lt;/p&gt;
&lt;p&gt;而要保障多个对一个事件所进行的操作都是「一致的」，则需要协调器的参与。
这里的「一致的」，所指的并不一定是保证两个被操作数据的一致性，而是「同目标」。&lt;/p&gt;
&lt;p&gt;例如，对一篇 &lt;tt class="docutils literal"&gt;Article&lt;/tt&gt; 进行 &lt;tt class="docutils literal"&gt;POST&lt;/tt&gt; 动作时，常见的，还会更新这篇 &lt;tt class="docutils literal"&gt;Article&lt;/tt&gt; 所标注的 &lt;tt class="docutils literal"&gt;Tags&lt;/tt&gt; 和 &lt;tt class="docutils literal"&gt;Category&lt;/tt&gt; 索引。
更新 &lt;tt class="docutils literal"&gt;Tags&lt;/tt&gt; 与 &lt;tt class="docutils literal"&gt;Category&lt;/tt&gt; 则是同目标，不同结果的两个子操作。&lt;/p&gt;
&lt;p&gt;在复杂场景下，对 &lt;tt class="docutils literal"&gt;Article&lt;/tt&gt; , &lt;tt class="docutils literal"&gt;Tags&lt;/tt&gt; , &lt;tt class="docutils literal"&gt;Category&lt;/tt&gt; 的维护，可能分属于三个独立的系统。
这需要有一个协调器进行分布式协调，才能保障一篇新的 &lt;tt class="docutils literal"&gt;Article&lt;/tt&gt; 被正确发布，保障文章与两个索引的一致性。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id23"&gt;使用场景的自述型&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;HTTP协议是被广泛使用的，它经常出现在普通人的视野中，普通人可能不了解HTTP所代表的全称，但在记忆网址，也就是域名的时候，不会忘记HTTP这个「符号」。&lt;/p&gt;
&lt;p&gt;那么，一个HTTP地址，所代表的，是一个可被浏览器访问，并能够通过浏览器渲染出一个Web页面的地址，还是一个仅仅传输JSON格式报文的API地址呢？&lt;/p&gt;
&lt;p&gt;很显然，类似 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;https://yanjing.wang/articles/design-an-rest-like-rpc-over-http11&lt;/span&gt;&lt;/tt&gt; 这样的地址，难以被分辨。
一般都需要通过浏览器进行尝试，或者通过阅读配套的文档才能够了解其使用场景。&lt;/p&gt;
&lt;p&gt;在传统的软件工程项目中，在一个域名下的Application，经常会既提供用于浏览器访问的Page URL，也提供用于浏览器请求后端数据的API URL，这使得URL的设计更为复杂。&lt;/p&gt;
&lt;p&gt;另外常见的做法，是为Page以及数据提供不同的访问域名，例如用域名 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;https://api.yanjiong.wang/v1&lt;/span&gt;&lt;/tt&gt; 专门提供API服务，用域名 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;https://yanjong.wang&lt;/span&gt;&lt;/tt&gt; 专门提供Page服务。&lt;/p&gt;
&lt;p&gt;这些应用实践方法，都会为软件工程带来更多的复杂性，更高的集成难度。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id10"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id24"&gt;报文的承载能力&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;需要注意的是，一些HTTP方法，是不支持 &lt;tt class="docutils literal"&gt;Request Body&lt;/tt&gt; 进行数据传输的。&lt;/p&gt;
&lt;p&gt;虽然，作为客户端，可以在准备报文时，准备好 &lt;tt class="docutils literal"&gt;Request Body&lt;/tt&gt; 进行发送，但RFC规范，则对这种情况作出规定——服务端可以忽略这些不应该出现的 &lt;tt class="docutils literal"&gt;Request Body&lt;/tt&gt;。&lt;/p&gt;
&lt;p&gt;为人熟知的HTTP Method，就是 &lt;tt class="docutils literal"&gt;GET&lt;/tt&gt; , 它并不支持客户端发送 &lt;tt class="docutils literal"&gt;Request Body&lt;/tt&gt; , 而仅仅能够从 &lt;tt class="docutils literal"&gt;Request URL&lt;/tt&gt; 中传输请求数据。&lt;/p&gt;
&lt;p&gt;不太为人熟知的 &lt;tt class="docutils literal"&gt;DELETE&lt;/tt&gt; 也与 &lt;tt class="docutils literal"&gt;GET&lt;/tt&gt; 类似，不支持 &lt;tt class="docutils literal"&gt;Request Body&lt;/tt&gt;。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="rpc"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id25"&gt;复杂场景下的RPC协议与报文的要求&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="url"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id26"&gt;URL要求&lt;/a&gt;&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;需要能够秉承 REST 风格的优势，也就是 &lt;tt class="docutils literal"&gt;Uniform interface&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;能够直观的区分两次不同的请求，&lt;/li&gt;
&lt;li&gt;既能够表达对客观单个实体的操作，也能够表达对于一组实体的「事务性操作」&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id11"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id27"&gt;报文要求&lt;/a&gt;&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;以JSON为基础，在报文体较大时，不解析报文体保障性能。&lt;/li&gt;
&lt;li&gt;能够提供相关扩展机制，对参数进行非JSON的序列化&lt;/li&gt;
&lt;li&gt;能够快速的进行「回滚」，也就是撤销动作&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id12"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id28"&gt;追踪要求&lt;/a&gt;&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;能够在分布式条件下，对请求的调用链路进行跨系统无缝跟踪&lt;/li&gt;
&lt;li&gt;能够区分首次与重试不同的请求&lt;/li&gt;
&lt;li&gt;便于日志记录，还原故障现场的上下文环境&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id13"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id29"&gt;版本要求&lt;/a&gt;&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;能够区分不同的版本便于路由&lt;/li&gt;
&lt;li&gt;能够由客户端指定兼容版本区间&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id14"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id30"&gt;查询要求&lt;/a&gt;&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;提供处理过程中的状态查询能力&lt;/li&gt;
&lt;li&gt;提供处理结果的查询能力&lt;/li&gt;
&lt;li&gt;能够实时展示调用进度&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id15"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id31"&gt;安全要求&lt;/a&gt;&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;提供报文传输安全性保护能力&lt;/li&gt;
&lt;li&gt;提供双向身份认证能力&lt;/li&gt;
&lt;li&gt;流量控制&lt;/li&gt;
&lt;li&gt;应急隔离&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="ideas"></category><category term="架构"></category><category term="REST"></category><category term="HTTP/1.1"></category><category term="HTTP"></category></entry><entry><title>PaaS 为什么至今没有成功的商业案例</title><link href="/articles/colorful-ball-the-paas-foundation" rel="alternate"></link><published>2016-12-15T23:18:00+08:00</published><updated>2016-12-15T23:18:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2016-12-15:/articles/colorful-ball-the-paas-foundation</id><summary type="html">&lt;p class="first last"&gt;PaaS就像踩在海洋球上的空中楼阁.&lt;/p&gt;
</summary><content type="html">
&lt;!-- --&gt;
&lt;p&gt;海洋球是五颜六色，给儿童玩的一种游乐设施。海洋球的多变性，给孩子们带来了无穷的乐趣。当要用脚踩在上面的时候，海洋球都会由于受到外力，发生位移。对未来的无法预知，增加了这样一个简单娱乐项目的乐趣。&lt;/p&gt;
&lt;div class="section" id="iaas-paas-saas-windows"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id3"&gt;IaaS, PaaS, SaaS 在 Windows 桌面时代就早已存在&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;任何一个写云计算历史的，都会写到，云计算分为IaaS, PaaS, SaaS 三个层面。表面上，这是软件运行发生了革命性的变化，从集中式的硬件环境走向虚拟化的运行环境，并逐层提供向上支撑：IaaS提供虚拟化的硬件，PaaS提供分布式的中间件，SaaS则交付最终的应用，非常完美。&lt;/p&gt;
&lt;p&gt;在这里，需要着重关注一下PaaS。在云计算出现之前，PaaS的身影在哪里？其实，它不在服务器端，而是在最终用户的PC端，也就是以Microsoft Windows为代表的操作系统。&lt;/p&gt;
&lt;p&gt;没错，Windows 是上一个时代的PaaS。它定义了，上层应用程序的规范，定义了应用程序的标准格式PE，也提供了统一的软件开发工具Visual Studio。&lt;/p&gt;
&lt;p&gt;在互联网时代还没有到来的时候，软件的复制成本是高昂的，需要通过线传统渠道对软件进行销售。通过限制软件的使用许可——License，可以稳定的获得软件的销售收入。&lt;/p&gt;
&lt;p&gt;在那个时代，有Intel 这个IaaS厂商的大力支持，外加上实体的工业标准支持，给了Windows一个较为稳定的**基础基线**。在弱的工业标准，都要比离开硬件的软件文档标准强。（可以发现，吴军以及诸多老外，都喜欢称之为Wintel体系。）&lt;/p&gt;
&lt;p&gt;同时，在Windows这个唯一的PaaS之上，提供个各个硬件厂商的扩展空间，驱动程序机制。也是如今SPI (Service Provider Interface)的另一种实现原理。各大硬件厂商所开发的驱动，可以认为是Windows平台上的底层生态，UGC（User Generate Content）的方式之一；另一层面的UGC，则是使用 Visual Studio 开发的桌面应用程序（当然，还有Delphi 这个IDE）。&lt;/p&gt;
&lt;p&gt;微软唯一没有做的，是对第三方程序，尤其是桌面应用程序的知识产权保护。各种破解，软件加壳，反跟踪，都是那个时代流行的知识产权保护的「黑科技」。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ios"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id4"&gt;苹果、iOS和应用商店的启示&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;相比之下，苹果AppStore的成功，离不开iOS的安全性设计。iOS提供的是一个面向软件开发商有利的安全的运行环境。（现如今，越狱使用iOS系统的人，越来越少了。）这种机制，既保障了软件开发者的知识产权，也保障了软件最终用户的隐私安全——再非用户授权的条件下，第三方应用程序不得访问用户的隐私数据。例如：相册、联系人、相机、位置信息。&lt;/p&gt;
&lt;p&gt;苹果没有开放硬件的设计，不走Android基于通用硬件架构的软件形态。很多人都会归结为这是乔帮主的固执、以及对极致的追求。我倒是认为，这是软件需要一个明确硬件运行环境定义，才能够发挥出最大效能，实现最极致体验的必要条件。&lt;/p&gt;
&lt;p&gt;现如今，最大的PaaS，应当是苹果的iOS系统。当每个移动App去适配多款不同分辨率，不同屏幕尺寸，不同操作系统的Android系统的时候，受苦受累的，都是一线程序员。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id5"&gt;兼容的价值——只有苦劳，没用功劳&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;如果说，云计算所定义的PaaS是承上启下的一层，那么这一层既要肩肩负对硬件的兼容，又要肩负对上层应用的兼容。&lt;/p&gt;
&lt;p&gt;这看上去是中流砥柱。但目前，确只是空中楼阁。&lt;/p&gt;
&lt;p&gt;对于PaaS来说，IaaS是海洋球。&lt;/p&gt;
&lt;p&gt;对于提供虚拟化硬件环境的IaaS多方，距离应用层的SaaS太过于遥远，可以把责任推卸给PaaS。&lt;/p&gt;
&lt;p&gt;对于SaaS来说，PaaS是海洋球。&lt;/p&gt;
&lt;p&gt;对于在应用层体现IT整体价值的SaaS多方，则需要随着实际场景提出各种苛刻需求。&lt;/p&gt;
&lt;p&gt;多方对多方，这就是像三明治一样夹在中间PaaS。&lt;/p&gt;
&lt;p&gt;兼容性带来复杂，并且是「级数级的」也就是接入方的根据排列组合，产生若干总组合方式。&lt;/p&gt;
&lt;p&gt;还记得高中的那个对于组合的定义吗？&lt;/p&gt;
&lt;p&gt;从 &lt;tt class="docutils literal"&gt;n&lt;/tt&gt; 个不同元素中取出 &lt;tt class="docutils literal"&gt;m(m≤n)&lt;/tt&gt; 个元素的所有组合的个数，叫做从 &lt;tt class="docutils literal"&gt;n&lt;/tt&gt; 个不同元素中取出 &lt;tt class="docutils literal"&gt;m&lt;/tt&gt; 个元素的组合数。用符号 &lt;tt class="docutils literal"&gt;C(n,m)&lt;/tt&gt; 表示。&lt;/p&gt;
&lt;p&gt;这就是PaaS所要面临的兼容性复杂度上限。&lt;/p&gt;
&lt;p&gt;于是乎，PaaS总是找不到硬气的存在理由。对于任意的直接用户而言，为其兼容它用不着的某个技术，价值无法得到认可。&lt;/p&gt;
&lt;p&gt;PaaS的复杂性，没有显而易见的价值。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id6"&gt;确保PaaS可持续发展的四个正确姿势&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;从逻辑上，PaaS确实应该存在的。这直接关乎到软件的开发成本。&lt;/p&gt;
&lt;p&gt;众所周知，从事软件工作的优质一线编码工程，从事设计与框架落地的架构师，目前都被优厚的待遇，光明的职业发展空间所吸引，大多就职于世界上或者国内一流的互联网公司。&lt;/p&gt;
&lt;p&gt;这些优秀的工程师与架构师，就像航空公司的飞行员。需要大量时间的磨练，才能成长。任何的成长，都需要时间——这个无条件的要素。&lt;/p&gt;
&lt;p&gt;反观程序员的日常工作之一——编码，其中又饱含了大量重复的劳动。例如，如何解决分布式事务问题，如何保障高可用的稳定性，如何把业务逻辑实现。系统中的知识是通过零碎的代码集成在一起的，知识不仅在要在企业中复用，更需要在社会中发挥价值，这种价值的发挥，不应当以员工的跨企业流动为转移。&lt;/p&gt;
&lt;p&gt;PaaS要想要得到健康的发展，以下四个方面是重中之重的必要条件：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;运行在可控的虚拟硬件环境下&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此处的可控，不代表自主建设，也可以选择一到两个差异性不大的公有云IaaS为基础。有条件的可以自行建设IaaS。&lt;/p&gt;
&lt;p&gt;目的只有一个，降低底层兼容性的成本。&lt;/p&gt;
&lt;p&gt;另外，从降低整个社会成本的角度出发，采用公有云的商业模式，也是最低的。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;提供安全的数据处理环境&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;软件运行时数据所有权，是最终用户的。运行环境有义务和责任，保障数据的安全保存、安全传输、安全处理。其中前两者，目前的技术较为成熟，但安全管理，尤其是对秘钥以及证书的安全管理，使得安全的加密算法形同虚设。这也是软件研发、运营过程中的短板。&lt;/p&gt;
&lt;p&gt;安全处理技术，是目前大数据安全、合法的最大屏障。也就是说，当数据的第一创造者，将数据交给第三方进行计算的时候，第三方不能够获得数据的真实含义——在密码学上的算法称为「同态加密」——还相当不成熟。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;提供软件运行的精确能效计量&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;软件，本质上是若干知识沉淀为代码（用代码解决人的问题、用代码解决计算机的问题），而软件价值的体现方式，是被使用。任何软件代码中，都包含了若干知识工作者的成果。&lt;/p&gt;
&lt;p&gt;每一次的代码集成、每一次的函数调用，都是一次「知识互联」的过程。其中包含了对业务知识的使用，对计算机知识的使用。在不能够区分每个知识能效的条件下，价值的最终体现，就像「大锅饭」一样。在发生故障的时候，一定会发生相互推诿；在优秀评比的时候，一定会发生不公正的事件。&lt;/p&gt;
&lt;p&gt;架构中唯一职责的设计，需要与自然人形成映射，不管是从客观知识点，还是从代码实现上。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;软件的智能集成&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;软件的每个小模块，就犹如若干个神经元。在目前的大多数情况下，都通过静态的编译脚本，把他们编译称为部署介质，或是部署包或是镜像。在软件的运行期，它们又通过程序设计好的规则，进行相互访问，以实现人定义好的处理规则。&lt;/p&gt;
&lt;p&gt;软件的模块足够多，组合的方式也无法枚举。&lt;/p&gt;
&lt;p&gt;未来，应当采用面向结果集的交互方式，与最终用户进行人机交互。&lt;/p&gt;
&lt;p&gt;就犹如导航，设置好目的地，设置好必经的路径，剩下的，交给机器学习做自动集成和优化吧。&lt;/p&gt;
&lt;p&gt;海洋球，应当是软件在应用层给人以随需而变的体验。&lt;/p&gt;
&lt;p&gt;软件，应当代表最先进的生产力。&lt;/p&gt;
&lt;/div&gt;
</content><category term="ideas"></category><category term="软件"></category><category term="PaaS"></category></entry><entry><title>专业知识型产品的开发与价值体现</title><link href="/articles/the-development-of-professional-knowledge-products-and-value-representation" rel="alternate"></link><published>2016-12-11T09:18:00+08:00</published><updated>2016-12-11T09:18:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2016-12-11:/articles/the-development-of-professional-knowledge-products-and-value-representation</id><summary type="html">&lt;p class="first last"&gt;软件源代码、学术论文和发明专利，都是专业知识工作的成果。它们的获得方法、价值的体现方式，都有着很多的相似之处。机器学习，让计算机从专业知识的价值放大器变为了开发器。&lt;/p&gt;
</summary><content type="html">
&lt;!-- --&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id7"&gt;专业知识的形态&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;专业知识的形态包括：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;软件源代码&lt;/li&gt;
&lt;li&gt;学术性论文&lt;/li&gt;
&lt;li&gt;发明专利&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;软件源代码的特殊性是程序员进行编写（这需要专业知识），它的是使用方式是由计算机对其进行执行，自然人使用软件的过程是驱动软件的运行状态发生一系列的改变。&lt;/p&gt;
&lt;p&gt;学术性论文或者发明专利（这也需要专业知识），都是以文章的形式编写，需要通过自然人对其进行直接使用——阅读与理解。&lt;/p&gt;
&lt;p&gt;学术论文价值表现是对其进行引用，发明专利的价值是其融入到具体的商业产品之中，而代码的价值直接表现是被运行时依赖。它们都是知识工作的产品。&lt;/p&gt;
&lt;p&gt;在形成有价值的知识成果之前，都需要经历入门训练的过程，对于普通人来说，需要18个月以上的初步学习与实践。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id8"&gt;专业知识型产品的开发&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;专业知识型产品，包含了三个方面：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;对先前知识的理解，成为了可利用的已有知识资源（旧知识）。&lt;/li&gt;
&lt;li&gt;对未知的探索形成的知识型总结，成为了新的知识资源。知和识的过程，是一种对信息的非线性加工工艺，而这种工艺，应该叫智慧。&lt;/li&gt;
&lt;li&gt;知识型产品中，一定包含了对新旧知识的集成方案，而方案本身，也是一种新的知识。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中，对于未知的定义，是相对于知识型产品制造者而言的，也就是相对来说是一个唯心主义的定义。也就是我不知道，等于不存在。&lt;/p&gt;
&lt;p&gt;「重新发明轮子」的现象，是一个中性的现象。重新发明轮子的过程，是对旧知识的理解的过程，也是开发「新知识」的过程。&lt;/p&gt;
&lt;p&gt;时间和智慧，是知识型产品的最原始和最必要的生产资料。&lt;/p&gt;
&lt;p&gt;获得时间的方法，可以通过购买其他自然人的工作时间，也可以把没有创造性的脑力劳动交给计算机。&lt;/p&gt;
&lt;p&gt;而获得智慧的方法是？&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id9"&gt;专业知识工作的价值体现&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;自然人个体或团体，是知识的原始获得者。这些个体，一般服务于四类组织：高校与科研机构、企业研究院、软件公司，以及独立个人或团体。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;来自高校与科研院所的学术论文&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;获得研究基金自助，是其主要变现方法。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;来自企业研究院的发明专利&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;发明专利，作为企业的无形资产，也作为企业产品的无形原材料，融入到企业产品中，经过市场销售进行变现。&lt;/p&gt;
&lt;p&gt;专利发明人，企业通过薪金对他的知识型劳动成果进行购买。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;商业产品源代码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;作为商业产品的一部分，这类产品不一定是软件产品，也很有可能是一个虚拟平台的一部分，例如互联网平台。&lt;/p&gt;
&lt;p&gt;源代码的编写者，同样的，企业通过薪金对他的知识型劳动成果进行购买。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;独立个人与团体开源源代码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;源代码的作者，可能会获得某些开源软件基金会的部分资助，也可能自行设立收费渠道获得「善意的捐助」，再或者增强了在行业届的影响力，间接地获得经济利益。&lt;/p&gt;
&lt;p&gt;而开源基金会的支撑着，往往来自商业公司。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id10"&gt;专业知识产权的商业保护&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;学术论文&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;学术论文，有着严格的体制对齐进行原创性保护，例如学位评定、职位评定，这些都将直接影响到知识原始获得者的经济利益。&lt;/p&gt;
&lt;p&gt;学术论文的引用，是公开且唯一的，有公开的独立机构确认引用的有效性。同时，每一次的引用，都增加了知识的价值。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;软件源代码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;软件源代码的依赖使用，是非公开的，这是源代码的运行时环境所客观决定的。&lt;/p&gt;
&lt;p&gt;对于计算机的知识产权保护的措施，仍然是计算机程序，在原作者对最终运行环境不可控的条件下，对计算机程序进行逆向工程获得源代码，是知识产权受到侵犯的常见方式。&lt;/p&gt;
&lt;p&gt;计算机软件的物理规模，取决于其架构的形态，典型的Client/Server架构，是普遍的形态。&lt;/p&gt;
&lt;p&gt;在Client端，成功的商业化知识产权保护形态是苹果iOS系统，完善的保护了每个App的源代码知识产权（归软件的开发商）与软件运行过程中产生数据（所有权归软件的最终用户）的安全性。&lt;/p&gt;
&lt;p&gt;在Server端，有条件成为公开的独立机构，能够对其运行期使用进行有效保护的模式是公有云。公有云保障知识产权的公信力，是在公有云上建立商业生态的必要条件之一。同时，公有云还需要做到对代码的使用计量和计费，对数据进行隐私保护。&lt;/p&gt;
&lt;p&gt;然而，具备这些特性的公有云，似乎还没有出现。&lt;/p&gt;
&lt;p&gt;需要注意的是，Browser/Server的架构下的Browser侧的知识产权较难以保护，也许各大浏览器厂商正在努力，我却不知道。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id11"&gt;从知识价值放大器到知识开发器&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;机器学习的价值，是将计算机的价值定位，从知识价值的放大器转变为了开发器。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;计算机，作为知识价值放大器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代码的优势，是能够通过计算机，迅速放大其价值。&lt;/p&gt;
&lt;p&gt;相比之下，学术论文的价值，放大的方法受制于行业体制，较为缓慢。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;计算机，作为原始知识开发器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在机器学习大规模到来的时代里，机器学习的结果——对于特定应用场景的模型参数，是除了自然人之外获得知识的新方式。&lt;/p&gt;
&lt;p&gt;通过机器学习所获得的模型，是一种如何集成现有「神经元」，广义上是任何资源进行使用的集成知识。&lt;/p&gt;
&lt;p&gt;有意思的是，当计算机成为知识生成器之后，也需要通过「训练集数据」，进行入门的学习和实践，才能产生实际价值。&lt;/p&gt;
&lt;/div&gt;
</content><category term="ideas"></category><category term="软件"></category><category term="知识型产品"></category><category term="机器学习"></category></entry><entry><title>理解软件</title><link href="/articles/understanding-software" rel="alternate"></link><published>2016-12-10T09:44:00+08:00</published><updated>2016-12-10T09:44:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2016-12-10:/articles/understanding-software</id><summary type="html">&lt;p class="first last"&gt;软件本质上是复杂的。但，软件表象上「应该」是简单的。&lt;/p&gt;
</summary><content type="html">
&lt;!-- --&gt;
&lt;p&gt;软件的出现，是为了解决计算机本身硬件无法快速适配实际应用场景所提供的扩展能力。（虽然有FPGA，可以对硬件进行重复性的烧录定制）&lt;/p&gt;
&lt;p&gt;软件本质上是复杂的。&lt;/p&gt;
&lt;p&gt;但，软件表象上「应该」是简单的。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;软件是工具&lt;/li&gt;
&lt;li&gt;工具的出现，是为了解决某个特殊问题，并且高效&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;软件 = 代码 + 数据&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;软件是处理数据的工具&lt;/li&gt;
&lt;li&gt;数据需要通过代码表达&lt;/li&gt;
&lt;li&gt;处理方法也需要通过代码表达&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id6"&gt;代码&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;代码，很多时候都是指源代码。也就是用某一种计算机语言，通过程序员手工编写的方式，阐述由计算机执行的指令的逻辑。&lt;/p&gt;
&lt;p&gt;在一个混合的场景下，一段代码可能解决了多个方面的问题：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;现实中的实际问题&lt;/li&gt;
&lt;li&gt;计算机运行时的问题&lt;/li&gt;
&lt;li&gt;记录了整个处理过程&lt;/li&gt;
&lt;li&gt;额外提供了事中、事后的监控审计能力&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在这种场景下，编码对于程序员而言，是一个跨领域知识集成的过程。这些知识都通过代码的方式，被集成在一个个源代码文件里。程序员需要深入理解这些来自不同层面的知识，平衡相互之间的冲突，才能得到一个较为合适的程序。&lt;/p&gt;
&lt;p&gt;这是一个制造虚拟世界的过程，由于制造水平和认知的限制，很容易造出一面面现实世界的哈哈镜。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id7"&gt;数据&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;很多时候，人们对于一个概念性名词的理解是不同的，也就是说，对于同一个概念，不同的人有各自不同的理解。概念是通过总结、抽象而得到的，反过来，理解概念的过程，是一个主体在其实际环境进行解释的过程。&lt;/p&gt;
&lt;p&gt;实际上，人还热衷于给一些概念起新的别名，或者用简写的符号，方便自己的理解，或者体现一些与众不同的理念。这些行为，不但增加了其他人理解这些符号的难度，增加了产生误解的可能。&lt;/p&gt;
&lt;p&gt;这一切，最终都会在数据上体现出来。&lt;/p&gt;
&lt;p&gt;数据是结构化的信息。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id8"&gt;环境&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;软件，没有任何保存价值，只有使用价值。&lt;/p&gt;
&lt;p&gt;软件需要运行环境才能发挥其使用价值，这从根本上还需要硬件设备以及电力。&lt;/p&gt;
&lt;p&gt;操作系统，完成了软件运行环境差异化的第一层屏蔽与封装。&lt;/p&gt;
&lt;p&gt;现如今，实际的应用软件，都需要需要依赖操作系统与其他第三方软件才能够工作。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id9"&gt;「缺陷」与「版本」&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;软件是知识的沉淀，是把已知的知识翻译为计算机语言的成果。&lt;/p&gt;
&lt;p&gt;知识是一定是有局限性的，受制于人所在的环境、视野以及认知的方法，甚至还有文化和政治的因素。&lt;/p&gt;
&lt;p&gt;知识的集成，有若干种选择，自然也受到价值观的影响。&lt;/p&gt;
&lt;p&gt;因此，软件存在缺陷也是必然的。&lt;/p&gt;
&lt;p&gt;软件，永远都不会到达一个没有缺陷的状态。未知相对应已知，太过于浩瀚。为此，为了使得现有的知识得以被使用，为软件标记一个「相对成熟」的稳定状态，人们采用了「版本」这个概念。&lt;/p&gt;
&lt;/div&gt;
</content><category term="ideas"></category><category term="软件"></category></entry><entry><title>Happy Hacking Keyboard Professional 2 Type-S</title><link href="/articles/hhkb-pro2-type_s-cheat-sheet" rel="alternate"></link><published>2016-12-05T21:12:00+08:00</published><updated>2016-12-05T21:12:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2016-12-05:/articles/hhkb-pro2-type_s-cheat-sheet</id><summary type="html">&lt;p class="first last"&gt;HHKB 在 macOS 上的使用速记&lt;/p&gt;
</summary><content type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;键帽&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;空格键的键帽，最好拆卸来之后反装，否则容易伤到大拇指&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;光标移动组合键&lt;/h2&gt;
&lt;p&gt;其实下面这些快捷键，都是macOS自带的快捷键&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;上一行 &lt;tt class="docutils literal"&gt;CTRL&lt;/tt&gt; + &lt;tt class="docutils literal"&gt;p&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;下一行 &lt;tt class="docutils literal"&gt;CTRL&lt;/tt&gt; + &lt;tt class="docutils literal"&gt;n&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;行首 &lt;tt class="docutils literal"&gt;CTRL&lt;/tt&gt; + &lt;tt class="docutils literal"&gt;a&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;行末 &lt;tt class="docutils literal"&gt;CTRL&lt;/tt&gt; + &lt;tt class="docutils literal"&gt;e&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;删除后一个字符 &lt;tt class="docutils literal"&gt;CTRL&lt;/tt&gt; + &lt;tt class="docutils literal"&gt;d&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;删除前一个字符 &lt;tt class="docutils literal"&gt;CTRL&lt;/tt&gt; + &lt;tt class="docutils literal"&gt;h&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;删除光标之后的所有内容 &lt;tt class="docutils literal"&gt;CTRL&lt;/tt&gt; + &lt;tt class="docutils literal"&gt;k&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;交换光标左右两个字符 &lt;tt class="docutils literal"&gt;CTRL&lt;/tt&gt; + &lt;tt class="docutils literal"&gt;t&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;移到下一个字符 &lt;tt class="docutils literal"&gt;CTRL&lt;/tt&gt; + &lt;tt class="docutils literal"&gt;f&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;移到下一个字符 &lt;tt class="docutils literal"&gt;CTRL&lt;/tt&gt; + &lt;tt class="docutils literal"&gt;b&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;括号匹配 &lt;tt class="docutils literal"&gt;CTRL&lt;/tt&gt; + &lt;tt class="docutils literal"&gt;m&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://kaochenlong.com/2013/06/29/about-hhkb-pro2/"&gt;http://kaochenlong.com/2013/06/29/about-hhkb-pro2/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://support.apple.com/en-us/HT201236"&gt;https://support.apple.com/en-us/HT201236&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content><category term="experiences"></category><category term="HHKB"></category><category term="macOS"></category></entry><entry><title>软件结构的十个基本概念</title><link href="/articles/10-basic-concepts-of-software-structure" rel="alternate"></link><published>2016-10-06T10:03:00+08:00</published><updated>2016-10-06T10:03:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2016-10-06:/articles/10-basic-concepts-of-software-structure</id><summary type="html">&lt;p class="first last"&gt;从大局上，正确定义和理解软件结构上的基本概念，是深入理解软件，提升团队生产力和创造力的基础。&lt;/p&gt;
</summary><content type="html">
&lt;!-- --&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id19"&gt;概念的意义&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;概念的初衷，是为了沟通，为了加速理解。&lt;/p&gt;
&lt;p&gt;如今的这个社会，概念的定义，一部分变成了「市场宣传」的「洗脑行为」。 比如，各大汽车厂商，都会定期面向市场发布「概念车」，向广大的消费者宣传品牌理念，技术趋势，营造诸如「高科技」、「人性化」、「环保节能」的品牌形象。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;人的差异，是源于天生对于概念的不同认识、理解，这和其经历过的环境，接受的教育，传承的文化息息相关。不同文化和理念，会对相同概念产生不同的诠释，并体现在对相关事物进行选择的各个方面。&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id20"&gt;概念的定义&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;一个好的概念，一定是面向目标受众，指代清晰，便于理解的。&lt;/p&gt;
&lt;p&gt;非普适的、专业领域的概念，有另外的称呼——术语。&lt;/p&gt;
&lt;p&gt;越抽象的概念，其内涵越小，外延越大，也就是可以解释的范围越大，可以根据实际情况解释出不同的内涵。&lt;/p&gt;
&lt;p&gt;越具象的概念，其内涵越大，外延越小，也就是没有太多解释的必要，有特指的效果。&lt;/p&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id21"&gt;聚合概念&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一般的概念定义，是基于一些已经存在、被广泛接受的概念，进行缩略和重组，赋予新的内含，这种类型概念在理解时，一般可以通过「望文生义」的想象，由受众自行解释内涵。&lt;/p&gt;
&lt;p&gt;以「手机」这个概念，举个例子。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;手机 —— 可以拿在手里的电话机（当然，手机在别处也成为「行动电话」）&lt;/li&gt;
&lt;li&gt;= 手持 + 电话机&lt;/li&gt;
&lt;li&gt;= 手持 + （用电 +可以通话 + 机器）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可是，「无绳电话」又是另外一个截然不同的解释了。概念的诞生，有时会带着时代的烙印。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id22"&gt;借用概念&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;当事物的内涵发生质变的清下，外形不变，人们就又会对概念进行升级。有时，会借用一些概念，以示区分。&lt;/p&gt;
&lt;p&gt;以「功能手机」和「智能手机」这两个概念，再举个例子。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;功能手机 —— 拥有不同外壳，但仅仅可以拨打电话，发送短信的手机&lt;/li&gt;
&lt;li&gt;智能手机 —— 可以连接数据网络，自行安装App应用，满足每个人个性化需求的手机&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;「智能手机」其实是借用了「智能」这个概念，其实远远没有达到「智能」，任何手机目前都没有「先于人类思考、归纳、演绎」的能力，事实上是由无数的程序员，通过代码，以软件的形式，把预设好的场景、规则植入了硬件之上，使之产生了「智能」的假象。&lt;/p&gt;
&lt;p&gt;人们同样喜欢在从其他完全不相关的行业、生活场景中，借用概念。&lt;/p&gt;
&lt;p&gt;同样的，在英文中，人们习惯于对词根进行重组，将单词进行拼接。&lt;/p&gt;
&lt;p&gt;所以，借用概念，有时也是偷换概念。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id23"&gt;创造概念&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;创造一个全新的概念，是需要大量的文字、图片、语音、视屏，多维度进行阐释。更多的情况下，全新的概念，太过于抽象，而被定义成了品牌。&lt;/p&gt;
&lt;p&gt;全新的概念，其实没有那么容易被创造。&lt;/p&gt;
&lt;p&gt;概念的根源，是宗教和信仰，是看上去不证自明的公理。（科学,也是一种宗教）&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id24"&gt;概念的演变&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;大部分的概念，是通过组合或者借用的方式形成的。&lt;/p&gt;
&lt;p&gt;当这些被重组的概念的内涵，作为顶层概念的根基，随着社会发展产生变化的时候，会逐渐与定义时偏差的解释，这导致了顶层的概念同样需要进行重新的定义和解释。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id25"&gt;十个基本概念&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;软件只有被运行，才能产生使用价值。它始于硬件，终于用户交互，是具备「层叠集成」特性的产物。&lt;/p&gt;
&lt;div class="section" id="id9"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id26"&gt;代码&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;代码，可以用来表示与计算机无关的实体、关系、逻辑，也可以用来协调和控制计算机的运行时逻辑。&lt;/p&gt;
&lt;p&gt;代码，简单而言，至少应该被分为源代码和机器码。&lt;/p&gt;
&lt;p&gt;源代码和机器码，是代码的两种形态，前者用于和人的交互，后者用于和机器的交互。两者的相互转换的方法，是编译和反编译，当然这两个过程会产生失真，反编译比较严重。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id10"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id27"&gt;版本&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;代码是对客体，用特定的计算机语言进行的「结构化描述」，也是阶段性认知的产物。&lt;/p&gt;
&lt;p&gt;版本，则是对代码进行了「不可变的固化」，形成一个暂时地「附属代号」。&lt;/p&gt;
&lt;p&gt;版本的意义在于，容易让受众理解，一个新的版本是进行了部分优化、正向修正的结果，但代码主体没有发生太大的变化。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id11"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id28"&gt;数据&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;数据，是特定的计算机处理逻辑能够处理的「结构化信息」。它可以存在于内存或者处理器中，也可以存在于存储介质上，还可以存在于网络中。&lt;/p&gt;
&lt;p&gt;数据，是代码的血液，使运行中的代码产生实际价值。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id12"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id29"&gt;资源&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;资源，是个广义的、相对的概念。&lt;/p&gt;
&lt;p&gt;正因为软件在运行时，是具备层叠集成的特性，所以不管采用哪种分层方法，都能为某一层的软件，找到它的运行时依赖——资源。&lt;/p&gt;
&lt;p&gt;资源，既包括用代码描述的可被处理的数据，也包括通过代码定义的逻辑处理能力。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id13"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id30"&gt;环境&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;环境，也是一个广义的、相对的概念。&lt;/p&gt;
&lt;p&gt;软件需要被运行，环境是软件的物理运行时基础。不同层面的软件，具有不同的运行环境。&lt;/p&gt;
&lt;p&gt;例如，操作系统的运行环境则是硬件，而浏览器中的脚本代码，运行时环境则是脚本解释器。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id14"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id31"&gt;容器&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;容器，同样是个广义的、相对的概念。&lt;/p&gt;
&lt;p&gt;容器，是对运行时环境的进一步虚拟划分的结果。 &lt;strong&gt;隔离受控是容器的特性&lt;/strong&gt; ，两个不同容器中的代码，其对资源的操作是严格受到容器控制的。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;提供组件（即容器中的内容）的运行环境。&lt;/li&gt;
&lt;li&gt;一种容器，面向不同内容，是同质的。&lt;/li&gt;
&lt;li&gt;容器保证运行期不同内容的隔离。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不同层面的软件，可以有不同的实现。例如，在操作系统层面的虚拟化（Docker）、服务与应用层面的运行时环境（OSGi Bundle）等等。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id15"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id32"&gt;组件&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;组件，是一组能够独立部署于容器内，提供有效功能的代码，是模块的物理集合。组件在设计时，可以申明运行时的资源依赖，并由容器在运行时为期加载所申明的资源。&lt;/p&gt;
&lt;p&gt;一个容器内可以有 &lt;tt class="docutils literal"&gt;m&lt;/tt&gt; 个组件，且 &lt;tt class="docutils literal"&gt;m ≥ 1&lt;/tt&gt;。当 &lt;tt class="docutils literal"&gt;m &amp;gt; 1&lt;/tt&gt; 时，实现了组件化。&lt;/p&gt;
&lt;p&gt;组件化，是软件设计中常用的设计方法。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id16"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id33"&gt;模块&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;模块，是一些独立具备有效功能的代码，但模块不能在运行时环境中独立运行。一个组件在设计期申明的运行期资源依赖，可以被多个模块所共享。&lt;/p&gt;
&lt;p&gt;一个组件可以有 &lt;tt class="docutils literal"&gt;n&lt;/tt&gt; 个模块，且 &lt;tt class="docutils literal"&gt;n ≥ 1&lt;/tt&gt; 。当 &lt;tt class="docutils literal"&gt;n &amp;gt; 1&lt;/tt&gt; 时，实现了模块化。&lt;/p&gt;
&lt;p&gt;模块化，也是软件设计中常用的设计方法。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id17"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id34"&gt;插件&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;插件，一般不具备独立的功能，直接依赖于运行环境所提供的资源，不能在设计期向运行环境声明外部的依赖资源。插件中包含的逻辑功能，更多的是以「插入」的方式，嵌入到预先设定的逻辑中，以此适应和增强不同的应用场景。&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;Filter Chain&lt;/tt&gt; 是一种典型的插件化设计模式。&lt;/p&gt;
&lt;p&gt;插件化，同样是软件设计中常用的设计方法。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id18"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id35"&gt;配置&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;配置，同样不具备独立的功能，更多的使用场景，是由用户在使用过程中，自行设定的逻辑或者参数值。配置一般不需要编译。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="ideas"></category><category term="架构"></category><category term="软件"></category></entry><entry><title>软件，不简单</title><link href="/articles/software-is-not-simple" rel="alternate"></link><published>2016-10-05T10:14:00+08:00</published><updated>2016-10-05T10:14:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2016-10-05:/articles/software-is-not-simple</id><summary type="html">&lt;p class="first last"&gt;人们偏爱「娱乐化的图形、语音和视频」，计算机偏爱「严肃的数据和逻辑」。&lt;/p&gt;
</summary><content type="html">
&lt;!-- --&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id12"&gt;软件的鸿沟&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;并不是每个人，都可以制造一个软件，它可能是一个简单的应用，目的是让计算机为我所用。&lt;/p&gt;
&lt;p&gt;人们在生活中，所使用的自然语言中的很多 &lt;strong&gt;普适&lt;/strong&gt; 的「形容词」，一般都在人与人的沟通中，由客体根据自身特点和实际场景进行 &lt;strong&gt;解释&lt;/strong&gt;  。 例如，「好看」，每个人的解释都不一样。&lt;/p&gt;
&lt;p&gt;计算机也有语言和各种方言，人们习惯性的称之为「代码」，并一般用「代码」来指代「源代码」。计算机语言，是「程序员」发起的与计算机沟通的「单向语言」（计算机和「程序员」沟通并不这样「说话」）。而在计算机的代码中，从来没有出现过「好看」，这样的形容词。&lt;/p&gt;
&lt;p&gt;代码，代码，到底用码代表了什么？&lt;/p&gt;
&lt;p&gt;与硬件交互的代码，更多的是指挥硬件，如何进行逻辑运算、管理内存、读写硬盘——毫无面向普通人的「应用价值」。&lt;/p&gt;
&lt;p&gt;与生活应用相关的代码，更多的解决人们的实际问题——社交、购物、出行等等等等。&lt;/p&gt;
&lt;p&gt;软件和普通人，存在着巨大的鸿沟。&lt;/p&gt;
&lt;p&gt;一般人无法理解，在软件领域里：架构，是骨架；场景，是肌肉；数据，是血液；界面，是皮肤；体验，是外衣。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这一切，都需要代码表达。&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id13"&gt;跨越鸿沟的程序员&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;黑客也是创造者，与画家、建筑师、作家一样。—— Paul Graham: &lt;em&gt;Hackers and Painters: Big Ideas from the Computer Age&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;优秀的程序员，既是自然语言的翻译师，又是复杂软件系统的建筑师，还得是懂得体验的交互设计师。&lt;/p&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id14"&gt;拥有系统性认知的能力&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;「盲人摸象」的故事，是说在缺乏整体的「系统性大局观」的条件下，每个人都用自己的手，去感受大象的外形。&lt;/p&gt;
&lt;p&gt;现如今，面对更为复杂的世界，每个人获取信息的带宽，却是有限的。有限的时间和精力，不可能认知无限的未知。碎片化与社交化所形成的认知方式，使得每个个体，更难以形成系统化的知识脉络。&lt;/p&gt;
&lt;p&gt;系统性认知，是从已知中找到一个全面且条理性强的普适规律——知识，并能够用规律，有效地推理未知。系统性，是全面性和条理性的综合体现。&lt;/p&gt;
&lt;p&gt;对特定场景的系统性认知，是软件在此类场景下产生应用价值的前提。其中，包含两个要素：抽象和建模。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;抽象——提炼概念&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;场景的参与者是多视角的，通过简单的几个现象或者场景，就能够迅速捕获、提炼出关键概念，这是一项典型的「认知技能」。为一个正确的概念取名，是沟通的前提——名不正则言不顺。对于新生事物，新概念的出现，需要大量的传播成本，才能使得每个受众——人，产生 &lt;strong&gt;与期望相符&lt;/strong&gt; 的「正确理解」。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;建模——理清关系&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过场景之间、参与者之间的关联分析，能够找出多个视角各自的关注点，是建模的基础。缺乏实际经验，缺乏站在人性角度的思考，是难以建立一个让多方认可的模型。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id15"&gt;深刻理解软件的局限性&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;在克服了硬件的局限性之后，还需要通过三类最基本的数据处理方式，建造出五花八门的应用软件。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;条处理&lt;ul&gt;
&lt;li&gt;典型以表单交互为源，逐级驱动&lt;/li&gt;
&lt;li&gt;异步调用为主，异步中断比较困难&lt;/li&gt;
&lt;li&gt;容易产生分布式事务&lt;/li&gt;
&lt;li&gt;处理时长为秒级以内&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;流处理&lt;ul&gt;
&lt;li&gt;典型以多维、高维事件为源，内存计算为主&lt;/li&gt;
&lt;li&gt;单点故障较容易产生，多实例并行计算一致性较难保证&lt;/li&gt;
&lt;li&gt;计算前，采用数据字典进行压缩编码，有利于提高降低内存开销&lt;/li&gt;
&lt;li&gt;处理时长为毫秒级或者更短&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;批处理&lt;ul&gt;
&lt;li&gt;典型以数据库或文件中的批量数据为源，以并行计算任务为主&lt;/li&gt;
&lt;li&gt;一般由集中的调度器，进行任务的调度&lt;/li&gt;
&lt;li&gt;处理时长为秒级以上，分钟级较为常见&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id16"&gt;软件为什么变复杂&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id17"&gt;提高单个硬件的稳定性&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;大部分的硬件的「工况」都是不可靠的，导致软件也缺乏了必要的「工作环境」：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;断电会无法工作&lt;/li&gt;
&lt;li&gt;过热会自燃烧毁&lt;/li&gt;
&lt;li&gt;遇水会短路烧毁&lt;/li&gt;
&lt;li&gt;摔打会自燃解体&lt;/li&gt;
&lt;li&gt;光纤被铲车挖断&lt;/li&gt;
&lt;li&gt;电线被老鼠咬断&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此，世上也没有谁，能够保证硬件至软件的100%可靠，不同的可靠性，所带来的成本开销，肯能是指数级增长的。&lt;/p&gt;
&lt;p&gt;硬件的品类与品质越多，其稳定性提升的「高可用软件方案」也越多、越复杂。&lt;/p&gt;
&lt;p&gt;——软件变复杂了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id18"&gt;为应用场景提供更多的基础能力&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;人类社会的发展，是通过知识的积累和传承。而认知这个「实验过程」，永远不会停下脚步。为了让硬件产生「应用价值」，软件则需要在不断克服「硬件稳定性不足」的条件下，虚拟化出「人、财、物、事」的社会镜像，以满足各种各样的「成熟的旧规则」和「不成熟的新想法」。&lt;/p&gt;
&lt;p&gt;人类有记忆，所以寄希望于用硬件存储，来模拟一个「永不遗忘」的虚拟记忆。
人类有沟通，所以寄希望于用通信网络，来模拟一个「万物相连」的虚拟沟通。
人类有逻辑，所以寄希望于用逻辑规则，来模拟一个「适时而变」的虚拟规则。&lt;/p&gt;
&lt;p&gt;——软件变复杂了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id19"&gt;要满足定性和定量的双重要求&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;软件的底层——硬件——是机械性的，不管归结于基因或是传承，各个层面的软件，都体现着这样的「非黑即白的逻辑性」。也就是说，「天生丽质」的软件，自然而然的具备了定量条件下逻辑计算的能力。&lt;/p&gt;
&lt;p&gt;没有任何一门软件语言，具备原生的「定性关键词」。相比于「好与坏」，软件其实只懂得「合适」。也就是说，给定一个标准，软件可以告诉你，给定的对象与标准之间的差距有多少，并根据这个差距，再通过一个给定的公式，得出是否合适的结论。&lt;/p&gt;
&lt;p&gt;社会中的沟通，很多场景下都是基于不太确定的概念以及定性的形容词，人们需要解释，或者自行解释。比如， XXXX 的解释权，归YYY所有；请 &lt;strong&gt;拉好&lt;/strong&gt; 扶手。&lt;/p&gt;
&lt;p&gt;——软件变复杂了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id10"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id20"&gt;要满足人的无限的心理预期&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;人性的弱点之一，在于「外貌协会」。&lt;/p&gt;
&lt;p&gt;响应，布局，配色，文案，手势，一切都要符合用户的心理预期。&lt;/p&gt;
&lt;p&gt;无需解释的表达，才能不需要说明书。&lt;/p&gt;
&lt;p&gt;人们还希望计算机理所应当的具备：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;永不丢失的记忆&lt;/li&gt;
&lt;li&gt;呼之即来的速度&lt;/li&gt;
&lt;li&gt;因需即变的更新&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;——软件变复杂了。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id11"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id21"&gt;无数个我们&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;我们在虚拟的世界里，制造了无数个我们的影子。&lt;/p&gt;
&lt;p&gt;我们希望在虚拟的世界里，我们的记忆永远不会被忘记。&lt;/p&gt;
&lt;p&gt;我们希望在虚拟的世界里，实现我们的奇思妙想。&lt;/p&gt;
&lt;p&gt;我们还不希望其他人通过这些影子，拼凑出现实世界中的自己。&lt;/p&gt;
&lt;p&gt;我们还希望计算机帮助我们加速认知...&lt;/p&gt;
&lt;/div&gt;
</content><category term="ideas"></category><category term="架构"></category><category term="软件"></category></entry><entry><title>标识与唯一标识概览</title><link href="/articles/id-and-unique-id-overview" rel="alternate"></link><published>2016-09-28T22:42:00+08:00</published><updated>2016-09-28T22:42:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2016-09-28:/articles/id-and-unique-id-overview</id><summary type="html">&lt;p class="first last"&gt;标识是无处不在的，生成标识的主体是人，那么它就是一个命名过程，如果是计算机，那么它就是一个生成过程。如何保证分布式系统下，并行生成标识的唯一与标识的命名空间有着密不可分的关系。&lt;/p&gt;
</summary><content type="html">
&lt;!-- --&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id45"&gt;无处不在的标识&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id46"&gt;名称是一种相对唯一的标识&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;在世界里，「相对的唯一标识」是普遍存在，例如：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;每个人出生的时候，就获得了一个「相对的唯一标识」——姓名。&lt;/li&gt;
&lt;li&gt;城市的道路，都基本上采用了唯一的命名（当然这也需要一个 &lt;a class="reference external" href="http://www.gov.cn/fwxx/sh/2006-10/26/content_424199.htm"&gt;过程&lt;/a&gt; ）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;显然，对于每个标识，都需要有一个命名空间（namespace），来保证其相对唯一性。&lt;/p&gt;
&lt;p&gt;可以说，在人的意识里，对于的实体的描述是基于名字进行的，人们并不希望同名的出现太多，这会在沟通过程中的产生理解困难。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id47"&gt;实体在不同命名空间的标识&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;对于人来说，在家庭里会有小名，在社会中会有正式名字，在社交过程中还会产生绰号。&lt;/p&gt;
&lt;p&gt;在中国，对于企业来说，除了企业有名称之外，还有组织机构代码证、有税务登记证、有工商营业执照，并分别对应三个编号。（当然，目前三证合一也在进行中）。&lt;/p&gt;
&lt;p&gt;回到计算机领域，围绕主机在网络上的地址，在不同的命名空间中，都会存在一个「相对的唯一标识」用来描述一个实体&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;每个以太网网卡，都有一个48-bit 的MAC地址&lt;/li&gt;
&lt;li&gt;每个MAC地址，可能有一个或者多个IP地址&lt;/li&gt;
&lt;li&gt;每个网卡，都可能有一个或者多个IP地址&lt;/li&gt;
&lt;li&gt;每个IP地址，都可能有多个域名&lt;/li&gt;
&lt;li&gt;当然，每个主机，都会有一个主机名&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接续上面的例子，事实上，MAC地址是由 &lt;a class="reference external" href="https://regauth.standards.ieee.org/standards-ra-web/pub/view.html#registries"&gt;IEEE Standards Association Registration Authority&lt;/a&gt; 完成地址段的分配。&lt;/p&gt;
&lt;p&gt;对于目前的 &lt;a class="reference external" href="https://www.iana.org/domains/root/db"&gt;1530&lt;/a&gt; 个顶级根域（gTLD），以及 IPv4 / IPv6 地址，都由IANA对其进行管理。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id48"&gt;小结&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;标识是从一个典型的场景，对客观事物进行统一编码的过程。&lt;/li&gt;
&lt;li&gt;采用 &lt;strong&gt;半集中与半自主相结合&lt;/strong&gt; 的方法，是一种实现「分而治之」十分普遍和有效的设计模式。&lt;/li&gt;
&lt;li&gt;标识的唯一性是根据命名空间紧密相关的。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id49"&gt;标识的使用&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id9"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id50"&gt;在不同命名空间中实现标识的转换&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;在中国，对于人名，通常是由公安局出入境管理局完成中文至英文的翻译，同时，他们会把翻译结果写到数据库中，印到护照上。
这中间的翻译规则，通常是根据中文与汉语拼音、汉语拼音与英文字母的两次转换关系完成的。&lt;/p&gt;
&lt;p&gt;对于计算机网络，则会有 NAT完成IP地址间的转换，RAP/RARP完成IP地址与MAC地址的双向转换，DNS完成域名至IP地址的转换。&lt;/p&gt;
&lt;p&gt;可是，为什么需要那么多不同命名空间的标识标识一个实体？可能最直观的回答通常是这样：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;域名为了方便人的记忆与使用&lt;/li&gt;
&lt;li&gt;IP地址是为了更广范围的计算机互联&lt;/li&gt;
&lt;li&gt;MAC则是为了在物理上保证唯一&lt;/li&gt;
&lt;li&gt;OSI开放系统互联7层模型决定的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;人们会在不同的领域（也是命名空间）中定义自己的命名规范，这可以认为是领域主权的体现，同时伴生的会是一套与相关领域标识的转换协议。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id10"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id51"&gt;结构化与别名效应&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;结构化是把数据的元信息以位置的方式固化是数据中。也就是说，代表某个意义的信息，一定会出现在一个约定好的位置上。&lt;/p&gt;
&lt;p&gt;由于标识是被人经常使用的，那么在使用过程中会对大脑形成一定的训练。&lt;/p&gt;
&lt;p&gt;人在看到了010-XXXXXXXX，021-XXXXXXXX号码之后，自然而言会产生条件反射，认为两者分别代表了北京和上海；同样的人在看到了139和186之后，分别产生了中国移动以及中国联通的运营商联想。&lt;/p&gt;
&lt;p&gt;对于使用者，这种场景，数字类似是一个名称别名。对于程序员，这十分接近「数据字典」的设计模式。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id11"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id52"&gt;标识转换过程的两面性&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;别名和正名，同样是来自于两个不同命名空间的标识，之间自然而然的会进行转换。&lt;/p&gt;
&lt;p&gt;当然，人们也不会忘记去Hack这些转换协议的设计。&lt;/p&gt;
&lt;p&gt;一些是有益的，是实现了更为便利的应用场景。例如：将不同的域名指向相同的IP地址（使用A或者CNAME记录），并结合相关软硬件实现「虚拟主机」，达到资源复用的目的。&lt;/p&gt;
&lt;p&gt;一些却是有害的，例如，诈骗电话也经常采用改号的方法，让接听者误以为那是来自某个官方的外呼电话。&lt;/p&gt;
&lt;p&gt;同样的，在计算机领域，一样有DNS劫持、DNS污染。&lt;/p&gt;
&lt;p&gt;有矛就有盾，进行安全性扩展的 &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Domain_Name_System_Security_Extensions"&gt;DNSSEC&lt;/a&gt; 就是为了对DNS结果，验证不存在性和校验数据完整性验证，不过依然没有实现全面部署。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id12"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id53"&gt;小结&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;不同命名空间的标识，在互通时需要进行转换&lt;/li&gt;
&lt;li&gt;转换的过程，可能是一个简单的规则，也可能是一个独立第三方服务&lt;/li&gt;
&lt;li&gt;标识需要有数据标准的规范指导，以及辅助的易用性工具支撑&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id13"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id54"&gt;标识的生成&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;标识的生成方法有很多，有集中式的，分布式的；有后端的，前端的，当然还有人工的。
并没有一种通用的生成方法来适应各种应用场景。&lt;/p&gt;
&lt;div class="section" id="id14"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id55"&gt;人工生成&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;人工生成的确是一种方式，比如电子邮箱，微信ID，各种论坛的账号。&lt;/p&gt;
&lt;p&gt;在人想出标识的那一刻，是无法判断是否是唯一的，对这种生成方式的结果，显然在录入时都需要进行唯一性校验。&lt;/p&gt;
&lt;p&gt;所以，下面描述的几种生成方式，是在生成的那一刻就在一个命名空间内唯一，而不再需要进行唯一性校验。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id15"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id56"&gt;基于数据库生成&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://dev.mysql.com/doc/refman/5.6/en/example-auto-increment.html"&gt;MySQL(5.6) AUTO_INCREMENT&lt;/a&gt; 特性&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/postgres/postgres/blob/REL9_6_STABLE/src/backend/commands/sequence.c"&gt;Postgres(REL 9.6 Stable) SEQUENCE&lt;/a&gt; 特性&lt;/li&gt;
&lt;li&gt;Oracle 数据库的 &lt;a class="reference external" href="https://docs.oracle.com/cd/B28359_01/server.111/b28286/statements_6015.htm"&gt;SEQUENCE&lt;/a&gt; 特性，有知道这一特性如何实现的，可以在 &lt;a class="reference external" href="https://www.zhihu.com/question/50970990"&gt;知乎&lt;/a&gt; 做一下解答。&lt;/li&gt;
&lt;li&gt;Flickr &lt;a class="reference external" href="http://code.flickr.net/2010/02/08/ticket-servers-distributed-unique-primary-keys-on-the-cheap/"&gt;Ticket Servers&lt;/a&gt; ，同时支持Sharding (文章发表于2010年2月8日，算法上线于2006年1月13日)。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般地，这种类型的生成方案，都可以设置其实初始值，以及增量步长。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id17"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id57"&gt;基于协调器生成&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;在不使用数据库的情况下，通过一个后台服务对外提供高可用的、固定步长标识生成，则需要分布式的集群协调器进行。&lt;/p&gt;
&lt;p&gt;一般的，主流协调器有两类：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;以Paxos为代表的：ZooKeeper&lt;/li&gt;
&lt;li&gt;以Raft为代表的：Consul / Etcd&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ZooKeeper的强一致性，是由Paxos协议保证的；Consul的一致性，官方用subtle(微妙的)来形容。它既采用了Gossip管理集群Membership，也采用了Raft管理Service Catalog。Consul的写一致性通过Raft保证，但Consul的读一致性有三种模式，default / consistent / stale， 其中consistent是强一致的。&lt;/p&gt;
&lt;p&gt;在步长累计型生成算法中，最核心的就是保持一个累计值在整个集群中的「强一致性」。同时，这也会为唯一性标识的生成带来新的形成瓶颈。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id18"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id58"&gt;基于服务内置生成&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;似乎对于分布式的ID生成，以Twitter Snowflake为代表的， &lt;strong&gt;Flake&lt;/strong&gt; 系列算法，经常可以被搜索引擎找到，但似乎MongoDB的ObjectId算法，更早地采用了这种思路。MongoDB 1.0 是在2009年8月27日 &lt;a class="reference external" href="http://blog.mongodb.org/post/173107215/10-ga-released"&gt;发布&lt;/a&gt; 的，并且0.9.10(2009年8月24日发布)和1.0两个版本没有差异。&lt;/p&gt;
&lt;p&gt;在StackOverflow上，&lt;a class="reference external" href="http://stackoverflow.com/questions/2138687/whats-mongodb-hashs-size/2146071"&gt;最早的一个关于ObjectId的问题&lt;/a&gt; ，时间是2010年1月27日。不知道Twitter的同学，是不是受此启发呢？&lt;/p&gt;
&lt;div class="section" id="mongodb-objectid"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id59"&gt;MongoDB ObjectId&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;12-byte MongoDB &lt;a class="reference external" href="https://docs.mongodb.com/manual/reference/method/ObjectId/"&gt;ObjectId&lt;/a&gt; 的结构是：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a 4-byte value representing the seconds since the Unix epoch,&lt;/li&gt;
&lt;li&gt;a 3-byte machine identifier,&lt;/li&gt;
&lt;li&gt;a 2-byte process id, and&lt;/li&gt;
&lt;li&gt;a 3-byte counter, starting with a random value.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以看出，这个方案所支持的最小划分粒度是「秒 * 进程实例」，单进程实例的每秒容量是 3-byte (24-bit)，也就是接近16777216个ID。&lt;/p&gt;
&lt;p&gt;有兴趣的，还可以进一步 &lt;a class="reference external" href="https://github.com/mongodb/mongo-java-driver/blob/3.3.x/bson/src/main/org/bson/types/ObjectId.java"&gt;看代码（MonogoDB 3.3.x Java Driver）&lt;/a&gt; 研究：Timestamp, Machine Identifier、Process Identifier、计数器的初始值分别是如何获得的:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Timestamp&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="literal-block"&gt;
private static int dateToTimestampSeconds(final Date time) {
      return (int) (time.getTime() / 1000);
}
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Machine Identifier&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="literal-block"&gt;
StringBuilder sb = new StringBuilder();
Enumeration&amp;lt;NetworkInterface&amp;gt; e = NetworkInterface.getNetworkInterfaces();
while (e.hasMoreElements()) {
    NetworkInterface ni = e.nextElement();
    sb.append(ni.toString());
    byte[] mac = ni.getHardwareAddress();
    if (mac != null) {
        ByteBuffer bb = ByteBuffer.wrap(mac);
        try {
            sb.append(bb.getChar());
            sb.append(bb.getChar());
            sb.append(bb.getChar());
        } catch (BufferUnderflowException shortHardwareAddressException) { //NOPMD
            // mac with less than 6 bytes. continue
        }
    }
}
machinePiece = sb.toString().hashCode();
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Process ID&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="literal-block"&gt;
try {
    String processName = java.lang.management.ManagementFactory.getRuntimeMXBean().getName();
    if (processName.contains("@")) {
        processId = (short) Integer.parseInt(processName.substring(0, processName.indexOf('@')));
    } else {
        processId = (short) java.lang.management.ManagementFactory.getRuntimeMXBean().getName().hashCode();
    }

} catch (Throwable t) {
    processId = (short) new SecureRandom().nextInt();
    LOGGER.log(Level.WARNING, "Failed to get process identifier from JMX, using random number instead", t);
}
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;COUNTER&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="literal-block"&gt;
private static final AtomicInteger NEXT_COUNTER = new AtomicInteger(new SecureRandom().nextInt());
&lt;/pre&gt;
&lt;p&gt;此处需要注意的是MongoDB的 &lt;tt class="docutils literal"&gt;NEXT_COUNTER&lt;/tt&gt; 其初始值是一个随机数，这是有利于分库分表的。因为在小并发的条件下，非随机数的初始值，容易产生 &lt;strong&gt;偏库偏表&lt;/strong&gt;， 不均匀的现象。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="twitter-snowflake"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id60"&gt;Twitter Snowflake&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Twitter在2010年6月1日（在Flickr那篇文章发布不到4个月之后），Ryan King 在Twitter的Blog &lt;a class="reference external" href="https://blog.twitter.com/2010/announcing-snowflake"&gt;撰文&lt;/a&gt; 写道：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Ticket Servers方案缺乏顺序的保证&lt;/li&gt;
&lt;li&gt;考虑过采用UUID，不过128-bit太长了&lt;/li&gt;
&lt;li&gt;也考虑过采用ZooKeeper的 &lt;a class="reference external" href="https://zookeeper.apache.org/doc/r3.2.1/zookeeperProgrammers.html#Sequence+Nodes+--+Unique+Naming"&gt;Seq 所提供的 *Unique Naming* uence Nodes&lt;/a&gt; 所提供的 &lt;em&gt;Unique Naming&lt;/em&gt; 特性，但是性能不能满足。(个人认为，Sequence Nodes的设计目标是解决分布式锁的问题，但不解决性能要求极高的ID生成问题，直接应用是一种Hack行为)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在这种情况下，Twitter给出了 64-bit 长的 &lt;a class="reference external" href="https://github.com/twitter/snowflake/releases/tag/snowflake-2010"&gt;Snowflake&lt;/a&gt; ，它的结构是：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;1-bit reserved&lt;/li&gt;
&lt;li&gt;41-bit timestamp&lt;/li&gt;
&lt;li&gt;10-bit machine id&lt;/li&gt;
&lt;li&gt;12-bit sequence&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在过了不到4年，2014年的5月31日，Twitter 更新了 Snowflake 的 README，其中陈述了两个容易被忽视的事实:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;"We have retired the initial release of Snowflake ..."&lt;/li&gt;
&lt;li&gt;"... heavily relies on existing infrastructure at Twitter to run. "&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以看出，这个方案所支持的最小划分粒度是「毫秒 * 线程」，单线程（Snowflake 里对应的概念是 Worker）的每秒容量是12-bit，也就是接近4096。&lt;/p&gt;
&lt;p&gt;翻一下Snowflake的 &lt;a class="reference external" href="https://github.com/twitter/snowflake/releases/tag/snowflake-2010"&gt;归档代码 (Scala)&lt;/a&gt;，可以看到：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;关于初始化Sequence的处理&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="literal-block"&gt;
if (lastTimestamp == timestamp) {
  sequence = (sequence + 1) &amp;amp; sequenceMask
  if (sequence == 0) {
    timestamp = tilNextMillis(lastTimestamp)
  }
} else {
  sequence = 0
}
&lt;/pre&gt;
&lt;p&gt;可以看到此处Snowflake对于 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;sequence``的赋值为&lt;/span&gt; ``0&lt;/tt&gt;。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;关于每秒超过4096个ID生成请求的处理&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="literal-block"&gt;
protected def tilNextMillis(lastTimestamp: Long): Long = {
  var timestamp = timeGen()
  while (timestamp &amp;lt;= lastTimestamp) {
    timestamp = timeGen()
  }
  timestamp
}

protected def timeGen(): Long = System.currentTimeMillis()
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="noeqd"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id61"&gt;noeqd&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;2011年11月23日，用Go语言实现的，基于Snowflake的 &lt;a class="reference external" href="https://github.com/bmizerany/noeqd"&gt;neoqd&lt;/a&gt; 出现了。&lt;/p&gt;
&lt;p&gt;它的特点是，除了使用Go语言进行了实现，更是把ID生成做成了一个网络服务。支持客户端向ID生成服务申请ID。它还支持：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;简单预共享Token的客户端身份证认证（只是加强了那么一点点的安全性，可以忽略）&lt;/li&gt;
&lt;li&gt;支持批量获取ID，最多256个（因为使用一个byte表示申请个数）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同时，作者还建议使用 &lt;a class="reference external" href="https://github.com/ha/doozerd"&gt;Doozerd&lt;/a&gt; 一个用Go语言写的 -- a highly-available, completely consistent store for small amounts of extremely important data. 进行Machine ID的分配。&lt;/p&gt;
&lt;p&gt;(关于 ZooKeeper / Etcd / Consul / Doozerd 的比较，也是可以期待下)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="boundary-flake"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id62"&gt;Boundary Flake&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;2012年1月， &lt;a class="reference external" href="https://github.com/boundary/flake"&gt;Boundary Flake&lt;/a&gt; 同样的，用Erlang语言把Snowflake，变成了一个网络服务，提供128-bit长的ID生成服务。&lt;/p&gt;
&lt;p&gt;不过，根据其RoadMap的描述，这个项目并没100%完成。例如，批量的ID生成，HTTP 接口，客户端Library都列在里面待实现。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="cruftflake"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id63"&gt;CruftFlake&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;2012年7月， &lt;a class="reference external" href="https://github.com/davegardnerisme/cruftflake"&gt;CruftFlake&lt;/a&gt; 更显然的，是想以一个PHP变种身份出现。&lt;/p&gt;
&lt;p&gt;它在结构上与Snowflake基本一致，存在两个区别：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;在timestamp上的取值略有区别&lt;/li&gt;
&lt;li&gt;可以自行决定是否采用ZooKeeper作为协调器&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="lableorg-java-uniqueid"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id64"&gt;LableOrg/java-uniqueid&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;2014年7月18日，LableOrg 写了一个通过ZooKeeper进行协调的，128-bit长的算法 &lt;a class="reference external" href="https://github.com/LableOrg/java-uniqueid"&gt;java-uniqueid&lt;/a&gt;。其 &lt;a class="reference external" href="https://github.com/LableOrg/java-uniqueid/blob/master/doc/eight-byte-id-structure.md"&gt;结构组成&lt;/a&gt; 依然十分相似：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Timestamp&lt;/li&gt;
&lt;li&gt;Sequence counter&lt;/li&gt;
&lt;li&gt;Generator IDs&lt;/li&gt;
&lt;li&gt;Cluster IDs&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id25"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id65"&gt;前台浏览器生成&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这里的前台，主要是指以「浏览器」为代表的客户端。&lt;/p&gt;
&lt;p&gt;2015年2月16日，&lt;a class="reference external" href="http://ignitersworld.com/"&gt;Sudhanshu Yadav&lt;/a&gt; (看面相像印度人)，用Javascript写了Flake的又一个变种实现 &lt;a class="reference external" href="https://github.com/s-yadav/FlakeId"&gt;FlakeId&lt;/a&gt; 。其核心代码是：&lt;/p&gt;
&lt;pre class="literal-block"&gt;
if (this.lastTime == time) {
    this.seq++;

    if (this.seq &amp;gt; 4095) {
        this.seq = 0;

        //make system wait till time is been shifted by one milisecond
        while (Date.now() &amp;lt;= time) {};
    }
} else {
    this.seq = 0;
}
&lt;/pre&gt;
&lt;p&gt;它的Machine Identifier则是作为构造函数的选项参数 &lt;tt class="docutils literal"&gt;options.mid&lt;/tt&gt; 传入。&lt;/p&gt;
&lt;pre class="literal-block"&gt;
function FlakeId(options) {
  options = options || {};
  this.seq = 0;
  this.mid = (options.mid || 1) % 1023;
  this.timeOffset = options.timeOffset || 0;
  this.lastTime = 0;
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id26"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id66"&gt;全自主随机生成&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;可以说，成熟的、全自主生成方案，可能只有 128-bit &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Universally_unique_identifier"&gt;UUID&lt;/a&gt; 一种，具体的说，是UUID Version 4。另外，微软对它实现，称之为 &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Globally_unique_identifier"&gt;GUID&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;一般的，使用的最多的是UUID Version 4，很大程度上是因为其依赖的其他服务最少。&lt;/p&gt;
&lt;p&gt;这里，通过python (2.5+) 对UUID的实现，体验一下UUID的生成效果：&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ python
Python 2.7.12 (default, Jun 29 2016, 14:05:02)
[GCC 4.2.1 Compatible Apple LLVM 7.3.0 (clang-703.0.31)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
&amp;gt;&amp;gt;&amp;gt; import uuid
&amp;gt;&amp;gt;&amp;gt; uuid.uuid1()
UUID('d17c4397-830d-11e6-b62d-985aeb899615')
&amp;gt;&amp;gt;&amp;gt; uuid.uuid3(uuid.NAMESPACE_DNS, 'yanjiong.wang')
UUID('363053e8-e02d-3b9d-b18b-83da99d5a684')
&amp;gt;&amp;gt;&amp;gt; uuid.uuid4()
UUID('59cfe861-a6b1-45ff-9522-2e780adf491a')
&amp;gt;&amp;gt;&amp;gt; uuid.uuid5(uuid.NAMESPACE_DNS, 'yanjiong.wang')
UUID('25d4e194-0404-5c64-8695-c547f98ccde1')
&lt;/pre&gt;
&lt;p&gt;另外，我们看一下网卡的MAC地址&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ ifconfig
lo0: flags=8049&amp;lt;UP,LOOPBACK,RUNNING,MULTICAST&amp;gt; mtu 16384
      options=1203&amp;lt;RXCSUM,TXCSUM,TXSTATUS,SW_TIMESTAMP&amp;gt;
      inet 127.0.0.1 netmask 0xff000000
      inet6 ::1 prefixlen 128
      inet6 fe80::1%lo0 prefixlen 64 scopeid 0x1
      nd6 options=201&amp;lt;PERFORMNUD,DAD&amp;gt;
gif0: flags=8010&amp;lt;POINTOPOINT,MULTICAST&amp;gt; mtu 1280
stf0: flags=0&amp;lt;&amp;gt; mtu 1280
en1: flags=8863&amp;lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST&amp;gt; mtu 1500
      ether 98:5a:eb:89:96:15
      inet6 fe80::8d7:fea6:2ec2:ea55%en1 prefixlen 64 secured scopeid 0x4
      inet 10.0.3.22 netmask 0xffffff00 broadcast 10.0.3.255
      nd6 options=201&amp;lt;PERFORMNUD,DAD&amp;gt;
      media: autoselect
      status: active
&lt;/pre&gt;
&lt;p&gt;(因为UUID Version 1会泄露网卡的MAC地址，所以我对MAC地址做了下小手术)&lt;/p&gt;
&lt;p&gt;可以看到UUID Version 1 最后一组数值 &lt;tt class="docutils literal"&gt;985aeb899615&lt;/tt&gt; 与网卡的 MAC地址是一样一样的 &lt;tt class="docutils literal"&gt;98:5a:eb:89:96:15&lt;/tt&gt;。&lt;/p&gt;
&lt;p&gt;个人一直认为，采用UUID Version 4是一种偷懒的，缺乏必要设计的做法。&lt;/p&gt;
&lt;p&gt;一方面，它是依据概率确保无碰撞的，计算的过程与概率上的「生日问题」是一样的，不再展开。&lt;/p&gt;
&lt;p&gt;另一方面，从使用的角度，UUID还有以下缺点：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;太长，即便是转换成36个字符，不利于输入&lt;/li&gt;
&lt;li&gt;过于随机，没有规律，在开发调试、线上故障定位，都容易看花眼。&lt;/li&gt;
&lt;li&gt;如果作为数据库主键，对索引不利。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id27"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id67"&gt;小结&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;人工生成的标识，在相同的命名空间里，需要后续唯一性验证才能保证唯一&lt;/li&gt;
&lt;li&gt;由计算机生成，在低并发的场景下，适合通过一个服务集中生成，并保障此服务的高可用性&lt;/li&gt;
&lt;li&gt;由计算机生成，在高并发的场景下，适合通过一个保障命名空间独立的命名规范下，由多个服务并行生成。&lt;/li&gt;
&lt;li&gt;采用步长和增长相结合的生成算法，本质上都是对某个状态进行累积的结果。&lt;/li&gt;
&lt;li&gt;对于取模进行分库分表的场景，初始化值随机有利于均匀分布。&lt;/li&gt;
&lt;li&gt;（MongoDB 的 ObjectId 更是Flake系列算法的鼻祖，并在初始值上进行了随机化处理）&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id28"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id68"&gt;设计一个「合适」的标识&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id29"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id69"&gt;区分实体和关系&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;实体是点，而关系是线。&lt;/p&gt;
&lt;p&gt;一般而言，面向实体的标识生成速度，要小于面向关系的生成速度。&lt;/p&gt;
&lt;p&gt;具体的例子，以电商为例：买家、卖家、商品这些实体的录入速度，要远比订单生成小的多。也因此，主数据要比交易数据稳定的多。&lt;/p&gt;
&lt;p&gt;并且，关系还可能包含层次关系，进而体现为一个依赖树。&lt;/p&gt;
&lt;div class="section" id="id30"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id70"&gt;面向实体的标识&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;面向实体的标识，更多的与概念相关（名称）、与形态相关（型号），有很多的人为因素参与，随机因素有限，命名的主体也来自于人。&lt;/p&gt;
&lt;p&gt;对于实体制造，为任意一个产品进行标识，大致会分为六个方面：品牌、品类、品名，型号、批号、产品序列号。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;对于前四者，更多的是人为的进行命名。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如，给定中文，找到对应英文，再进行缩写。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;对于批号，则会增加一些时间因素，以关联到产品的生产时间。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如，采用20160925表示具体某一天，或者采用201640表示具体某一周。（一般来说，同一个批号的产品，所使用的原材料是也是同一批。）&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;对于产品序列号，最简单的是采用自然数法进行编号。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这一类的标识，在分布式系统下，在系统并发量小，集群规模小的情况下，可以采用基于数据库或者协调器的生成方案。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id31"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id71"&gt;面向关系的标识&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;自然的，关系源于两个或两个以上的实体之间所进行的某一个活动，并且具有一定的时效性。&lt;/p&gt;
&lt;p&gt;常见的关系的表现形式有：交易流水号，会话标识等等。&lt;/p&gt;
&lt;p&gt;这一类的标识，在分布式系统下，在系统并发量大，应当采用基于服务的内置生成方案。唯一依赖的是在实例部署时、启动前，为期分配唯一的Machine Identifier。这个Machine Identifier可以交由以强一致性保证的协调器完成。&lt;/p&gt;
&lt;p&gt;当然，在系统并发量小的情况下，任然可以采用基于数据库的生成方案，因为没有协调器集群的参与，系统整体的复杂度更低，更利于维护。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id32"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id72"&gt;标识的容量&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;任何采用文字所表达的标识，最终在计算机里，都会根据一定的格式，被转换为字节byte进行处理，这个过程称之为「序列化」。
这种序列化方式，本质上是一种编码方式。&lt;/p&gt;
&lt;div class="section" id="id33"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id73"&gt;变长编码&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;一般来说，采用变长的编码方式，主要的目的是为了应对不可预期大小的信息量。&lt;/p&gt;
&lt;p&gt;常见的有 &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Type-length-value"&gt;TLV(Type-Length-Value)&lt;/a&gt; 方式。
Google的 &lt;a class="reference external" href="https://developers.google.com/protocol-buffers/docs/overview"&gt;Protocol Buffers&lt;/a&gt; 非常有意思地采用了 &lt;a class="reference external" href="https://developers.google.com/protocol-buffers/docs/encoding#varints"&gt;Base 128 Varints&lt;/a&gt; 的编码方式。&lt;/p&gt;
&lt;p&gt;本质上，一个 &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Uniform_Resource_Identifier"&gt;URI&lt;/a&gt; 也是对一个标识，它可以标识一个功能，也可以标识一个虚拟实体。&lt;/p&gt;
&lt;p&gt;RESTful是对此类命名方式的一种实践方式，也是对 URI和HTTP协议组合之后，「表征力」的一个深入挖掘。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id34"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id74"&gt;定长编码&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;在回顾一下前文所提到的IPv4地址，它似乎、可能、或许会在2019年 &lt;a class="reference external" href="https://zh.wikipedia.org/wiki/IPv4%E4%BD%8D%E5%9D%80%E6%9E%AF%E7%AB%AD"&gt;完全枯竭&lt;/a&gt;，
因为它只有32-bit。相比之下，MAC地址有48-bit，IPv6有128-bit。即便是它们都没那么容易枯竭，但也不代表由于人为因素，导致无法有效使用。&lt;/p&gt;
&lt;p&gt;再回想下，每个人的身份证、手机号码，都是采用定长的形式进行编码。&lt;/p&gt;
&lt;p&gt;选择定长有利于预先分配计算机资源，不管是内存、文件系统，还是数据库。同时，对于人的心理来说，可预期性大大增强了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id36"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id75"&gt;标识的命名空间&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;命名空间有三个层面：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;异构切分：对于不同的场景和视角，以树形进行层次划分。&lt;/li&gt;
&lt;li&gt;同构切分：对于异构切分的结果，切分出不同的分片。&lt;/li&gt;
&lt;li&gt;时间切分：对于同一个分片，在不同时间点上的状态。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般地：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;首先，采用并行无状态的生成算法，一般都采用时间作为首要的命名空间，并且此命名空间的实效性小于生成者的重启时间&lt;/li&gt;
&lt;li&gt;其次，采用生成器实例自身的标识作为次要命名空间，以保证各个生成器的时间即便是不同步也不会产生重复标识&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同时，需要注意的是，这可能导致唯一标识产生，大段跳跃，原因有：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;单位时间的并发量远小于子命名空间的容量&lt;/li&gt;
&lt;li&gt;生成器重启&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id37"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id76"&gt;标识的冗余&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;不管标识是在运行时的内存出现，还是记录到数据库中或者文件里，它都需要占用硬件资源。&lt;/p&gt;
&lt;p&gt;还是拿身份证举例，一方面，一个18个字符长度的身份证，那么需要18个字节进行存储。18个字节意味着144-bit，比IPv6的128bit还长。&lt;/p&gt;
&lt;p&gt;如果简单的标识全世界每个人，以目前全地球60亿人口的总量，那么33个bit就足够了。&lt;/p&gt;
&lt;p&gt;采用这种冗余设计的原因，一方面是「半集中，半自主」和现实的行政、地域结构对齐，另一方面是实现关联信息的集成。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id38"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id77"&gt;小结&lt;/a&gt;&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;标识编码后的长度，则决定了一个标识方案的整体容量。&lt;/li&gt;
&lt;li&gt;在一个统一的命名空间内，有多个标识生成者并行生成时，需要划分独立的子命名空间，以保证生成的标识在整个命名空间内唯一。&lt;/li&gt;
&lt;li&gt;单个命名空间的标识，承载的信息量有限，在标识的使用过程中，需要扩展与包含一些其他视角的信息以进行冗余。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id39"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id78"&gt;标识的文本兼容&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;和人工取名字不一样，自动生成ID的主体，是计算机本身，但使用这个ID的主体，有两个：人和计算机。&lt;/p&gt;
&lt;p&gt;对于计算机，最擅长处理的是结构化数组、条形码或者二维码；而对人，最擅长使用的是文本、图形或者视频。&lt;/p&gt;
&lt;p&gt;一般而言，在大量的RESTful设计的应用，其URI中会包含大量的ID，用来标识用户、商品、订单等等，它们经常会出现在URI中。&lt;/p&gt;
&lt;p&gt;以ASCII编码为基础的各种文本化编码算法，从Base16开始，正常的有Base32，Base64，Base58，Base85等等，不太正常的，在本文最后的扩展阅读里有列举。&lt;/p&gt;
&lt;p&gt;其中，Base16是最为「字节友好」的，因为不需要进行任何Padding操作，就可以以把 4-bit/half-byte 转换为 [0-9a-f] 这十六个字符，因此Base16还有别名：Hex。另外对于键盘输入，这16个英文字母，又是相对纯数字之外，最方便的。&lt;/p&gt;
&lt;p&gt;而Base32, Base64等等，都需要Padding。因为Base32是每 5-bit 进行分组编码，Base64则是 6-bit ，都无法直接对齐一个 byte(8-bit)。&lt;/p&gt;
&lt;p&gt;另外，Base16还对 URI 友好，不需要进行任何的 URLEncode/Decode操作。&lt;/p&gt;
&lt;p&gt;以64-bit长的ID为例，它既可以转化为 &lt;tt class="docutils literal"&gt;long&lt;/tt&gt;，也可以Base16成为16个字符的``HexString``，同时它大小写不敏感。&lt;/p&gt;
&lt;p&gt;相比之下，如果采用Base64的文本化方案，其长度虽然少了5个字符，为11个，但其大小写敏感，不利于人机交互的输入，还会包含URI不友好，还会被转义为「 &lt;tt class="docutils literal"&gt;%3D&lt;/tt&gt;」的符号「&lt;tt class="docutils literal"&gt;=&lt;/tt&gt;」。&lt;/p&gt;
&lt;p&gt;一个精巧的标识文本化算法，并不应该简单的把一个二进制值转为HexString。在日志里，应该有相应的解码算法，解析出符合人类阅读的字符，比如：精确到秒、且带格式时间，生成改标识的主体，等等。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id40"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id79"&gt;标识的安全性&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id41"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id80"&gt;标识的信息泄露&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;采用连续，或者固定步长的标识，容易从一个标识猜测其他标识的存在性。&lt;/p&gt;
&lt;p&gt;常见的例子有：
* 通过局域网扫描工具，扫描某个子网的活动的IP地址
* 通过端口扫描工具，扫描一个目标主机开放的端口，以初步确定主机操作系统类型&lt;/p&gt;
&lt;p&gt;另外，在物联网领域，如果采用的EPC编码，那么很容易通过连续编码，估计某个产品的具体产量。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id42"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id81"&gt;标识的自校验能力&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;还是使用身份证号这个例子，根据国家标准（GB11643-1999），身份证号的前17位为本体码，最后1位为校验码。也就是说，它是通过前17位进行数学公式计算之后获得，主要目的是用于检验录入过程是否产生差错。&lt;/p&gt;
&lt;p&gt;这样设计的好处是，每当输入完18位身份证号后，可以直接判断一个身份证号，是否在逻辑上是「合规的」，对于系统而言不用查询数据库，可以减少IO操作。不过，这不代表这个身份证号是有效的，也有可能是一个无效，但符合校验规则的身份证号。&lt;/p&gt;
&lt;p&gt;由于标识的长度有限，能够加入的冗余信息较少，一般的基于公钥密码体制的签名机制，都难以在一个短标识中嵌入。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id43"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id82"&gt;扩展阅读&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://yellerapp.com/posts/2015-02-09-flake-ids.html"&gt;Distributed System Building Block: Flake Ids&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.academia.edu/download/33102775/Roughly_Sorting-Sequential_And_Parallel_Approach.pdf"&gt;Roughly sorting: Sequential and parallel approach&lt;/a&gt; , 1989&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/ferno/base1"&gt;Base1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/ferno/hexagram-encode"&gt;HexagramEncode (六十四卦编码)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/ferno/braille-encode"&gt;BrailleEncode (盲文编码)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id44"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id83"&gt;更新历史&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;2016-11-02 13:34, 更新基于协调器生成的内容&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="ideas"></category><category term="架构"></category><category term="唯一性标识"></category><category term="分布式系统"></category></entry><entry><title>架构是一种解决问题的能力</title><link href="/articles/arch-is-to-solve-the-problem" rel="alternate"></link><published>2016-08-16T13:05:00+08:00</published><updated>2016-08-16T13:05:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2016-08-16:/articles/arch-is-to-solve-the-problem</id><summary type="html">&lt;p class="first last"&gt;2016年8月22日 发表于 InfoQ · 聊聊架构 「撇开代码不说，谈谈我对架构的6个冷思考」&lt;/p&gt;
</summary><content type="html">
&lt;!-- --&gt;
&lt;p&gt;计算机是个复杂的机器，相比普通的机器（比如小家电、汽车），它可以在使用过程中对其「工作行为」进行「再定义和场景适配」，以解决不同场景下的人的需求和问题，这种「定义的结果」，对于机器的最终用户来说，是「应用 / Application」。&lt;/p&gt;
&lt;p&gt;对于非计算机相关的普通人而言，即便是有诸多对于职位头衔的描述：「程序员」、「软件工程师」、「架构师」、「首席技术官」，也离不开一个潜意识的印象：「做网站的」或者是「修电脑的」。&lt;/p&gt;
&lt;p&gt;很多「架构师」，都是从「软件工程师」开始，不知不觉的变成了一个「架构师」。对于我个人而言，当我还是一个实习生，被「升」为一个部门架构师带领一些正式员工干活的时候，对「架构师」这个概念居然是一片空白，甚至于不知道这是个「好消息」，还是个「坏消息」，当然也不知道「架构师」是干嘛的。&lt;/p&gt;
&lt;p&gt;所以，我一直以 &lt;em&gt;最简单的方式&lt;/em&gt; 对架构进行定义：** 架构是一种用计算机解决问题的综合能力，与头衔无关**&lt;/p&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id9"&gt;架构源于对实践的总结&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;架构能力并不是与生俱来的，而是和具体经历强相关的，丰富的经验是形成架构能力的基础。&lt;/p&gt;
&lt;p&gt;很多时候我们强调「系统性思考」对于架构设计的重要性，希望从方法论上能够对正在从事或者即将从事架构工作的程序员在专业能力上进行提升。教条式、填鸭式的培训，是教不出架构能力的。理论的价值是能够帮助应用理论的人少走一部分的弯路，但不能够解决眼前的现实问题。&lt;/p&gt;
&lt;p&gt;在企业里，架构是一个实践结合非常紧密的领域，一切以解决实际问题为目标。由于问题是多种多样的，导致解决的方法也是多种多样的。踩过的雷，填过的坑，都需要进行总结和抽象，才能提升到架构层的高度，防止重蹈覆辙。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id10"&gt;架构是一个建模的过程&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;对于一个复杂问题，通常会对复杂问题按照能力领域进行分解，其目的是能够找到与现有能力相匹配的映射。这个映射，就是解决方案。它，不开人的「知识型劳动」，主要分解为三个方面：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;对于已知问题的抽象和建模&lt;/li&gt;
&lt;li&gt;对于已知能力的抽象和建模&lt;/li&gt;
&lt;li&gt;对于解决方案和工具的设计&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中前两个方面，都提到了「建模」。建模本身是对客观事物的一种抽象，客观事物越复杂，那建模的结果变成「盲人摸象」的概率就越高。&lt;/p&gt;
&lt;p&gt;然而，「盲人摸象」在IT领域其实不能算是个「贬义词」，因为这个现象十分的常见。究其原因，解决实际问题信息系统，更多程度是面向于「典型」应用场景，而不是「任意」应用场景的。&lt;/p&gt;
&lt;p&gt;场景即是对客观事物的认知视角，信息系统做不到、也不需要对一个完整的客观事物进行全面（360°无死角）建模。&lt;/p&gt;
&lt;p&gt;举个具体的例子：对于人这个客观事物，银行系统里，可能会关心这个人财务指标，例如「收入」、「支出」和「存款余额」，但在医院的重症监护病房里，可能就会关心这个人的生命指标，例如「血压」、「心跳」。&lt;/p&gt;
&lt;p&gt;从例子里可以看出，一个面向具体问题的场景化应用系统，都是对一个客体进行「片面的」场景化建模。&lt;/p&gt;
&lt;p&gt;说到底，建模是一种抽象能力，具体的说，是人对客观事物认知结果的理性提炼和总结，不可否认感性的部分太难以刻画和描述。很符合「庄子·天道」中所述：「意之所随者，不可以言传也」。&lt;/p&gt;
&lt;p&gt;如果要拿数学语言进行描述「建模的能力」，就是找到一组尽可能少的「特征向量」去表述这个空间，而找这组「特征向量」的能力，就是建模的能力。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id11"&gt;架构工作的核心是设计&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;没有软件的计算机，是「无法使用」的，因为没有办法帮助我们解决任何问题。计算机原本很「生硬」，无法很「柔软」的去直接适配所需要解决的问题。&lt;/p&gt;
&lt;p&gt;架构的核心工作是「设计」，设计计算机如何按照预期进行工作。&lt;/p&gt;
&lt;p&gt;架构设计中，建模的结果，是模型，它有着结构化、棱角分明的特质，因为这是计算机进行计算的最高效的方式：严格的告诉我们——两个数是相等还是不相等，及其衍生。正由于严格匹配，所以在很长的一段时间里，解决方案的制定和后续系统的交付运行，都围绕着如何严格按照实际场景进行模拟和落地。 很少以「按概率成功」对系统的业务功能进行设计和实现，一切都必须「绝对正确」。因为绝大部分的计算机系统，无法理解自然语意。只能根据人为设计的结构化信息，「按部就班」地完成重复性劳动。&lt;/p&gt;
&lt;p&gt;人工智能、机器学习，在解决自动化建模领域的成熟度还是远远达不到人的能力，如果达到了，那么软件就不需要人进行「架构设计」了。简单的从架构设计的结果（当然也是结构化的），生成代码，这方面目前的计算机还是有能力胜任的。&lt;/p&gt;
&lt;p&gt;任何不符合实际场景的计算结果，用户都认为是「缺陷 」，而在系统中产生此类异常结果，往往需要「程序员」为此承担相应的责任。呐，回想一下，在没计算机的时代，反而往往都是店小二算错了帐自己赔，没有人会去责怪算盘。这是为什么，因为算盘足够简单，简单到不需要做任何的监控系统、不需要记录任何的日志，连「三下五除二」这样的操作规则，都已经被社会化学习消除了使用成本。最终，一切出错的原因只有一个：用键盘的人。&lt;/p&gt;
&lt;p&gt;是的，计算机系统生来就是是不可靠的，它不可能像「算盘」一样在运行期不依赖任何的自然资源。断电了，会引发故障；光纤断了，会引发故障；磁盘满了，会引发故障。。。一系列的不确定因素，导致「分布式系统」架构设计比「主机系统」的架构设计复杂的多，原本不需要操心的事情，都需要从更上层的软件层加以解决了。&lt;/p&gt;
&lt;p&gt;所以，当前架构工作的很大一块，都随着分布式系统规模的增大而加大了比重。也许，导致世界上最聪明的一伙人都去解决计算机的问题了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id12"&gt;架构需要作出一系列非技术选择&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;架构既然是个解决方案，自然有很多可以自由选择的领域，有很多的受限的前提条件。这些外围因素，往往还系统背后的个人、团队、企业的价值观、以及非IT能力有关，这是一个很容易被忽视的点。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;与人和团队的关系&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;架构往往是与个人或者团队的能力有关的，因为架构前一部分是设计工作，后一部分是代码框架的落地工作。可以没有一个十全十美、满足各方需求的方案，架构过程中有很多都是妥协的结果，有的是向需求妥协，有的是向运维妥协，有的是向个人英雄主义妥协。另外，绝大部分的选择都是人作出的，这导致了和人、团队的水平形成了很大的耦合关系。&lt;/p&gt;
&lt;p&gt;早在1895年，法国心理学家 &lt;em&gt;勒庞&lt;/em&gt; 在他的心理学名著「 &lt;em&gt;乌合之众（The Crowd）&lt;/em&gt; 」就早已经说过：&lt;em&gt;一群精英所作出的群体决定，很有可能是最愚蠢的决定&lt;/em&gt; 。有时候，技术团队不能太强调民主；有时候，技术团队中的强强产生的效果是「1 + 1 &amp;lt; 1」。一个良好的、强弱结合的组织结构，才有可能孵化出优秀的工具，再进阶为一个优秀的产品，也有利于成员梯队的培养。&lt;/p&gt;
&lt;p&gt;团队越大，一个优秀的架构设计方案被严格执行下去的可能性越小。第一，制定方案的人和落地方案的人大多数情况下都有脱节，很多设计精巧的方案细节到了执行者的手里，会被忽视。第二，为了统一一个团队的认识结构、设计理念，这部分的培训成本往往都是各个雇主不愿意付出的。第三，方案的描述本省是「不精确」的，还很容易存在文档过期的情况，在软件及交付的各个环节，任何参与者都有机会以自己的知识背景作为出发点进行理解，并自豪地加上自己的「杰作」。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;与企业的价值观相关&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;企业的价值观，最直接的体现，就是企业的投资组合。&lt;/p&gt;
&lt;p&gt;在大型的企业里，软件产品的采购往往会受制于「采购部」，也会受制于不懂IT的公司级领导所下达的行政干预，有些理由好像听上去也「很有道理」：采购过为什么还要采购，要「保护投资」。往往到了这个层面，程序员、架构师都纷纷表达了无奈。&lt;/p&gt;
&lt;p&gt;软件，包含代码和数据。它不是一个简单的能够按照「固定资产折旧」进行的固定资产。它透射的是使用者对客观世界的认识，也需要随着对客观世界认知的变化而变化，因此版本对于软件来说就是一个时刻认知的快照沉淀。&lt;/p&gt;
&lt;p&gt;行业的快速发展，企业的快速发展，势必推动企业信息系统的快速发展。对于企业而言，其价值是能够找到感知行业、感知产品、感知用户、感知企业内部运营的触角，每个社会中的实体不管是个人，还是产品都能够在系统中找到它的影子。&lt;/p&gt;
&lt;p&gt;对企业主而言，IT是一个长期的投资行为。陈旧的、不符合时代背景的软件，是会变成降低企业生产力的绊脚石。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id13"&gt;代码是架构设计的落地实现&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;现今任何的计算机高级编程语言，例如Java/C/C++，或者更高层的DSL，都是人与计算机之间的「单向语言」。这些「单向语言」，并非自然语言，大多数由程序员编写，再交由计算机进行执行，在很长的一段时间内，信息系统都是以这种方式与人进行交互。 （当然，也可以慢慢的等待「Siri」之类的助手长大成人，成为一名架构师，也许那个时候，广大架构师需要转行了。）&lt;/p&gt;
&lt;p&gt;代码是架构实现的核心，通过代码可以完成对现实世界的「虚拟化」：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;概念的虚拟化&lt;/li&gt;
&lt;li&gt;能力的虚拟化&lt;/li&gt;
&lt;li&gt;实体的虚拟化&lt;/li&gt;
&lt;li&gt;记忆的虚拟化&lt;/li&gt;
&lt;li&gt;协作的虚拟化&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过一些例子，有助于理解：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;概念的虚拟化：一个业务概念的类定义&lt;/li&gt;
&lt;li&gt;能力的虚拟化：一个方法对多个输入数据进行加工并返回结果&lt;/li&gt;
&lt;li&gt;实体的虚拟化：一个类的实例，即具体的数据&lt;/li&gt;
&lt;li&gt;记忆的虚拟化：一条关系型数据库的行记录&lt;/li&gt;
&lt;li&gt;协作的虚拟化：远程方法调用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是的，代码是计算机的指挥者，代码是把人类智慧「赋能」给计算机的一种语言。&lt;/p&gt;
&lt;p&gt;代码到不到位，写的好不好，对设计的落地实现会产生很大的影响。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id14"&gt;其实，架构是一种用计算机解决问题的综合能力&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;很多时候我们看到的「系统架构图」，其实是针对目标问题所设计的「计算机领域的解决方案」，是一种设计图纸。&lt;/p&gt;
&lt;p&gt;可以说，「架构工作」不仅要能够交付「设计图纸」，还要能够「建地基、搭房梁」。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;宏观层面：对特定问题，进行解决方案的设计&lt;/li&gt;
&lt;li&gt;微观层面：对后续的编码工作，形成与解决方案核心相一致的代码框架&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;做好「架构工作」有很多非技术的「软实力」，比如：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;对于团队中成员职能的正确定位，知道他们真正擅长什么&lt;/li&gt;
&lt;li&gt;深挖至本质的问题分析&lt;/li&gt;
&lt;li&gt;多视角、符合人性的换位思考&lt;/li&gt;
&lt;li&gt;舍弃一些力所能及，但影响专注的「杂事」，合理的说「不」&lt;/li&gt;
&lt;li&gt;具备一定的投资意识，从更高、更长远的视角，看待投入与产出&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id15"&gt;发散性思考&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;在互联网公司出现之前，有没有「互联网公司」呢？他们和现如今的互联网公司的差别是什么？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其实是有的，例如「电网」、「电信运营商」、「股份制商业银行」、「快递物流公司」。在人类社会中最基本的两个元素，就是「实体」和「连接」，一切和连接有关的行业，都可以认为是「互联」，只不过信息系统在企业中的价值是由「生产关系」决定了其价值。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;机器学习能够帮助架构设计吗？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;机器学习很长一段时间之内都停留在参数调优上，而不具备对于一般事物进行建模的能力。前文也阐述过「概念的虚拟化」和「实体虚拟化」之间的关系，实体虚拟化就是数据，而数据本身已经是类的实例了，&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;互联网公司大谈「大数据」以及「数据驱动DT」的原因是什么？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前面提到，数据是对客观实体的虚拟化，客观实体并不是无中生有的，他们是自然世界的产物，数据驱动的本质是客观事物驱动，退一步讲，本质仍然是「业务驱动」。当然，打通多个场景化的数据，对客体进行360°的建模，是「大数据」真正价值所在。&lt;/p&gt;
&lt;p&gt;需要注意的是，剑总是双刃的，当在计算机系统这个虚拟世界里，找到了360°、包含衣食住行的你，生活是便利了，因为可以预测你的需求，不过你的隐私还存在多少？&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;对开源软件实施「拿来主义」是否可行？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;很多开源软件，直接的「拿来主义」，会导致「后患无穷」。很大程度上，开源代码是一个个人、一个团队整体能力的映射，并且和运行这些代码所需要的环境息息相关。开源代码也是挑人、挑环境的，在一个团队没有想匹配的能力进行正确的使用之前，很多时候都是一匹「天生野马」，在驯服之后才会变成自己的「血汗宝马」，驯服的过程其实就是和自己团队以及周边环境相适配、磨合的过程。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;重复造轮子真的是浪费吗？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个健康的IT团队，应当建立起一套评估「现有轮子」是否产生实际效益的体系，比如能够监控代码在生产环境的实际使用率、故障率，适时的下线一些「低效益」的代码。不要简单的否定和阻止「重新造轮子」，这是与企业内部人的能力对齐、外部大环境对齐的过程，更是企业不断新陈代谢的「投资型基因」。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;结构化的数据到底意味着什么？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所谓结构化，其实是面向数据的下游处理者，可以与其内置的概念（数据模型）进行映射和处理。结构是一种「元信息」。&lt;/p&gt;
&lt;p&gt;举个具体的例子，一张bitmap图片，它本身是有结构的。bitmap的图片是标明了每个像素点上的RGB颜色值具体是多少，这个数据结构，对于图片浏览器来说，是可以识别和解析成为一张人眼能够识别的图片的，而浏览器本身只负责每个像素点上的颜色还原。倘若这张图片里是一张「用户」写实头像，那么图片浏览器并不能够分析出这张头像具体是哪个自然人，也无法将这张图片作为一个API的入参，联合其他该用户的入参，进行内部业务逻辑的处理。&lt;/p&gt;
&lt;/div&gt;
</content><category term="ideas"></category><category term="架构"></category></entry><entry><title>API不适合做微服务数据同步</title><link href="/articles/api-is-not-suitable-for-microservice-data-sync" rel="alternate"></link><published>2016-06-22T11:57:00+08:00</published><updated>2016-06-22T11:57:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2016-06-22:/articles/api-is-not-suitable-for-microservice-data-sync</id><summary type="html">&lt;p class="first last"&gt;API/SPI 的调用，有很大的一部分比例，都是为了做数据同步，很多场景这种用法是错误的。&lt;/p&gt;
</summary><content type="html">&lt;!--  --&gt;
&lt;p&gt;API SPI 的调用，有很大的一部分比例，都是为了做数据同步。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;API / Application Programming Interface（应用程序接口）&lt;/li&gt;
&lt;li&gt;SPI / Service Provider Interface (服务提供者接口)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;软件要解决的是两部分的事情：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;信息的共享&lt;/li&gt;
&lt;li&gt;信息的加工&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;信息的加工时会对信息产生「增值的效果」，最终导致信息在形态上发生「形变」。&lt;/p&gt;
&lt;p&gt;API和SPI的设计，如果没有进行任何加工（就是进行了业务逻辑，导致信息在结构上发生改变，变成另外一类的信息），那么之类的数据本质上是应该进行同步的操作。&lt;/p&gt;
&lt;p&gt;导致不对数据进行直接同步的原因，有这些：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;信息的一侧没有持久化能力&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比如，浏览器侧是不提供持久化的能力的，那么就需要另外一方（有持久化能力的）提供API（一般也就是服务端），方便浏览器实时获取信息。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;避免出现多份数据的一致性问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个数据实体，映射的是一个物理上的实体，物理实体的复制是困难的，但相比之下，数据实体的映射是简单的，特别特别简单的。这也导致了，数据在经过多个处理环节的时候，每个环节都可以对其进行持久化（这里不考虑安全性的问题）。&lt;/p&gt;
</content><category term="ideas"></category><category term="API"></category><category term="SPI"></category><category term="数据同步"></category><category term="微服务"></category></entry><entry><title>平台运营的关键</title><link href="/articles/key-of-platform-operation" rel="alternate"></link><published>2016-06-21T11:18:00+08:00</published><updated>2016-06-22T15:16:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2016-06-21:/articles/key-of-platform-operation</id><summary type="html">&lt;p class="first last"&gt;平台运营首先需要帮助每个用户弥补短板，鼓励每个平台的参与者向平台贡献内容并得到广泛的认可、体现他们的价值，从而重点激发平台上的每个用户的自身潜力，同时也需要严格监管平台上的不良用户，保障一个健康、有序的生态环境。&lt;/p&gt;
</summary><content type="html">
&lt;!-- --&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id7"&gt;平台要服务于内容&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;「平台」，在感官视觉上是一个「平的台子」，发音也有一部分也来自于英语的「Platform」，不管怎样，时下的平台自身应当包含两个基本能力：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;承载内容&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;平台上承载内容的多样性和时效性，是平台生命力的核心指标。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;关联内容&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;事物是普遍联系的，不同种类的内容之间，会存在潜在的联系。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id8"&gt;以内容为核心的多边关系平台&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;一个健康的平台，应该是三边或者多边的，会包含：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;平台运营方&lt;/li&gt;
&lt;li&gt;内容供给方&lt;/li&gt;
&lt;li&gt;内容需求方&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更多的，还会出现第四方，比如：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;平台监管方&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;正因为平台是服务于内容的、平台是由多边参与的，平台能够体现两个维度的关系：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;横向上，平台体现的是供给和需求的关系&lt;/li&gt;
&lt;li&gt;纵向上，平台体现的是运营和监管的关系&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="multi-sided-platform" class="align-center" src="/images/2016/06-21/multi-sided-platform.png" style="width: 290px; height: 290px;"/&gt;
&lt;p&gt;所以，平台本质上应当是多边市场化的。在横向上，供给与需求的在数量上的平衡，是决定某个内容市场能否持续繁荣的决定性因素。&lt;/p&gt;
&lt;p&gt;市场犹如天平，架起的是某个内容的「供给」和「需求」两端。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id9"&gt;平台运营的核心理念&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;平台运营首先需要帮助每个用户弥补短板，鼓励每个平台的参与者向平台贡献内容并得到广泛的认可、体现他们的价值，从而重点激发平台上的每个用户的自身潜力，同时也需要严格监管平台上的不良用户，保障一个健康、有序的生态环境。&lt;/p&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id10"&gt;弥补短板&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;现如今，任何单个个体的能力是渺小的，向市场上不断提供内容，仅凭一己之力，难以、或者需要耗费大量时间来提供一个完整的内容，慢节奏的内容推陈出新是无法满足这个时代挑剔的眼光，更难以激起波澜，甚至是难以获得注意。&lt;/p&gt;
&lt;p&gt;平台运营方，自身要懂得某个领域内容的特点，帮助小微个体使用平台上的综合能力，使其提供完整的内容。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id11"&gt;内容价值的多视角&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;需求方视角&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;内容需求方，更多的关心市场中的内容与自身状态的匹配程度，合适自身特点的内容，才是主观意识上的「好」。&lt;/p&gt;
&lt;p&gt;对于确切的受体A与受体B，两者各自对于「好」的定义是不一致的。&lt;/p&gt;
&lt;p&gt;平台需要能够为不同的需求方，尽可能的提供相匹配的内容，减少选择难度。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;运营方视角&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;运营方首先要保障的是其平台运营的市场的公平性，消除由于平台自身能力不足导致不良用户破坏平台生态的行为。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;供给方视角&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;供给方所关心的除了下游目标市场之外，还需要关注上游内容原料或者资源市场的动态，这也对平台运营方提出了需求——能否打通多个市场，为供给方提供一个多入单出，或者多入多出的市场风向标。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;监管方视角&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;监管方更多的是从规范、法律层面，对其他三方的行为进行监管，在必要的情况下动用行政手段进行强制干预。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="ideas"></category><category term="平台"></category><category term="生态"></category><category term="内容"></category></entry><entry><title>DevOps对于企业IT的价值</title><link href="/articles/devops-value-towards-enterprise-it" rel="alternate"></link><published>2016-05-19T15:01:00+08:00</published><updated>2016-06-01T09:32:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2016-05-19:/articles/devops-value-towards-enterprise-it</id><summary type="html">&lt;p class="first last"&gt;其实从敏捷延展开的 &lt;em&gt;DevOps&lt;/em&gt; 概念很早就已经被提出，不过由于配套的技术成熟度水平层次不齐， &lt;em&gt;DevOps&lt;/em&gt; 的价值需一直没有有效的发挥出来。现如今随着容器技术的发展， &lt;em&gt;DevOps&lt;/em&gt; 在企业中的实践难度大幅降低，其价值也得以体现。&lt;/p&gt;
</summary><content type="html">
&lt;!-- --&gt;
&lt;div class="section" id="devops"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id5"&gt;DevOps 概念的发展历史&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;现在是2016年5月下旬，&lt;em&gt;DevOps&lt;/em&gt; 作为一个IT圈的热词，几乎已经是无人不知，无人不晓。&lt;/p&gt;
&lt;p&gt;如果你是一个有心人的话，可能会好奇DevOps这个概念到底是在什么情况下诞生的。&lt;/p&gt;
&lt;p&gt;在 &lt;a class="reference internal" href="#wikipedia-devops"&gt;Wikipedia: Devops&lt;/a&gt; 的词条里，可以发现 &lt;em&gt;DevOps&lt;/em&gt; 相关概念已经早在2008年就被提出了。&lt;/p&gt;
&lt;blockquote&gt;
At the Agile 2008 conference, Andrew Clay Shafer and Patrick Debois discussed "Agile Infrastructure". The term "DevOps" was popularized through a series of devopsdays starting in 2009 in Belgium. Since then, there have been devopsdays conferences held in many countries worldwide.&lt;/blockquote&gt;
&lt;p&gt;即便是在2006年Amazon发布了ECS, 微软在2008年和2010年提出和发布了Azure，&lt;em&gt;DevOps&lt;/em&gt; 的重要性似乎没那么强烈。&lt;/p&gt;
&lt;p&gt;可是在8年前的那个时候，为什么 &lt;em&gt;DevOps&lt;/em&gt; 没有迅速走红呢，第一个很重要的原因是因为那时候 &lt;em&gt;云计算&lt;/em&gt; （ &lt;a class="reference internal" href="#wikipeida-cloud-computing"&gt;Wikipeida: Cloud computing&lt;/a&gt; ） 还是小众产品，更多的与虚拟化相关。
第二个很重要的原因是 Docker 还没有横空出世，直到2013年7月。第三个很重要的原因是，Martin Fowler 在2014年3月提出了 &lt;a class="reference internal" href="#microservices"&gt;Microservices&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;可以看出，当前 &lt;em&gt;DevOps&lt;/em&gt; 概念的深入人心，离不开云计算、容器/Docker、微服务、敏捷等相关概念和实施的成熟发展。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="it"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id6"&gt;企业IT对于企业的价值&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;谈到企业IT，就没有办法回避两种迥然不同的企业，一种是以传统制造业或者服务业为基础的，对生产资料进行加工的「传统企业」；
另一种是以「信息互联」为基础的，对「人与人关系、人与物关系、物与物关系」进行信息加工的「互联网企业」。&lt;/p&gt;
&lt;p&gt;这两类，是两类极端的企业，一类企业的日常运行，可以没有信息系统；另一类企业，完全离不开信息系统。&lt;/p&gt;
&lt;p&gt;一般的信息系统，对于企业的价值，主要有三类渐进过度的典型类型。&lt;/p&gt;
&lt;p&gt;第一类，是将信息系统定位于「辅助和支撑」企业的产品制造以及企业运营部门，因为这类企业的生产资料系、生产力、生产关系，都以实体制造为主，不以信息加工和处理作为企业产品核心。&lt;/p&gt;
&lt;p&gt;第二类，是将信息系统作为数据加工、传输作为主体，但业务模式来自于传统行业，信息系统主要完成已有业务规则的虚拟化，例如金融、电信行业。这类企业的信息或者数据，主要来自于业务受理，或者说数据的生产者和使用者是企业自身。&lt;/p&gt;
&lt;p&gt;第三类，是将信息系统作为企业唯一生产工具，并将企业的客户（个人或企业）所自发贡献的信息、数据，作为生产资料，形成新兴的业务模式。这里企业的典型，就是互联网企业。&lt;/p&gt;
&lt;p&gt;随着又一轮「数字化」的概念席卷全球，非互联网企业所面临的更多针对用户和客户的思考和探索，都需要有更快交付能力的信息系统进行支撑，这也是传统企业互联网化，打开企业边界围栏迈出的第一步。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="devops-it"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id7"&gt;DevOps 对于企业IT的价值&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;通过前文的分析，可以看到，企业IT对于三类不一样的企业价值体现各有不同。&lt;/p&gt;
&lt;p&gt;对于互联网企业，信息系统是企业产品的命脉，企业对于软件的价值观以及投资组合，对于其他两类企业要高出很多。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;DevOps&lt;/em&gt; 的核心价值，是能够帮助企业快速交付变更，以便于快速响应企业对于市场的变化、用户的需求。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;代码&lt;/li&gt;
&lt;li&gt;构建&lt;/li&gt;
&lt;li&gt;测试&lt;/li&gt;
&lt;li&gt;打包&lt;/li&gt;
&lt;li&gt;发布&lt;/li&gt;
&lt;li&gt;配置&lt;/li&gt;
&lt;li&gt;监控&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上7个过程，是 &lt;em&gt;DevOps&lt;/em&gt; 站在软件生命周期平台化运营的视角，为企业IT所建立的一个「IT for IT / &lt;a class="reference internal" href="#it4it"&gt;IT4IT&lt;/a&gt; 」的业务平台。&lt;/p&gt;
&lt;p&gt;如果说，软件开发、交付、运维是一个传统行业，那么 &lt;em&gt;DevOps&lt;/em&gt; 就是映射了这个传统行业的一个软件平台。&lt;/p&gt;
&lt;p&gt;通过 &lt;em&gt;DevOps&lt;/em&gt; 可以助理企业软件交付的效率提升，帮助企业IT实现数字化运营。&lt;/p&gt;
&lt;p&gt;可以用一句话定位以下三者在价值链上的关系&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;「信息」（数据）&lt;/li&gt;
&lt;li&gt;「信息系统」（处理数据的工具）&lt;/li&gt;
&lt;li&gt;「DevOps」（制造与维护处理数据的工具的工具）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在「信息」（数据）成为企业「生产资料」一部分的条件下，信息系统快速演进的业务驱动力、DevOps的价值，才能够清晰的得到体现。&lt;/p&gt;
&lt;p&gt;企业IT系统的从「业务支撑型」走向「业务驱动型」的转折点，是由企业产品的最终用户，直接以低成本为企业提供生产资料——信息（数据）——并使之成为企业产品的一部分
。&lt;/p&gt;
&lt;p&gt;如果信息是企业产品的全部，那么这种类型的企业就是第三类——互联网企业。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id8"&gt;DevOps 在企业中的实践&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;和众多源于互联网的理念一样，在 &lt;em&gt;DevOps&lt;/em&gt; 的概念被炒热之前，众多互联网公司其实已经实践了 &lt;em&gt;DevOps&lt;/em&gt; 。
其中的原因也正是因为信息系统，是这些公司的生产工具，没有人比互联网公司的人更明白提高自身的办公效率，提高团队、企业的生产力，就是为提高企业产品的生产力进行有效的保障。&lt;/p&gt;
&lt;p&gt;除了前文提的 &lt;em&gt;DevOps&lt;/em&gt; 覆盖企业软件生命周期中的7个过程， &lt;em&gt;DevOps&lt;/em&gt; 在企业落地过程中，传统企业或多或少都已经建设了一部分配套系统，尤其是AAAA与监控系统，其他的代码管理、持续集成工具也或多或少的有所积累。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;DevOps&lt;/em&gt; 更多的是把IT服务产品化的平台，企业中的任何一个IT能力，都应当能够在 &lt;em&gt;DevOps&lt;/em&gt; 中面向其用户提供自服务的的能力。
例如，系统的开发者，能够自主的在 &lt;em&gt;DevOps&lt;/em&gt; 上联机分析生产环境的日志，而不必经过层层壁垒，一台台登录生产环境的主机，检索日志。
再例如，项目组的快速变更、员工的快速入、离职，都应当能够在 &lt;em&gt;DevOps&lt;/em&gt; 中实现自动化的账号开通和注销。&lt;/p&gt;
&lt;p&gt;需要注意的是，相比传统企业尤其是制造业的产品制造工艺和制造流程，软件产品的制造，IT服务的交付，更多的是交付一些无形的软件产品和知识工作。
正因为这些无形产品受制于不同的人认知所产生的多变，其管理复杂度远比制造业来的复杂，企业软件的设计、开发、发布、上线，缺乏标准化的管理过程。&lt;/p&gt;
&lt;p&gt;对于如今的非互联网企业而言，能够快速见效的 &lt;em&gt;DevOps&lt;/em&gt; 时间，应当从（环境）配置的管理，以及自动化部署。
在实施难度上，配置的管理要低于自动化部署。因为非互联网企业的技术路线由于供应商的竞争（甚至是恶意竞争），变得极其多样，架构离散化程度也很高。&lt;/p&gt;
&lt;p&gt;对比互联网企业，（环境）配置管理和自动化部署，由于IT技术从硬件到虚拟化/容器的自主可控，企业整体技术架构的收敛性就比较理想。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id9"&gt;当前 DevOps 对于企业架构支撑的不足&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;从 &lt;em&gt;代码&lt;/em&gt; 到 &lt;em&gt;监控&lt;/em&gt; , 可以看出 &lt;em&gt;DevOps&lt;/em&gt; 对于企业尚有以下不足（或者说 &lt;em&gt;DevOps&lt;/em&gt; 本来就不考虑这些）:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;缺少对企业IT战略规划、企业IT业务架构规划、企业IT系统架构设计、企业IT系统需求管理以及IT项目管理进行有效的平台化、数字化支撑。&lt;/li&gt;
&lt;li&gt;缺少对企业IT部门、信息系统运营效能的系统性评估和优化模型&lt;/li&gt;
&lt;li&gt;缺少对企业不同IT系统供应商的技术架构、IT产品的标准化、基线化管理。&lt;/li&gt;
&lt;li&gt;缺少对企业数据类应用的支撑，更偏于交易型应用的交付。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对于第 1,2 两点 任何企业都有这方面的需求，但由于企业在投资组合上对这个领域投资较少，投资规模较大、实施难度较大，企业主更愿意进行面向企业产品「开源」投资。&lt;/p&gt;
&lt;p&gt;对于第 3 点，几乎不会在秉承「自主建设」互联网公司存在，但在其他企业中也逐步会通过精益运营的方式进行落地实施。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id10"&gt;参考资料&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;span class="target" id="wikipedia-devops"&gt;Wikipedia: Devops&lt;/span&gt;: &lt;a class="reference external" href="https://en.wikipedia.org/wiki/DevOps"&gt;https://en.wikipedia.org/wiki/DevOps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="target" id="wikipeida-cloud-computing"&gt;Wikipeida: Cloud Computing&lt;/span&gt;: &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Cloud_computing"&gt;https://en.wikipedia.org/wiki/Cloud_computing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="target" id="microservices"&gt;Microservices&lt;/span&gt;: &lt;a class="reference external" href="http://martinfowler.com/articles/microservices.html"&gt;http://martinfowler.com/articles/microservices.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="target" id="it4it"&gt;IT4IT&lt;/span&gt;: &lt;a class="reference external" href="http://www.opengroup.org/IT4IT"&gt;http://www.opengroup.org/IT4IT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id11"&gt;修订历史&lt;/a&gt;&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;2016-06-01 09:51 补充价值链上的关系&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content><category term="ideas"></category><category term="DevOps"></category><category term="微服务"></category><category term="软件价值观"></category><category term="企业架构"></category><category term="云计算"></category></entry><entry><title>数字化的本质和基础</title><link href="/articles/digitization-essence-and-foundation" rel="alternate"></link><published>2016-04-29T11:01:00+08:00</published><updated>2016-04-29T11:01:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2016-04-29:/articles/digitization-essence-and-foundation</id><summary type="html">&lt;p class="first last"&gt;数字化是近期全球的热点，数字化与很多其他概念例如：「信息化」、「自动化」似曾相识。在追逐数字化这个概念之前，需要深入分析数字化的本质，以便找到数字化的正确应用路径。&lt;/p&gt;
</summary><content type="html">
&lt;!-- --&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id18"&gt;数字化的概念&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;「企业数字化」是目前媒体、市场上的热点关键词。&lt;/p&gt;
&lt;p&gt;很多人都会困惑「数字化」、「信息化」、「自动化」、「标准化」这些概念的相互关系，好像时间又进行了一次轮回。&lt;/p&gt;
&lt;p&gt;「数字化」给人直观的感受是与「智能设备」、「物联网」、「移动互联」、「云计算」、「大数据」等等等等，这些强IT概念联系紧密。&lt;/p&gt;
&lt;p&gt;企业似乎只要把它们捏在一起，好像就实现了时髦的数字化转型，公司就可以和互联网、物联网联系在一起。&lt;/p&gt;
&lt;p&gt;在这里，也许没有办法给出直接的「数字化定义」，个人对于数字化的观点，是把「数字化」理解成一种现象，一种市场语言。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id19"&gt;数字化的本质&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;透过现实看本质，「数字化」战略的表象，其背后实质性的动作是「连接」。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;连接产生交换&lt;/li&gt;
&lt;li&gt;交换产生交易&lt;/li&gt;
&lt;li&gt;交易产生市场&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id20"&gt;比较实体与虚拟连接&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;早在大秦帝国，秦始皇做的最了不起的事情是「书同文、车同轨、统一度量衡」。&lt;/p&gt;
&lt;p&gt;这几件事情，是在整个国家之内统一了标准，降低了社会的沟通成本、协作成本，促进了社会的发展效率。&lt;/p&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id21"&gt;实体世界的连接&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;现实世界的实体连接，已经通过长时间的工业化得到了沉淀，比如把插头插到插座就可以使用电能。&lt;/p&gt;
&lt;p&gt;工业标准定义了插头与插座的形状、交流电压的高低和频率。
即便是世界上没有完全统一，依然存在中国标准、美国标准、英国标准等等标准，市场上也提供了各种各样的转换适配器。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id22"&gt;软件世界的连接&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;为了便于理解，对 &lt;strong&gt;交流电&lt;/strong&gt; 这个概念进行展开。如果用 &lt;tt class="docutils literal"&gt;java&lt;/tt&gt; 来描述一个 &lt;strong&gt;交流电&lt;/strong&gt; 的最基本属性，
比如电的 &lt;strong&gt;伏特&lt;/strong&gt; ，以及 &lt;strong&gt;频率&lt;/strong&gt; ，那么两个不同的程序员，会产生两种不同的描述。&lt;/p&gt;
&lt;div class="section" id="id7"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id23"&gt;概念的代码实现&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;比如下面这两个代码对 &lt;strong&gt;交流电&lt;/strong&gt; 实现：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;我的实现&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;wang.yanjiong.electronic&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;wang.yanjiong.electronic.Volt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;wang.yanjiong.electronic.Frequency&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;AlternatingCurrent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="n"&gt;Volt&lt;/span&gt; &lt;span class="nf"&gt;getVolt&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="n"&gt;Frequency&lt;/span&gt; &lt;span class="nf"&gt;getFrequency&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="p"&gt;....&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;其他人的实现&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;other.people.electronic&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;AC&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;getVolt&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;getFrequency&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="p"&gt;....&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到两者都通过代码描述了 &lt;strong&gt;交流电&lt;/strong&gt; 这个概念，但在IT这个虚拟世界内，是截然不同的两个概念代码实现。&lt;/p&gt;
&lt;p&gt;在第一种 &lt;tt class="docutils literal"&gt;wang.yanjiong.electronic&lt;/tt&gt; 这种实现方法，是对电压 ( &lt;tt class="docutils literal"&gt;Volt&lt;/tt&gt; ) 和 电流 ( &lt;tt class="docutils literal"&gt;Frequency&lt;/tt&gt; ) 进行了更为复杂的定义。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id24"&gt;连接的代码实现&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;任何一个连接，都会有两方或者三方以上的出现。在两方的情况下，一般有：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;提供方&lt;/li&gt;
&lt;li&gt;使用方&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在三方的情况下，一般有：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;提供方&lt;/li&gt;
&lt;li&gt;使用方&lt;/li&gt;
&lt;li&gt;监管方&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为例了便于表述，以两方为例：&lt;/p&gt;
&lt;p&gt;提供方用 &lt;tt class="docutils literal"&gt;java&lt;/tt&gt; 代码声明了一个接口 (API, Applicaion Programming Interface)， 便于使用方获得全世界的各种 &lt;strong&gt;交流电&lt;/strong&gt; 信息：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;wang.yanjiong.connect&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;wang.yanjiong.electronic.AlternatingCurrent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;ProviderAPI&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="n"&gt;AlternatingCurrent&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="nf"&gt;getAlternatingCurrents&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="p"&gt;....&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用方同样用 &lt;tt class="docutils literal"&gt;java&lt;/tt&gt; 完成了使用代码的编写：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;other.people.electronic&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ConsumerService&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="n"&gt;AC&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;acs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ProviderAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getAlternatingCurrents&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="p"&gt;....&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;很显然，使用方的代码，在编译的过程中就会出现错误，因为使用方没有 &lt;tt class="docutils literal"&gt;引用&lt;/tt&gt; 提供方关于 &lt;tt class="docutils literal"&gt;ProviderAPI&lt;/tt&gt; 的相关定义。&lt;/p&gt;
&lt;p&gt;通过对这个例子的分析，提供方和使用方不在同一个虚拟世界里，两者无法进行「连接」。&lt;/p&gt;
&lt;p&gt;进一步的，假设提供方与使用方分属于两个不同的企业，部署于两个完全物理隔离的机房，那这两者要进行一次有效的「连接」是完全不可能实现的。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id25"&gt;数字化的基础&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id10"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id26"&gt;分领域统一标准&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id11"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id27"&gt;标准制定&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;通过上述两个例子的对比，在软件层面实现数字化，第一要务是实现统一「标准」。在前文的例子里，对于 &lt;strong&gt;电流&lt;/strong&gt; 的描述，就应该首先被统一。&lt;/p&gt;
&lt;p&gt;「标准」根据个人的实践和理解，包含两个要素：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;概念&lt;/p&gt;
&lt;p&gt;对于一个现象，给定一个便于理解的名称。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;关系&lt;/p&gt;
&lt;p&gt;不同概念之间的关联关系。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;需要注意的是，概念来自于人的认知，而人的认知又受制于人的知识、人的经历。&lt;/p&gt;
&lt;p&gt;标准的建立，应该是根据的目标适用领域以及对外影响范围进行。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id12"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id28"&gt;领域划分&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;越是抽象的概念、越是抽象的标准，包容的万物越多，难度也越大。&lt;/p&gt;
&lt;p&gt;某种意义下，领域的划分，也是因为一种抽象无法覆盖多个领域。现实的例子，就是社会的行业划分。&lt;/p&gt;
&lt;p&gt;对于企业而言，标准的统一是一件相当困难的事，因为短期内效益没有体现，并且使用标准规范企业内部和外部的行为，需要有执行力的保障。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id13"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id29"&gt;重要性评价&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;标准的重要性和影响面，可以通过对标准的引用次数来确定。这种模型类似于 &lt;a class="reference internal" href="#page-rank"&gt;Page Rank&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;标准的引用包含两个方面：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;领域内部&lt;/li&gt;
&lt;li&gt;领域外部&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id14"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id30"&gt;适应变化的机制&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;变化，来自于人的认知，来自于社会的进步，来自于科技进步对人类产生的影响，来自于对本质的深入理解，来自于方方面面。&lt;/p&gt;
&lt;p&gt;企业信息系统，是一个高精度匹配的机器，任何一行关键代码的变更，都可能会导致整个系统无法正常工作。&lt;/p&gt;
&lt;p&gt;一旦标准中的概念或者关系发生变化，需要有快速发现影响范围，并迅速制定有效的应对方案。&lt;/p&gt;
&lt;p&gt;企业建立一套适应变化的机制，应当包含以下要素：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;概念的文字性描述&lt;/li&gt;
&lt;li&gt;概念的多语言代码的生成和快速引用&lt;/li&gt;
&lt;li&gt;概念代码对应在不同视角、不同领域之间的转换和适配&lt;/li&gt;
&lt;li&gt;变化的影响面分析&lt;/li&gt;
&lt;li&gt;适应性变更的快速交付&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="mofmtl"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id31"&gt;MOF与MTL&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id15"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id32"&gt;概念模型&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;模型是表述一个领域内部概念之间关系的方法。&lt;/p&gt;
&lt;p&gt;概念模型是在一个系统交付过程中，设计的核心之一。&lt;/p&gt;
&lt;p&gt;根据 &lt;a class="reference internal" href="#mof"&gt;MOF&lt;/a&gt; (Meta-Object Facility) 的概念以及 &lt;tt class="docutils literal"&gt;ISO/IEC 19508:2014&lt;/tt&gt; 的 &lt;tt class="docutils literal"&gt;Object Management Group Meta Object Facility (MOF) Core&lt;/tt&gt; 国际标准，一个「概念」在信息系统落地的过程，可以包含层结构：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;实例 -- 一个概念（在计算机系统中）的具体实例化对象&lt;/li&gt;
&lt;li&gt;模型 -- 描述一个概念的结构的定义，类似于上文的 &lt;tt class="docutils literal"&gt;AlternatingCurrent&lt;/tt&gt; 这个 &lt;tt class="docutils literal"&gt;Java class&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;元模型 -- 描述模型的模型，例如 &lt;a class="reference internal" href="#uml"&gt;UML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;元元模型 -- 描述模型的模型的模型，例如 &lt;a class="reference internal" href="#mof"&gt;MOF&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id16"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id33"&gt;模型转换&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;正因为概念是标准的一部分、模型是描述概念的方法，所以模型的转换会同时发生在宏观和微观两个层面：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;在宏观层面：当一个模型从一个领域走进另外一个领域&lt;/li&gt;
&lt;li&gt;在微观层面：当一个模型从领域中的一个视角转换为另外一个视角&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;描述模型转换这件事，有专门的语言: MTL ( &lt;a class="reference internal" href="#model-transformation-language"&gt;Model transformation language&lt;/a&gt; )。
&lt;a class="reference internal" href="#atlas-transformation-language"&gt;ATLAS Transformation Language&lt;/a&gt; 是 MTL 的一个实现。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id17"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id34"&gt;扩展阅读&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;span class="target" id="page-rank"&gt;Page Rank&lt;/span&gt;: &lt;a class="reference external" href="https://en.wikipedia.org/wiki/PageRank"&gt;https://en.wikipedia.org/wiki/PageRank&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="target" id="mof"&gt;MOF&lt;/span&gt;: &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Meta-Object_Facility"&gt;https://en.wikipedia.org/wiki/Meta-Object_Facility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="target" id="mof-2-5"&gt;MOF 2.5&lt;/span&gt;: &lt;a class="reference external" href="http://www.omg.org/spec/MOF/2.5/"&gt;http://www.omg.org/spec/MOF/2.5/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="target" id="iso-iec-19508-2014"&gt;ISO/IEC 19508:2014&lt;/span&gt;: &lt;a class="reference external" href="http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=61844"&gt;http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=61844&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="target" id="uml"&gt;UML&lt;/span&gt;: &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Unified_Modeling_Language"&gt;https://en.wikipedia.org/wiki/Unified_Modeling_Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="target" id="model-transformation-language"&gt;Model transformation language&lt;/span&gt; : &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Model_transformation_language"&gt;https://en.wikipedia.org/wiki/Model_transformation_language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="target" id="atlas-transformation-language"&gt;ATLAS Transformation Language&lt;/span&gt;: &lt;a class="reference external" href="https://en.wikipedia.org/wiki/ATLAS_Transformation_Language"&gt;https://en.wikipedia.org/wiki/ATLAS_Transformation_Language&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="ideas"></category><category term="数字化"></category><category term="标准"></category><category term="概念"></category><category term="MOF"></category><category term="MTL"></category></entry><entry><title>唯一性标识的生成策略</title><link href="/articles/UniqueIDGenerateStrategy" rel="alternate"></link><published>2016-04-19T16:18:00+08:00</published><updated>2016-04-19T16:18:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2016-04-19:/articles/UniqueIDGenerateStrategy</id><summary type="html">&lt;p class="first last"&gt;面向操作型（交易型）和面向概念型（主数据型）的两类唯一性标识生成策略。&lt;/p&gt;
</summary><content type="html">
&lt;!-- --&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id4"&gt;「主数据」类型的生成策略&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;主数据是一类和客观对象产生较为紧密映射关系的数据。例如:「客户」，「产品」等等。&lt;/p&gt;
&lt;p&gt;这一类的数据会随着时间不但进行完善和修正，整体的数据生命周期较长。&lt;/p&gt;
&lt;p&gt;使用ID来表述这一类数据的主要侧重点有:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;隐私保护 - 权重5&lt;/li&gt;
&lt;li&gt;整体可用容量 - 权重5&lt;/li&gt;
&lt;li&gt;单位时间可用量 - 权重2&lt;/li&gt;
&lt;li&gt;首次生成简便性 - 权重2&lt;/li&gt;
&lt;li&gt;后期录入简便性 - 权重4&lt;/li&gt;
&lt;li&gt;后期迁移简便性 - 权重4&lt;/li&gt;
&lt;li&gt;人工阅读可预判性 - 权重5&lt;/li&gt;
&lt;li&gt;分库分表可路由性 - 权重5&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中，人工阅读可预判性包含&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;包含分类特征&lt;/li&gt;
&lt;li&gt;使用定长编码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如, 身份证号「310109190001011235」,18个数字字母字符（18字节=144bit）, 最后一位为校验位
前6位为地域分类，7至14位为生日。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id5"&gt;「交易数据」类型的生成策略&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;交易数据是一类和某个活动或者行为对象相关的数据。例如「订单」，「消息」。&lt;/p&gt;
&lt;p&gt;这一类的数据会随着时间不但进行完善和修正，整体的数据生命周期较长。&lt;/p&gt;
&lt;p&gt;使用ID来表述这一类数据的主要侧重点有:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;隐私保护 - 权重4&lt;/li&gt;
&lt;li&gt;整体可用容量 - 权重5&lt;/li&gt;
&lt;li&gt;单位时间可用量 - 权重5&lt;/li&gt;
&lt;li&gt;首次生成简便性 - 权重4&lt;/li&gt;
&lt;li&gt;后期录入简便性 - 权重3&lt;/li&gt;
&lt;li&gt;后期迁移简便性 - 权重2&lt;/li&gt;
&lt;li&gt;人工阅读可预判性 - 权重2&lt;/li&gt;
&lt;li&gt;分库分表可路由性 - 权重5&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中，人工阅读可预判性包含&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;包含时间特征&lt;/li&gt;
&lt;li&gt;包含源与目标特征&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如, 淘宝订单号「1799508888858080」,16个数字（16字节=128bit）, 后四位数字为分库分表策略,
前12位与时间相关。&lt;/p&gt;
&lt;/div&gt;
</content><category term="ideas"></category><category term="唯一性标识"></category><category term="主数据"></category><category term="交易数据"></category></entry><entry><title>IETF HTTP 规范概览</title><link href="/articles/HTTPSpecsOverview" rel="alternate"></link><published>2016-04-18T12:29:00+08:00</published><updated>2016-04-18T12:29:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2016-04-18:/articles/HTTPSpecsOverview</id><summary type="html">&lt;p class="first last"&gt;IETF 从1996年至今，关于HTTP协议的定义超过17个，涵盖HTTP 1.0/1.1/2 。基于HTTP的RESTFul风格，是对HTTP协议的一次功能挖掘。&lt;/p&gt;
</summary><content type="html">
&lt;!-- --&gt;
&lt;p&gt;基于HTTP的RESTFul风格，是对HTTP协议的一次功能挖掘。&lt;/p&gt;
&lt;div class="section" id="infomation"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id2"&gt;Infomation类&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Infomation&lt;/em&gt;
(include all kinds of information about the Internet including historical data, tutorials, etc.
A standards group or individual outside the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Internet_Engineering_Steering_Group"&gt;IESG&lt;/a&gt; produces these informational RFCs.)
一定程度上是一类「还债」类的 &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Request_for_Comments"&gt;RFC&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.ietf.org/rfc/rfc1945.txt"&gt;RFC-1945&lt;/a&gt; Hypertext Transfer Protocol—HTTP/1.0, May 1996&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="obsoletes"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id3"&gt;Obsoletes类&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Obsoletes&lt;/em&gt;
是一类被新的 &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Request_for_Comments"&gt;RFC&lt;/a&gt; 替换了的 &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Request_for_Comments"&gt;RFC&lt;/a&gt; ，
被替换不代表已经根据这些 &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Request_for_Comments"&gt;RFC&lt;/a&gt; 所实现的软件按照新的 &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Request_for_Comments"&gt;RFC&lt;/a&gt; 都进行了更新升级。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.ietf.org/rfc/rfc2068.txt"&gt;RFC-2068&lt;/a&gt; : Hypertext Transfer Protocol -- HTTP/1.1, January 1997&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.ietf.org/rfc/rfc2616.txt"&gt;RFC-2616&lt;/a&gt; : Hypertext Transfer Protocol -- HTTP/1.1, June 1999&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="standards-track"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id4"&gt;Standards Track类&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Standards Track&lt;/em&gt;
(expected to become &lt;em&gt;Internet standards&lt;/em&gt;)
是一类被期待成为互联网标准的 &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Request_for_Comments"&gt;RFC&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.ietf.org/rfc/rfc6265.txt"&gt;RFC-6265&lt;/a&gt; HTTP State Management Mechanism, April 2011&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.ietf.org/rfc/rfc6797.txt"&gt;RFC-6797&lt;/a&gt; HTTP Strict Transport Security (HSTS), November 2012&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.ietf.org/rfc/rfc7230.txt"&gt;RFC-7230&lt;/a&gt; HTTP/1.1 : Message Syntax and Routing, June 2014&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.ietf.org/rfc/rfc7231.txt"&gt;RFC-7231&lt;/a&gt; HTTP/1.1 : Semantics and Content, June 2014&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.ietf.org/rfc/rfc7232.txt"&gt;RFC-7232&lt;/a&gt; HTTP/1.1 : Conditional Requests, June 2014&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.ietf.org/rfc/rfc7233.txt"&gt;RFC-7233&lt;/a&gt; HTTP/1.1 : Range Requests, June 2014&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.ietf.org/rfc/rfc7234.txt"&gt;RFC-7234&lt;/a&gt; HTTP/1.1 : Caching, June 2014&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.ietf.org/rfc/rfc7235.txt"&gt;RFC-7235&lt;/a&gt; HTTP/1.1 : Authentication, June 2014&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.ietf.org/rfc/rfc7236.txt"&gt;RFC-7236&lt;/a&gt; Initial HTTP Authentication Scheme Registrations, June 2014&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.ietf.org/rfc/rfc7237.txt"&gt;RFC-7237&lt;/a&gt; Initial HTTP Method Registrations, June 2014&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.ietf.org/rfc/rfc7469.txt"&gt;RFC-7469&lt;/a&gt; Public Key Pinning Extension for HTTP, April 2015&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.ietf.org/rfc/rfc7540.txt"&gt;RFC-7540&lt;/a&gt; Hypertext Transfer Protocol Version 2 (HTTP/2), May 2015&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.ietf.org/rfc/rfc7541.txt"&gt;RFC-7541&lt;/a&gt; HPACK: Header Compression for HTTP/2, May 2015&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.ietf.org/rfc/rfc7725.txt"&gt;RFC-7725&lt;/a&gt; An HTTP Status Code to Report Legal Obstacles, February 2016&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id5"&gt;参考&lt;/a&gt;&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/List_of_RFCs"&gt;List of RFCs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://ipv6.com/articles/organizations/IETF-History-IPv6.htm"&gt;IPv6.com - The role of the Internet Engineering Task Force in IPv6 development.&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content><category term="ideas"></category><category term="HTTP"></category><category term="IETF"></category><category term="RFC"></category></entry><entry><title>唯一性标识的矛盾</title><link href="/articles/TheConflictionOfID" rel="alternate"></link><published>2016-04-14T16:18:00+08:00</published><updated>2016-04-14T16:18:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2016-04-14:/articles/TheConflictionOfID</id><summary type="html">&lt;p class="first last"&gt;生成不依赖运行环境、人可读、方便输入的全局唯一的标识是有多难。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;唯一性标识 (Identity) 的缩写有「ID/Id/id/I.D.」目的是在一定的范围内，标识一个对象的唯一性。&lt;/p&gt;
&lt;p&gt;唯一性标识的生成方法众多，典型的有&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;算法生成类&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;数据库的自动生成，例如MySQL的Auto Increment自增特性&lt;/li&gt;
&lt;li&gt;分布式的生成算法，例如Twitter的64bit自增 &lt;a class="reference external" href="https://github.com/twitter/snowflake/releases/tag/snowflake-2010"&gt;SnowFlake2010&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;128bit长的 &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Universally_unique_identifier"&gt;UUID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;基于具体场景，设计相关算法，在使用时自动生成&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;人工输入类&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;纯字母&lt;/li&gt;
&lt;li&gt;字母数字组合&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;唯一性标识的生成结果有两种&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;可转换为全数字，例如SnowFlake&lt;/li&gt;
&lt;li&gt;16进制字符，例如UUID&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;唯一性标识的可用性评价维度&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;隐私保护&lt;/li&gt;
&lt;li&gt;整体可用容量&lt;/li&gt;
&lt;li&gt;单位时间可用量&lt;/li&gt;
&lt;li&gt;首次生成简便性&lt;/li&gt;
&lt;li&gt;后期录入简便性&lt;/li&gt;
&lt;li&gt;后期迁移简便性&lt;/li&gt;
&lt;li&gt;人工阅读可预判性&lt;/li&gt;
&lt;li&gt;分库分表可路由性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一些具体的潜在的易用性维度&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;最好能够反映一些和具体使用场景有关的信息，例如身份证的前14位。&lt;/li&gt;
&lt;li&gt;尽可能的短&lt;/li&gt;
&lt;li&gt;简便的键盘输入，比如纯数字或纯小写字母&lt;/li&gt;
&lt;/ul&gt;
</content><category term="ideas"></category><category term="唯一性标识"></category></entry><entry><title>变是永远不变的现实情况</title><link href="/articles/Changing" rel="alternate"></link><published>2016-03-30T08:41:00+08:00</published><updated>2016-03-30T08:41:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2016-03-30:/articles/Changing</id><summary type="html">&lt;p class="first last"&gt;不要抱怨变化，变化是人的认知、社会进步的结果。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;系统的上线就意味着给业务带上了手铐。（已经忘了是从哪听来的这句话了）&lt;/p&gt;
&lt;p&gt;变是永远不变的现实情况，因为变是源自于认知的升级。&lt;/p&gt;
&lt;p&gt;变有哪几种类型呢？假设以纯人工方式进行一项业务：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;个体变了（单个职责 [ 功能 ] 变了，不影响他人）&lt;/li&gt;
&lt;li&gt;流程变了（分工界面 [ 接口 ] 变了，会影响他人）&lt;/li&gt;
&lt;li&gt;流量变了（功能分工都没变，就是要多安排人手 [ 水平扩容 ] ）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般来说，一个信息系统的交付，一定是以整体需求为基础，按照瀑布或敏捷方式进行交付的。&lt;/p&gt;
&lt;p&gt;在这个交付过程中，工程师们在落地形态上，会把一些「功能」和「接口」在物理形态上进行集成。&lt;/p&gt;
&lt;p&gt;这样高聚合的实现设计，一方面是由于过往硬件成本过高，另一方面也是由于担心跨进程所引起的不必要性能开销。&lt;/p&gt;
&lt;p&gt;高聚合的设计，为将来系统进行业务进化，种下了许多「技术债务」的种子。&lt;/p&gt;
&lt;p&gt;技术债务中的很大一部分，来自于后人对「业务逻辑」的不理解，没有文档，晦涩难懂的接口名称，一团乱麻的逻辑......&lt;/p&gt;
&lt;p&gt;在微服务落地的过程中，当系统落地方，接手一个完整的、冗长的业务需求说明，就意味着99%的场景下，微服务不太可能实现，因为很有可能看不见拆分的原则。&lt;/p&gt;
&lt;p&gt;也许有一种视角，就是能够知道一个企业中的全部业务流程，并对业务流程进行优化和缩短，也许这种方式是业务和技术都愿意看到的情况。&lt;/p&gt;
&lt;p&gt;一个微服务 ( Actor ) 应该是一个职能在虚拟世界中的投影，一组微服务构成的能力域 ( Domain ) 就应该是一个部门在虚拟世界中的投影。&lt;/p&gt;
&lt;p&gt;一个职能对应于一个微服务 ( Actor ) ，是合理的。&lt;/p&gt;
&lt;p&gt;微服务有多少种不同结构上的拓扑形态，应该是取决于自然社会的业务形态。&lt;/p&gt;
</content><category term="ideas"></category><category term="架构"></category><category term="微服务"></category></entry><entry><title>信息系统和平行宇宙</title><link href="/articles/ITTheMirrorOfParallelUniverses" rel="alternate"></link><published>2016-03-18T21:26:00+08:00</published><updated>2016-03-18T21:26:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2016-03-18:/articles/ITTheMirrorOfParallelUniverses</id><summary type="html">&lt;p class="first last"&gt;对于信息技术的使用，都是意识决定形态，形态反作用意识的结果。只有电子游戏没有康威定律什么事。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;信息系统（软件和硬件）就是从自然世界向虚拟世界的映射。&lt;/p&gt;
&lt;p&gt;每个企业，每个行业，都以唯心的方式（意识决定形态，用自己的意识决定自己虚拟世界的形态）向虚拟世界映射。&lt;/p&gt;
&lt;p&gt;于是，这个自然世界形成了若干个、无数个虚拟世界，也就是自然世界的若干个平行宇宙。&lt;/p&gt;
&lt;p&gt;每个IT系统的所有者，都在想尽办法，更快、更精准的去刻画自己的平行宇宙，并在自己的宇宙里，分析自然世界，并把结果反作用于自然世界。&lt;/p&gt;
&lt;p&gt;任何一种依靠人类体力劳动和脑力劳动的方式，最终都会比不过以「智能信息系统」自己作为映射工具的方式。&lt;/p&gt;
&lt;p&gt;也许，正在打开的是一扇门，通往平行宇宙的一扇门。&lt;/p&gt;
</content><category term="ideas"></category><category term="信息系统"></category><category term="平行宇宙"></category></entry><entry><title>好的架构师，挖空心思偷懒</title><link href="/articles/ArchitectArchitecture" rel="alternate"></link><published>2016-03-11T21:11:00+08:00</published><updated>2016-03-11T21:11:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2016-03-11:/articles/ArchitectArchitecture</id><summary type="html">&lt;p class="first last"&gt;架构师就是为了解决一个问题，发现这个问题背后的十个问题，最后发现世界全是问题。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;架构，是解决问题的模式。&lt;/p&gt;
&lt;p&gt;架构师，是这个模式的设计者。&lt;/p&gt;
&lt;p&gt;问题的出现，是因为人的贪婪。&lt;/p&gt;
&lt;p&gt;架构的出现，是因为人的偷懒。&lt;/p&gt;
&lt;p&gt;机器的出现，是人不想劳动。&lt;/p&gt;
&lt;p&gt;软件的出现，是人不想思考。&lt;/p&gt;
&lt;p&gt;架构的多变，是因为万物多变。&lt;/p&gt;
&lt;p&gt;架构的不变，是因为万物相通。&lt;/p&gt;
&lt;p&gt;好的架构，以不变应万变。&lt;/p&gt;
&lt;p&gt;好的架构，省时省力省心。&lt;/p&gt;
&lt;p&gt;好的架构，折射人的贪婪。&lt;/p&gt;
&lt;p&gt;好的架构师，挖空心思偷懒。&lt;/p&gt;
</content><category term="ideas"></category><category term="架构师"></category><category term="架构"></category></entry><entry><title>从元宵节煮汤圆看架构的识别与设计</title><link href="/articles/TangYuanInsightArchitecture" rel="alternate"></link><published>2016-02-22T16:33:00+08:00</published><updated>2016-02-22T16:33:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2016-02-22:/articles/TangYuanInsightArchitecture</id><summary type="html">&lt;p class="first last"&gt;煮汤圆不算是个很复杂的技术活，为什么没有煮汤圆机以及智能煮汤圆机这个产品出现呢？&lt;/p&gt;
</summary><content type="html">
&lt;!-- --&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id12"&gt;架构定义&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;所谓架构，就是解决「人所遇到的问题」(简称问题)的办法。&lt;/p&gt;
&lt;p&gt;采用什么办法解决问题，和客观的条件有关，也和当事人有关。&lt;/p&gt;
&lt;p&gt;因此，办法会有很多种，背后所体现的理念会有不同，折射出的是不同的价值观。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id13"&gt;好架构的定义&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;「好」架构，应当是对架构使用人「简单」并且「通用性强」，可以解决「很多」人的类似问题。&lt;/p&gt;
&lt;p&gt;「好」架构，应当因地制宜，不要求额外的增加使用人的负担（比如额外采购设备，学习新的知识），增加使用人的使用成本。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id14"&gt;煮汤圆的传统架构&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;煮汤圆的传统架构就是老一辈交代的煮汤圆方法。&lt;/p&gt;
&lt;p&gt;这里所描述的煮汤圆的方法，可能只是传统煮汤圆的方法之一，大致过程描述如下&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;取一锅干净的冷水&lt;/li&gt;
&lt;li&gt;把冷水煮开&lt;/li&gt;
&lt;li&gt;把适量的汤圆放入锅中&lt;/li&gt;
&lt;li&gt;等水再次烧开&lt;/li&gt;
&lt;li&gt;加入冷水，以保持汤圆不被煮破&lt;/li&gt;
&lt;li&gt;重复第4/5步若干次&lt;/li&gt;
&lt;li&gt;汤圆变熟，捞出享用&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一定还有更多方法，因为煮汤圆的过程，和锅有关，和水有关，和火力有关，和被煮的汤圆数量和大小有关，不可避免的煮汤圆的人有关，等等等等。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id15"&gt;煮汤圆的传统架构好不好&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;好。理由是：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;对于汤圆怎么被熟的质变过程不需要了解（不需要了解物理原理）&lt;/li&gt;
&lt;li&gt;可视化的温度，水煮沸了，就说明温度到达100摄氏度（一个标准的大气压条件下）&lt;/li&gt;
&lt;li&gt;对于煮汤圆的设备不需要额外添置（常见的水、锅、煤气灶就可以）&lt;/li&gt;
&lt;li&gt;整体过程容易理解，实际操作性强（烧开加水的重复过程，三岁小孩也许都会）&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id16"&gt;好吃有卖相是煮汤圆的目标&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;直接目标是煮熟（基本前提）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;问题是，熟是一个定性非定量的修饰词。熟，需要能够被量化，量化之后才能被管理。&lt;/p&gt;
&lt;p&gt;于是熟的量化标准之一常常会被提及：汤圆至少要浮于水面之上。&lt;/p&gt;
&lt;p&gt;可问题又来了，浮在水面之上的汤圆不一定能保证在咬开之后，里面的馅料也是熟的。&lt;/p&gt;
&lt;p&gt;于是前辈们，还会告诉我们，等待汤圆略微发胖，这是提高汤圆馅料变熟的有效量化标准之一。因为胖，是肉眼可见，是可被量化管理的对象。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;间接目标是不煮破不煮糊（还得有卖相）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于汤圆的外部材料主要是糯米，糯米遇到水之后，尤其是沸水，会发生结构分解（是不是分子，因为作者不是食品和高分子学专家，不能细讲，也不能乱讲），其最终结果就是煮糊了，也就是糯米和水完全融合了在一起，汤圆已经没有了型。&lt;/p&gt;
&lt;p&gt;因为怕煮烂，所以老一辈会特别强调，加入反复加入冷水，让水保持在似开非开的状态。&lt;/p&gt;
&lt;p&gt;这种方法，一方面是保持煮汤圆所需要的温度，一方面是降低沸水所造成的汤圆不必要的翻动，避免加速汤圆煮烂。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id17"&gt;把煮熟汤圆「好吃」的关键要素（根据现象看本质）&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;热能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;热能，是使汤圆从生到熟发生变化的核心、必要条件。没有变熟所需要的热能，并保持在合理的温度，汤圆静静的放在那里，永远不会变熟（但可能会变质）。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;时间&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;时间，是控制汤圆发生质变的必要条件。时间需要和温度配合，才能达到让汤圆变熟的目的。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;潜意识的基本假设&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不管多少类型的汤圆，大小基本固定，一般条件下，手工汤圆的大小，要比速冻机械制作的汤圆大一圈。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;被忽视的核心要素&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;汤圆在被煮前的基本物理条件，是直接从冷冻室内取出，还是常温。&lt;/p&gt;
&lt;p&gt;需要注意的是，沸水和汤圆糯米外皮的物理接触，是热能的第一道传导方式。汤圆的糯米外皮和馅料，是第二道传导方式。&lt;/p&gt;
&lt;p&gt;糯米外皮与馅料的热传导方式相比把水煮沸是缓慢的，换句话说，糯米皮和馅料，是热的不良导体，导热性能比水差。&lt;/p&gt;
&lt;p&gt;同时，冰冻的馅料变熟所需要的热能要比常温馅料的多，但热传导的效率基本不变。&lt;/p&gt;
&lt;p&gt;在冰冻的状态下进行直接加热，势必造成加热的时间变长，这样一来，汤圆的糯米更容易发生煮烂，如果还采用翻滚的沸水煮，很难避免汤圆煮烂、馅刚熟的情况发生。&lt;/p&gt;
&lt;p&gt;所以，在煮汤圆之前，最好把冰冻的汤圆从冰箱取出，在室温下放置一段时间。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id18"&gt;到底要如何煮汤圆&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;煮汤圆的基本概念&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;汤圆本身、一次煮汤圆的总体数量、锅的容量、热源功率、热源功率的可条件范围。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;煮汤圆的领域分解&lt;/li&gt;
&lt;/ul&gt;
&lt;ol class="arabic simple" start="0"&gt;
&lt;li&gt;原材料供应商（汤圆）&lt;/li&gt;
&lt;li&gt;煮汤圆平台-热能供应商（天然气灶、煤气灶、电磁炉、电陶炉、煤球炉、煤油炉、烧柴火的灶等等）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;需要注意的是：这些热提供商的性能指标并不相同。比如，热功率（单位时间所提供的热能）提供热能可调节的范围。&lt;/p&gt;
&lt;p&gt;作者直观感受是：现代化的天然气灶、煤气灶、电磁炉，热功率可调节范围要大于煤球炉和烧柴火的灶。&lt;/p&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;煮汤圆平台-恒温水容器供应商（水和锅）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;高中物理，告诉我们，水的比热容是很高的。所谓比热容，说的通俗一点，就是温度升高一度，所需要的（热）能量。&lt;/p&gt;
&lt;p&gt;所以，一个大锅里盛满的沸水，要比一个小锅盛满的沸水，所储藏的（热）能量多。&lt;/p&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;煮汤圆平台-熟汤圆交付集成商（煮汤圆的人）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;煮汤圆的人，首先要评估要煮的汤圆有多少，热能的获得方式是什么、可调节性有多强，锅有多大、里面可以放多少水。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;煮汤圆的基本流程&lt;/li&gt;
&lt;/ul&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;用锅把水烧开&lt;/li&gt;
&lt;li&gt;下生汤圆，以最快的速度把水加热并接近沸点（接近水的沸点）&lt;/li&gt;
&lt;li&gt;在一段时间，保持一定的水温（接近沸点，避免沸水翻滚以保持汤圆卖相），直至变熟（汤圆上浮和变胖）&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id19"&gt;又快又好把汤圆煮熟（最佳实践）&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;找尽可能大的锅&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大锅，意味着可以放更多的水。在把一批汤圆放入到沸水中之后，由于汤圆和水会直接发生热交换，导致水温降低，水的温度直接从沸点下降。&lt;/p&gt;
&lt;p&gt;举个极端的例子，在正在煮沸的一锅沸水中加入一滴常温的水，那么整个锅里的水，还将是煮沸的状态。原因是：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;一滴常温水，变成沸水的所需要的热量，热能提供商（比如煤气灶）可以快速提供。&lt;/li&gt;
&lt;li&gt;沸水的流动性，使得沸水和常温水的物理接触面增多，热交换速度变快。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这个极端的例子告诉我们，由于一滴水加热至沸点的能量，远小于蒸锅沸水的能量，所以蒸锅水在此过程中，水温基本不变。&lt;/p&gt;
&lt;p&gt;回到煮汤圆的场景，大锅意味着加入常温的汤圆水温下降会变少。&lt;/p&gt;
&lt;p&gt;持续的高水温，有利于提高热传导的进行（势能差越大，能量交换越快），有利于缩短煮熟汤圆的时间，保持汤圆的卖相。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;把热源的功率发挥到最大&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;快速提供热能，使放入生冷汤圆的之后水温迅速提高，需要两方面的配合:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;把热源开到最大（例如，把煤气灶开大火）&lt;/li&gt;
&lt;li&gt;增加火和锅的接触面积（选择平底锅和煤气灶，并把锅底放在煤气灶的火焰温度最高的外焰位置）&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;保持准沸水的水温&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;保持略接近于沸水的水温，获得最高效率的热传递同时，避免水的翻动导致汤圆解体。&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;煮汤圆的锅，自身是具备一定散热功能的（在没有热源加热的情况下，水会停止沸腾和逐渐冷却至常温）&lt;/li&gt;
&lt;li&gt;在热源最小输出热能的情况下，需要加入冷水，才能保持水温在沸点以下，避免不必要的水沸腾动能释放，引起汤圆破相。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id10"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id20"&gt;非常规的花式煮汤圆秘籍（聪明人秀才艺）&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;在家煮汤圆不反复加水&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前文所提到的，保持水温似开非开，是达成快速、不破相煮汤圆的必要条件。&lt;/p&gt;
&lt;p&gt;在当煮汤圆的装备得到技术革新之后，我们可以做到把热源功率变小，平衡锅自身散热和热源供给的平衡。&lt;/p&gt;
&lt;p&gt;同时，可以把锅容器，替换为玻璃材质，例如采用全玻璃锅，采用热功率无级可变的燃气和电气炉具。&lt;/p&gt;
&lt;p&gt;这样整个煮汤圆过程全程关上盖子，水蒸气蒸发所带走的热能，也能看到水是否被煮开。&lt;/p&gt;
&lt;p&gt;在实际操作过程中，只要保持水微微有些被煮沸，不对汤圆产生结构性破坏力。温度的用肉眼量化，结合控制火力大小的闭环控制。&lt;/p&gt;
&lt;p&gt;这样做的好处是，增加了煮汤圆的机械化可能，减少了过程中，对于加水这一环节的依赖，减少了对水的需求，增加了能源利用率。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;饭店煮汤圆「生熟混煮」&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然，控制水温的另外一个方法是，把加水，替换为加「生」汤圆。&lt;/p&gt;
&lt;p&gt;这种方法，对于执行人的个人素质和能力要求更高，需要相当的实际操作经验。&lt;/p&gt;
&lt;p&gt;其实，笔者相信，摄氏99度煮出来的汤圆，也是「熟」的。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id11"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id21"&gt;智能煮汤圆产品设计（延伸阅读）&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;这里要表达的是，技术其实是可以给业务带来革新。&lt;/p&gt;
&lt;p&gt;煮了一辈子汤圆的人（业务方），可能一辈子都不会提出「智能」煮汤圆的技术需求。&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;设计理念: 煮汤圆应该是不需要操心的，我只要「好吃」和「卖相好」的汤圆。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;食客（吃汤圆的人）只要买来汤圆，把汤圆投进煮汤圆机里，在汤圆被煮好的情况下会自动提示食客来享用，甚至自动放到碗里。&lt;/p&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;突破技术限制&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;技术限制: 识别汤圆馅变熟&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;目前被传承的量化方法是「上浮」和「变胖」&lt;/li&gt;
&lt;li&gt;目前需要最佳实践帮助和知道的是：上浮之后再煮多久&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;技术突破: 数字化汤圆馅变熟的技术指标&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;定位汤圆（因为水和汤圆的混合物，密度不一样）&lt;/li&gt;
&lt;li&gt;判断汤圆馅料的温度（在前一步的基础上，采用热感应?超声波频谱?的方式(请原谅作者对于这一领域缺乏了解)）&lt;/li&gt;
&lt;li&gt;恒温控制，保持水温接近于沸点但未到达沸点，避免由水的沸腾导致破相（笔者相信「99度」也能煮「熟」汤圆，当然这是在一个标准大气压的条件下）&lt;/li&gt;
&lt;li&gt;降低数字化成本，以控制产品的整体成品，使其变为消费品而不是概念产品或者奢侈品。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;口碑营销&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;消费者惊奇的发现，「智能煮汤圆机」其实还能煮馄饨、煮饺子...&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="ideas"></category><category term="生活与架构"></category></entry><entry><title>用Atom在Mac OS X 下编辑PlantUML</title><link href="/articles/PUMLMacOSXAtomEditor" rel="alternate"></link><published>2016-01-29T15:18:00+08:00</published><updated>2016-01-30T10:39:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2016-01-29:/articles/PUMLMacOSXAtomEditor</id><summary type="html"></summary><content type="html">
&lt;!-- --&gt;
&lt;p&gt;Atom的插件: plantuml-viewer 它支持&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;对 &lt;code&gt;plantuml&lt;/code&gt; 文本直接进行进行预览，不需要依赖 &lt;code&gt;plantuml.jar&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;支持另存为 &lt;code&gt;svg&lt;/code&gt; , &lt;code&gt;eps&lt;/code&gt; , &lt;code&gt;png&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id7"&gt;基础环境&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://github.com/caskroom/homebrew-cask"&gt;brew cask&lt;/a&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
brew install caskroom/cask/brew-cask
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;pandoc&lt;/p&gt;
&lt;pre class="literal-block"&gt;
brew install graphviz
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id8"&gt;编写与预览&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="http://atom.io"&gt;Atom&lt;/a&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
brew cask install atom
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Atom 插件&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://atom.io/packages/plantuml-viewer"&gt;plantuml-viewer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://atom.io/packages/language-plantuml"&gt;language-plantuml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;不推荐的Atom插件&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://atom.io/packages/plantuml-preview"&gt;plantuml-preview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;理由: 还需要依赖 &lt;code&gt;plantuml.jar&lt;/code&gt;, &lt;a class="reference external" href="http://plantuml.com/download.html"&gt;它在这里&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id9"&gt;其他相关&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Chome Extension: &lt;a class="reference external" href="https://chrome.google.com/webstore/detail/plantuml-viewer/legbfeljfbjgfifnkmpoajgpgejojooj"&gt;PlantUML Viewer&lt;/a&gt; ，它实际上使用的是 &lt;a class="reference external" href="http://www.plantuml.com/plantuml/"&gt;PlantUML Server&lt;/a&gt;  进行图片的实时生成&lt;ul&gt;
&lt;li&gt;支持中文，但字体渲染不够好&lt;/li&gt;
&lt;li&gt;首行必须是 &lt;code&gt;@startuml&lt;/code&gt;，否则无法阅览&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Firefox Add-ons: 暂时未找到&lt;/li&gt;
&lt;li&gt;基于IntelliJ IDEA的扩展: &lt;a class="reference external" href="http://plugins.jetbrains.com/plugin/?idea&amp;amp;id=7017"&gt;PlantUML integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://plantuml.com/eclipse.html"&gt;Eclipse Plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id10"&gt;效果&lt;/a&gt;&lt;/h2&gt;
&lt;img alt="AutoWithPlantUML ScreenShot" src="/images/2016/01-29/AtomWithPlantUML.png"/&gt;
&lt;/div&gt;
</content><category term="experiences"></category><category term="PlantUML"></category><category term="Atom"></category><category term="Mac OS X"></category><category term="效率"></category></entry><entry><title>从「差评级汽车4S店维修服务」看汽车服务行业的企业软件发展空间</title><link href="/articles/AutoRepair4SEnterpriseSoftwareEvolution" rel="alternate"></link><published>2015-12-31T16:33:00+08:00</published><updated>2015-12-31T16:33:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2015-12-31:/articles/AutoRepair4SEnterpriseSoftwareEvolution</id><summary type="html"></summary><content type="html">
&lt;!-- --&gt;
&lt;p&gt;汽车已经成为中国大城市家庭出行主要方式之一，随之出现的大大小小事故，可能每位车主都会经历。&lt;/p&gt;
&lt;p&gt;如果出现一次多方事故，责任方，交警，保险公司，一定会成为事故处理的必要成员，很多时候定损中心也是大概率出现的主角。&lt;/p&gt;
&lt;p&gt;一站式修车（定损，维修，理赔），目前对于无责方而言，仍是困难重重。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id3"&gt;差评级汽车4S店维修服务&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;这里，只聚焦维修过程，来看看「差评级汽车4S店维修服务」,背后折射出多少汽车服务行业管理水平与汽车服务企业软件的支撑力不足。&lt;/p&gt;
&lt;p&gt;首先，来体验一下一次真实的「差评级」的维修服务，涉及的汽车品牌则是德国三大汽车制造商巨头之一：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;车主在送车维修（维修部位为倒车雷达）过程中，在4S店的等待时间过长。&lt;/li&gt;
&lt;li&gt;车主在根据维修服务合同，准备取车前，2次主动电话联系4S店以确认准确的提车时间，都无法直接联系到接待专员。&lt;/li&gt;
&lt;li&gt;在上述每次沟通过程中，4S店接线员都需要询问车主姓名、被修车辆车牌号、联系电话以及接待的维修服务顾问姓名。&lt;/li&gt;
&lt;li&gt;当车主提车之后，车主以绝对信任的心态直接把车开走（没有对维修部位做复查），但在上路之后，发现需要更换新的倒车雷达竟然没有安装。&lt;/li&gt;
&lt;li&gt;车主返店再维修过程中，店方无人主动接待，依靠车主自己根据回忆服务专员脸部特征、体貌特征，人肉找到服务专员，进行投诉。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上几点，处处都体现了企业的管理水平不到位，企业软件支撑不到位。&lt;/p&gt;
&lt;p&gt;要强调的是，软件对于传统企业来说不是技术，而是帮助企业业务运营和流程管理的有力工具。对于汽车制造商、服务商而言，软件使用成本则占企业运营总成本的一小部分。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id4"&gt;企业软件架构升级方向&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;对于各大品牌的汽车4S店来说，改进客户体验，保证乃至品牌形象，已经成为企业经营不可或缺的一环。从企业软件角度，至少可以有以下改进：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;汽车品牌商，以公有云为基础，统一各个4S店的各个内部信息系统，例如电话语音、客户管理、维修管理等等。每个4S店都将成为公有云的租户。&lt;/li&gt;
&lt;li&gt;打通内部信息系统，例如IVR(Interactive Voice Response, 互动式语音应答)系统、CRM(Customer Relationship Management, 客户关系管理系统)、车辆维修系统，实现对客户身份的即时识别。&lt;/li&gt;
&lt;li&gt;增加手持移动设备（例如智能手机、平板电脑）的支撑（如喷漆钣金之类的维修项目）需要做到接待专员的（维修前before，维修后after）拍照存档，提高向客户交车前的质量保障水平。这也是移动化改变业务流程的典型场景。&lt;/li&gt;
&lt;li&gt;打通内部系统与互联网公众账号运营，增加客户自服务能力。例如，客户不需要打电话查询维修车辆的维修进度、提车时间，减少客户与服务商的无效沟通成本。&lt;/li&gt;
&lt;li&gt;汽车服务企业，可以通过与互联网社交平台的对接，实现修理过程透明化，每个关键环节都可以有数字照片直接通过社交平台推送给客户。&lt;/li&gt;
&lt;li&gt;与互联网消费者服务评价平台对接，实现客户满意度向企业运营决策层的消息直达，减少满意度由第三方转述的信息丢失与走样。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以看出，传统服务行业，在移动互联时代，传统服务性行业的企业软件已经滞后于社会信息化发展。&lt;/p&gt;
&lt;p&gt;云计算与移动化，企业内部多系统实时数据互通，内部系统与互联网社交平台的集成，已经成为改善传统服务行业客户体验的必然之路。&lt;/p&gt;
&lt;p&gt;传统企业的软件架构，背后折射的是企业整体的业务管理水平；企业业务的升级，需要背后企业软件架构的升级。&lt;/p&gt;
&lt;/div&gt;
</content><category term="ideas"></category><category term="企业架构"></category></entry><entry><title>可运营的企业IT平台</title><link href="/articles/TheOperationableEnterpriceITPlatform" rel="alternate"></link><published>2015-11-09T11:24:00+08:00</published><updated>2015-11-09T11:24:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2015-11-09:/articles/TheOperationableEnterpriceITPlatform</id><summary type="html"></summary><content type="html">
&lt;!-- --&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id4"&gt;平台生产力&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;技术成本&lt;ul&gt;
&lt;li&gt;学习成本&lt;/li&gt;
&lt;li&gt;使用成本&lt;/li&gt;
&lt;li&gt;维护成本&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;沟通成本&lt;ul&gt;
&lt;li&gt;业务与技术团队沟通&lt;/li&gt;
&lt;li&gt;技术团队内部沟通&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;业务价值&lt;ul&gt;
&lt;li&gt;业务需求交付速度&lt;/li&gt;
&lt;li&gt;业务创新力支撑&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id5"&gt;平台可运营评价维度&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;人员素质可发展&lt;/li&gt;
&lt;li&gt;技术架构自主性&lt;/li&gt;
&lt;li&gt;业务支撑连续性&lt;/li&gt;
&lt;li&gt;上下游协作友好&lt;/li&gt;
&lt;li&gt;管理制度平台化&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id6"&gt;平台产力提升途径&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;平台自动化程度&lt;ul&gt;
&lt;li&gt;代码生成&lt;/li&gt;
&lt;li&gt;文档生成&lt;/li&gt;
&lt;li&gt;上下游协作流程&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;协作自助化程度&lt;ul&gt;
&lt;li&gt;生产资料获得方式&lt;/li&gt;
&lt;li&gt;社会化提问与答疑，质量与影响范围量化评估&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="ideas"></category><category term="企业架构"></category></entry><entry><title>用Atom在Mac OS X 下编辑reStructuredText</title><link href="/articles/RSTMacOSXAtomEditor" rel="alternate"></link><published>2015-10-30T23:33:00+08:00</published><updated>2015-10-31T16:13:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2015-10-30:/articles/RSTMacOSXAtomEditor</id><summary type="html"></summary><content type="html">
&lt;!-- --&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id5"&gt;基础环境&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://github.com/caskroom/homebrew-cask"&gt;brew cask&lt;/a&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
brew install caskroom/cask/brew-cask
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;pandoc&lt;/p&gt;
&lt;pre class="literal-block"&gt;
brew install pandoc
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id6"&gt;工具&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="http://atom.io"&gt;Atom&lt;/a&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
brew cask install atom
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Atom 插件&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/Lukasa/language-restructuredtext"&gt;language-restructuredtext&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(预览首选) &lt;a class="reference external" href="https://github.com/tohosokawa/rst-preview-pandoc"&gt;rst-preview-pandoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(预览备选) &lt;a class="reference external" href="https://github.com/lsegal/atom-rst-preview"&gt;rst-preview&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id7"&gt;设置&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;rst-preview-pandoc&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;设置 &lt;tt class="docutils literal"&gt;pandoc path&lt;/tt&gt; , 通过 &lt;tt class="docutils literal"&gt;brew install&lt;/tt&gt; 的工具，一般都位于 &lt;tt class="docutils literal"&gt;/usr/local/bin&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;采用 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;rst-preview-pandoc&lt;/span&gt;&lt;/tt&gt; 时，可以忽略 &lt;tt class="docutils literal"&gt;Bugfix 1&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;在设置 &lt;tt class="docutils literal"&gt;pandoc path&lt;/tt&gt; 后，应当不会出现 &lt;tt class="docutils literal"&gt;Bugfix 2&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="bugfix"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id8"&gt;Bugfix&lt;/a&gt;&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;rst-preview&lt;/span&gt;&lt;/tt&gt; &lt;a class="reference external" href="https://github.com/lsegal/atom-rst-preview/issues/33"&gt;Live preview not working Atom 1.0.11&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.atom/packages/rst-preview/lib/rst-preview.coffee&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# line 76-77
# grammars = atom.config.get('rst-preview.grammars') ? []
# return unless editor.getGrammar().scopeName in grammars
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;Workaround on OSX for pandoc could not be spawned error&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.atom/init.coffee&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
process.env.PATH = ["/usr/bin",
            "/usr/local/bin",
            ].join(":")
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id9"&gt;效果&lt;/a&gt;&lt;/h2&gt;
&lt;img alt="AutoWithRST ScreenShot" src="/images/2015/10-30/AtomWithRST.png"/&gt;
&lt;/div&gt;
</content><category term="experiences"></category><category term="reStructuredText"></category><category term="Atom"></category><category term="Mac OS X"></category><category term="效率"></category></entry><entry><title>传统企业与互联网企业的软件价值观</title><link href="/articles/TraditionalVsInternetEnterpriseSoftwareValues" rel="alternate"></link><published>2015-10-19T20:07:00+08:00</published><updated>2015-10-20T22:52:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2015-10-19:/articles/TraditionalVsInternetEnterpriseSoftwareValues</id><summary type="html"></summary><content type="html">
&lt;!-- --&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id6"&gt;从单个计算机到互联网&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;在中国大陆，计算机有一个更为形象的名字，电脑。从字面可以看出，它是一件帮助人类进行思考的机器。但决定计算机思考什么，如何进行思考的，就是程序。
把人类脑袋中的可重复的、机械性的脑力劳动，变为机器可重复执行的程序，这个过程就是软件过程。&lt;/p&gt;
&lt;p&gt;在计算机诞生之初，它所要解决的问题是科学计算，也因此得名计算机。可以想象，一个计算机的计算能力是有限的，但有了计算机网络，使得成千上万，乃至上亿的计算机可以协同工作，并形成更大的计算能力，也就为解放人类机械性脑里劳动，带来了想象空间。计算机也从科学家手里，走进了如今的平常百姓家。&lt;/p&gt;
&lt;p&gt;要让计算机为普通百姓服务，从衣食住行医多方面提高人们的生活质量，其先决条件是信息化。信息化，是将一件事情或者一个物品或者一个时间或者定量货币，以数字化的方式精确量化下来。随着计算机硬件的不断发展，整个社会的信息化成本逐步降低。从而，人与人的通信、交易过程方便的可以信息化，并在此基础之上形成如今的各种面相个人的互联网产品：例如，社交应用、电子商务、第三方支付、个人信贷平台。&lt;/p&gt;
&lt;p&gt;### 现今的互联网特征&lt;/p&gt;
&lt;p&gt;现在的互联网公司是以轻资产行业——除了计算机及网络本身，不需要其他生产工具的行业——为切入点，以数字化逐步改变了人的沟通方式、人的消费方式，乃至生活方式。&lt;/p&gt;
&lt;p&gt;如今互联网公司普遍具有以下三个特征：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;面向个人消费者（B2C）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于用户基数大，以计算机（含网络和存储）为生产工具的互联网公司，为单个用户服务的边际成本低，并且规模效应大。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;轻资产距离实体经济较远&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;无论是蓬勃发展的社交应用（微信、微博），电子商务平台（淘宝、京东），还是个人金融（P2P金融），都远离消费品制造本身。即便是电商平台，与实体密切相关的是自身仓储信息化，物流环节则是和合作伙伴公司进行信息系统对接。电商平台，绕开了消费品诞生最为复杂的生产制造环节。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;经营虚拟对象&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;无论是淘宝、或者大众点评，在显而易见的商业交易背后，有着对个人主观感受、人际关系这些虚拟概念的经营，并将其与商业过程进行良好无缝的融合，促进个人消费市场生态的良性发展。即便像是百度、谷歌这样的搜索行业寡头，也是以广告、产品推广作为盈利模式，根本上还是通过技术手段尽可能拉近买卖双方的距离。&lt;/p&gt;
&lt;p&gt;所以，互联网公司的生产资料是一些看不见、摸不着的“关系”，这也导致了互联网所极力倡导的用户体验，快速交付。因为这些生产资料，任何一家公司都可以触手可及，唯有与众不同和贴心，方能获得用户的长期青睐。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id7"&gt;传统行业的企业信息系统&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;在传统行业里，有三大社会基础设施类行业的系统建设规模较大，它们是金融、电信、能源行业，每个企业所拥有的应用系统数量是成百上千，单个企业所使用的计算机规模也在数万至百万，或者更多。&lt;/p&gt;
&lt;p&gt;放眼传统金融行业，例如银行、证券、保险等细分行业，信息系统也是企业的核心生产工具。与第三方支付平台不同，商业银行有着社会基础设施的不可替代性，导致了其信息系统建设理念与互联网公司有着天壤之别，因为数据既是货币，所有交付行为都通过系统完成，所以其宗旨是在以账务为核心的会计准侧下，确保稳定、可靠零差错。&lt;/p&gt;
&lt;p&gt;电信、能源，都是以国家级重资产投资为核心的基础行业，其业务模式较为稳定，行业竞争性弱，主要受国家政策影响大。这类行业的信息系统主要解决两个方面的问题，重资产（数亿计的电信设备、电力设备）的信息化管理维护，面向个人与企业的业务营销，账务核销。&lt;/p&gt;
&lt;p&gt;为什么其他诸如工业制造行业的大公司（比如美国通用电气，德国西门子，德国大众汽车）信息系统并没有得到普通大众的关注呢？一个重要原因就是实体本身对一个行业业务模式变化的牵制作用。以汽车制造为例，其主营业务是设计和制造整车，信息系统的主要作用是一方面对物料、排产、供应链进行管理，另一方面对主营业务起支撑或者提高跨部门、供应商协作效率的作用。可以想象，并不会因为IT系统的一次变更上线，就直接诞生一个汽车的新产品，但很有可能是打通了来自于最终用户的个性化订单这个渠道。但在如今的互联网行业，一次IT系统变更上线，就可能具有行业的颠覆性。&lt;/p&gt;
&lt;p&gt;面对实体经济，面对工业制造行业，信息系统并不能像互联网一样，具备核心生产工具的地位。工业4.0和物联网，所涉猎的信息系统变革，其效果是加快企业对市场、对最终用户使用效果的感知，加快企业内外部实体多维度状态的感知，提高企业内部和上下游厂商的协作效率，从而整体提高社会实体经济的生产效率。&lt;/p&gt;
&lt;p&gt;### 重视软件交付过程&lt;/p&gt;
&lt;p&gt;通常一个具有人机交互功能（也就是带可视化操作界面）的企业信息系统，称之为应用系统。一个最简单的应用系统会包含前端可视化操作界面（Web）、后端业务逻辑（Service）、底层数据库（Database）以及存储（Storage）三个组成部分。将这样一个应用系统交付给企业内部的员工进行使用，以传统的软件工程方式进行建设，需要经过软件生命周期的六大阶段：需求分析、架构设计、编码实现、测试验证、上线运行、后期维护。&lt;/p&gt;
&lt;p&gt;对于复杂的应用系统，架构会变得更加复杂。这两者之间的差异，有着类似单间平房与摩天大楼的区别。其建设方法，制造工艺，也有显著区别。&lt;/p&gt;
&lt;p&gt;对于一个复杂应用系统，可能由不同的团队协作完成。这和建筑行业有负责基建、负责内部装修的不同工程承包商类似。每个工程分包团队只完成其专业领域的那部分，工程整体由总承包商进行统筹管理。&lt;/p&gt;
&lt;p&gt;对于一个复杂应用系统，可能采用一些通用的技术组件。这和建筑行业有不同标号的水泥，螺纹钢筋、光圆钢筋等不同规格类似。物料供应商则根据国际国家标准进行批量标准生产。在IT行业，这种通用组件则被称为中间件或基础软件。它的通用性并没有国际国家的强制标准，一般都以某一产品领域寡头的实施标准作为参考依据。&lt;/p&gt;
&lt;p&gt;而被非IT行业所广为熟知的程序员，则是编码实现这一环节的生力军，这一环节负责把业务需求变为代码，从而实现系统的业务功能。鲜为人知的架构师，则需要从业务需求、功能开发、测试验证、后期运维等多角度确定系统的基本框架，犹如确定一幢高楼大厦的主体结构。&lt;/p&gt;
&lt;p&gt;可以发现，人是信息系统的制造者，不同资历的从业人员，所交付的信息系统质量会有所不同。这类似实木家具的手工制作过程，不同技艺的工人，所制作的家具精致程度不一。&lt;/p&gt;
&lt;p&gt;虽然可以有方法论、软件工程学来指导和规范软件交付的过程，但软件最终是为一个企业或者组织提供相匹配服务，不同的行业特征、不同的信息技术发展时期、不同的组织结构、不同的系统建设方式，导致了世界上找不到两个一模一样的最终交付使用的信息系统，就好比世界上找不到两片一模一样的树叶。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id8"&gt;软件价值观&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;互联网公司&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;互联网公司的系统作为生产工具，一般都由自己员工进行开发、测试、维护。对外采购行为大多集中于主机、网络、存储等硬件设备。对于系统建设的理念是自主可控，为的是拥有极佳的业务变更适应性。另外，从互联网公司的业务视角出发，其信息系统可以根据行业特征进行优化，一般不采购上文所提到的中间件或者基础软件，大多使用免费开源的软件框架。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;传统行业&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;传统行业的信息系统，作为业务支撑平台，一般都以自有信息化部门牵头招标，以对外采购软件产品配合系统集成商服务，对中间件产品进行二次开发，从而实现业务功能的交付。企业主体通常不具备自开发能力，依赖于外部资源。从软件生命周期角度，开发、测试、运维三大团体也很有可能分属不同的集成商，甚至是外包人员。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;投资构成比较&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以同样的投资成本，互联网公司愿意使用零成本的开源中间件和100%的人力成本，进行系统建设。而传统企业，则会使用90%以上的投资进行对外产品和服务采购，余下的10%则作为甲方的信息化办公室团队人员成本。&lt;/p&gt;
&lt;p&gt;即便是互联网公司所提出的去IOE（IBM, Oracle, EMC）口号向传统行业蔓延，但传统行业所需要的人才储备却远远跟不上转型需要。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id9"&gt;信息技术的社会价值&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;互联网＋／ 工业4.0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于传统行业，“互联网＋”或者“工业4.0”更多层面是引导以信息化优化生产过程，提高生产效率，不可能也不能照搬互联网以计算机系统作为生产工具的行业模式。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;“大众创业，万众创新”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;轻资产的互联网经济，已经被发展十余年拥有雄厚资金实力的互联网公司所操控。新想法，新创意可以被他们轻易复制和超越。&lt;/p&gt;
&lt;p&gt;创业和创新的社会环境，面对普通大众，也许成功的只有彩票级的概率吧。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;社会老龄化与延迟退休&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;中国社会老龄化已经是一个不争的事实，其导致的问题是社会青壮年所创造的社会财富无法供养不参与社会劳动的老年人。&lt;/p&gt;
&lt;p&gt;直观的做法是以劳动人口数量直接来弥补社会劳动力的缺失，以创造足够的财富供养老人。&lt;/p&gt;
&lt;p&gt;中国劳动人口基数庞大，如果信息化手段能够提高社会生产效率，也许能够降低延迟退休政策所引起的群体排斥心理。&lt;/p&gt;
&lt;/div&gt;
</content><category term="ideas"></category><category term="企业架构"></category><category term="互联网+"></category><category term="工业4.0"></category><category term="软件价值观"></category></entry><entry><title>Mac OS X环境</title><link href="/articles/MacOSXEnvironment" rel="alternate"></link><published>2015-10-18T00:00:00+08:00</published><updated>2015-10-30T21:17:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2015-10-18:/articles/MacOSXEnvironment</id><summary type="html"></summary><content type="html">
&lt;!-- --&gt;
&lt;div class="section" id="mail"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id1"&gt;Mail&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Mail.app&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="browser"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id2"&gt;Browser&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="chrome-extensions"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id3"&gt;Chrome (Extensions)&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif"&gt;SwitchyOmega&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1Password&lt;/li&gt;
&lt;li&gt;AdBlock Plus&lt;/li&gt;
&lt;li&gt;Evernote&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="chrome-app"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id4"&gt;Chrome (App)&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.getpostman.com/"&gt;Postman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.gliffy.com/)"&gt;Gliffy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://processon.com"&gt;ProcessOn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="firefox-adds-on"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id5"&gt;Firefox (Adds-on)&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Firebug&lt;/li&gt;
&lt;li&gt;FoxyProxy&lt;/li&gt;
&lt;li&gt;Firegesture&lt;/li&gt;
&lt;li&gt;1Password&lt;/li&gt;
&lt;li&gt;AdBlock Plus&lt;/li&gt;
&lt;li&gt;Evernote&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="rss"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id6"&gt;RSS&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://reederapp.com/mac/"&gt;Reeder 3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="editor-ide"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id7"&gt;Editor &amp;amp; IDE&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://sublimetext.com"&gt;Sublime Text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://atom.io"&gt;Atom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="25.io/mou"&gt;Mou&lt;/a&gt; / &lt;a class="reference external" href="http://macdown.uranusjr.com"&gt;MacDown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.barebones.com/products/bbedit"&gt;BBEditor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.jetbrains.com/idea/"&gt;IntelliJ IDEA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.jetbrains.com/pycharm/"&gt;PyCharm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="version-control"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id8"&gt;Version Control&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.sourcetreeapp.com/"&gt;SourceTree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.zennaware.com/cornerstone/index.php"&gt;Cornerstone&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="database"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id9"&gt;DataBase&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.navicat.com"&gt;Navicat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="notebook"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id10"&gt;Notebook&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://evernote.com"&gt;Evernote&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="security"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id11"&gt;Security&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://agilebits.com/onepassword"&gt;1password&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="efficiency"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id12"&gt;Efficiency&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.alfredapp.com/powerpack/"&gt;Alfred Powerpack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.spectacleapp.com/"&gt;Spectacle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.iterm2.com/"&gt;iTerm2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.zsh.org/"&gt;zsh&lt;/a&gt; + &lt;a class="reference external" href="https://github.com/robbyrussell/oh-my-zsh"&gt;oh-my-zsh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://brew.sh"&gt;Homebrew&lt;/a&gt; + &lt;a class="reference external" href="https://github.com/caskroom/homebrew-cask"&gt;homebrew cask&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;RamDisk&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Automator&lt;/li&gt;
&lt;li&gt;Shell&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Socks5&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;socat / netcat&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="synchronize"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id13"&gt;Synchronize&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://dropbox.com"&gt;Dropbox&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="calendar"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id14"&gt;Calendar&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="www.galaworks.com/lunarcal/"&gt;LunarCal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://flexibits.com/fantastical"&gt;Fantastical&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="remote"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id15"&gt;Remote&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.vandyke.com/products/securecrt/mac_osx.html"&gt;SecureCRT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://cord.sourceforge.net/"&gt;CoRD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="experiences"></category><category term="效率"></category><category term="Mac OS X"></category></entry><entry><title>Pelican TOC Plugin</title><link href="/articles/pelican-toc-plugin" rel="alternate"></link><published>2015-10-16T00:00:00+08:00</published><updated>2015-10-17T00:00:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2015-10-16:/articles/pelican-toc-plugin</id><summary type="html"></summary><content type="html">
&lt;!-- --&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id3"&gt;插件准备&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;使用 &lt;a class="reference external" href="https://github.com/getpelican/pelican-plugins/tree/master/extract_toc"&gt;extract_toc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;执行 &lt;tt class="docutils literal"&gt;git clone &lt;span class="pre"&gt;https://github.com/getpelican/pelican-plugins.git&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id4"&gt;修改配置文件&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;文件：&lt;tt class="docutils literal"&gt;pelicanconf.py&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;指定插件目录&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;PLUGIN_PATHS = &lt;span class="pre"&gt;['&amp;lt;your_path&amp;gt;/getpelican/pelican-plugins']&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;启用插件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;PLUGINS = ['extract_toc']&lt;/tt&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="markdown"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id5"&gt;Markdown标记&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;插入 &lt;tt class="docutils literal"&gt;[TOC]&lt;/tt&gt; 标签，例如：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;title: Pelican TOC Plugin
date: 2015-10-16
modified: 2015-10-17
tags: pelican
category: pelican
[TOC]
### 插件准备
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="experiences"></category><category term="Pelican"></category></entry><entry><title>把时间当做朋友</title><link href="/articles/TakeTimeAsAFriend" rel="alternate"></link><published>2014-05-31T00:00:00+08:00</published><updated>2014-05-31T00:00:00+08:00</updated><author><name>Wang YanJiong</name></author><id>tag:None,2014-05-31:/articles/TakeTimeAsAFriend</id><summary type="html"></summary><content type="html">&lt;!--  --&gt;
&lt;p&gt;李笑来：《把时间当做朋友》&lt;/p&gt;
&lt;p&gt;能力：&lt;strong&gt;我们要努力，我们要坚持，我们要学习，我们要有志向，即使不是那么远大&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;欲望：守住自己的心&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;幸福=能力-欲望&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;我要的幸福：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我曾经历了许许多多，现在，我似乎明白了什么是幸福，在乡下恬静的隐居，尽可能对人们做些简单而有用的善事，尽管那些人们并不习惯我为他们做了这些，做一份真正有用的工作，最后休息，享受大自然，读书，听音乐，爱周围的每一个人。这就是我对幸福的诠释。在这些之上，有你为伴，也许还有我们的孩子，一个男人还能再渴望些什么呢？ ——列夫 托尔斯泰《家庭幸福》&lt;/p&gt;
&lt;p&gt;I have lived through much, and now I think I have found what is needed for happiness. A quiet secluded life in the country, with the possibility of being useful to people to whom it is easy to do good, and who are not accustomed to have it done to them. And work which one hopes may be of some use. Then rest, nature, books, music, love for one’s neighbor. Such is my idea of happiness. And then, on top of all that, you for a mate, and children perhaps. What more can the heart of a man desire? — Leo Tolstoy 《Family Happiness》&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;“要管理的不是时间，而是自己。人们生活在同一个世界，却又各自生活在自己的那个版本之中。改变自己，就意味着属于自己的那个版本的世界将随之而变，其中也包括时间的属性。开启自己的心智，让自己能够用最可能准确的方式思考、观察、记录、总结、分享和行动，那么自己的时间就会拥有不同的质量，进而整个生活都必然因此焕然一新。”&lt;/p&gt;
&lt;p&gt;//#心声#，对自己不满首先要做的是改变自己。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;苏格拉底揭示所谓的思考过程不过是“提问和回答”。 而千百年后培根说得更加全面：“读书使人完整，讨论使人完备，写作使人完善”。&lt;/p&gt;
&lt;p&gt;//#心声#现在真正读书的人比例不高，进而真正“讨论”而不是“争论”的人更少，能总结写博客的少之又少。&amp;quot;微时代&amp;quot;是个机器浮躁的时代，没多少人能够沉下心做大事。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;“没时间了”，其可怕程度几乎无异于死亡。死亡是所有人都要面临的终极困境——没有解决方案的困境。...... 死亡本身其实并不可怕，面临死亡的过程才真正可怕。如此，就很容易地体会那些“既勤奋又懒惰”的学生，面临的是怎样的悲惨境遇了。......但是生活中明显有另外一些人——尽管数量上并不占优——在用另外一种状态生活。他们从容，他们优雅，他们善于化解各种压力，安静地去做他们认为应该做的事情，并总能有所成就。他们甚至可以达到常人无法想象的境界——不以物喜，不以己悲。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;总的来说，一方面是自己的欲望无限，一方面是要完成的事情太多，一方面是自我满意度的不断下降——这就是人们总是不由自主地期望速成的根源。出路肯定存在，但这出路只有一个起点——接受现实。告诉自己：我有不足，我需要时间，我没办法一蹴而就。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;积累多的人之所以稳健，是因为对他来说，“我要”的欲望可以用“我有”的东西来满足。即便“我有”暂时不够，他也能借助已经拥有的足够努力和勤奋（抑或投机取巧的方法和经验），只需假以时日，定能如愿以偿。一旦得偿所愿，不仅“我有”的更多，“我要”的也更容易获得，如此形成良性循环。&lt;/p&gt;
&lt;p&gt;//#心声#，其实抑或投机取巧的方法和经验，我并不赞同。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;尽管天分确实很重要，但一个人的能力主要靠积累获得。从一个人开始从事一个职业的那一瞬间起，只要足够认真、努力，他的能力就会不停地积累。如果这个人实际上向往的是另一个职业，那么他的所谓“梦想”几乎必然是他在当前这份职业上心不在焉、无甚积累。其实，世界上80%以上的职业并不过分依赖天分，更可能甚至几乎只依赖积累。天长日久，这个人的当前的职业中将逐渐落后于那些认真做事的人。但此时他不会因为自己的落后而奋起直追，反过来，更可能的是把“反正我的梦想不是这个”当做借口。&lt;/p&gt;
&lt;p&gt;//#坚持·勤奋·认真#&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;越是不满现状，摆脱现状的欲望就越强烈，而这种欲望会让一个人最终迷失方向，因为无论是谁，从本质上看都无法摆脱现状——每一时刻的现状都是过去某一或者某些时刻的结果，而每一时刻的现状都是未来或者某些时刻的原因。没有人能够逃脱现实的束缚。&lt;/p&gt;
&lt;p&gt;从某种意义上理解，“逆境造就成功”、“磨难令人成熟”之类的话纯属胡说八道。显然，在顺境中更容易成功，而且很多磨难根本没有必要——这更可能是失败者对他们自己一生都未曾有机会体验的成功及成功者“意淫”式的猜想而已。失败者永远没有机会了解成功的真相，因为人最容易受自身经验的限制，而不曾有哪怕一点点成功经验的人更无从摆脱自身的局限。&lt;/p&gt;
&lt;p&gt;//引申到我的个人观点：没有必要去刻意吃苦，但绝对有必要能吃得起苦。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;几乎一切愚蠢的欣慰都来自否定现实、逃避现实，只有接受现实，才可能脚踏实地，避免心浮气躁、好高骛远。如果我们把成功朴素的定义为“用正确的方法做正确的事情，并在最后期限之前漂亮地完成”的话，那么，大多数所谓的“时间管理技巧”实际上发挥不了多大的作用，只不过是花拳绣腿。真正有用的往往是简单而又朴素的道理，例如“现实只能接受”。&lt;/p&gt;
&lt;p&gt;怎样判断所做的事情是否正确？核心只有一个：看它是否现实。&lt;/p&gt;
&lt;p&gt;很多人一生都不知道自己究竟有多么不现实。之前提到的“勤奋又懒惰”的人群，基本上都是把这些现实当做老生常谈的道理——视而不见、听而不闻、从不记录、从不反省，才常常作出荒唐的决定，最终堕落到那分田地。&lt;/p&gt;
&lt;p&gt;//现实——脚踏实地，稳扎稳打，步步为营&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;两点之间的最短距离是恶性循环。——墨菲拓扑定律&lt;/p&gt;
&lt;p&gt;//这句话，也许对我曾经对很多人举过的一个例子的反面高度抽象。 为了实现一个目标A，可以借助旁人的力量，直接获得A。也可以通过自己的实践获得A，同时在这过程中收获方法B，副产品结果C。 这是实现自我价值提升的良性循环。#技多不压身#&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;事实上，那些真正能够做对、做好的人，绝不会随意嘲弄、打击别人，因为他们是做对过、做好过的人，他们一路走过来，心里非常清楚做对、做好有多么不易，所以，他们会不吝一切机会去鼓励那些尝试做事情的人。这甚至可以当做一种测试方法：如果一个人经常嘲弄他人，那只能说明他自己不怎么样；否则，他会想那些极少数已经做对、做好的人一样，给予别人真诚的鼓励而非嘲弄。尽管那些能做对、做好的人又是也会给出负面评价，但这些评价通常是“建设性的负面评价”，并不是为了获得优越感而发出的嘲弄。&lt;/p&gt;
&lt;p&gt;所以，我们没有必要在意来自他人的、非建设性的负面评价。没有谁从一开始就能做对、做好。所有做对、做好的人都是一路磕磕碰碰走过来的，这就是生活常态。而动辄给出非建设性负面评价的人，往往不是正经做事的人，他们和那些正经做事的人身处不一样的世界，这也是生活常态。&lt;/p&gt;
&lt;p&gt;//只见贼吃肉，不见贼挨打的现象的是非常普遍的；那些尝试做事情的人，是孺子可教的人，他们在努力，需要被鼓励，需要被肯定。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;更重要的是，人在小时候没什么事情可做，就愈发感觉时间过的慢；随着年龄的增加，要做的事情越来越多，当然就愈发觉得时间过得飞快，稍纵即逝。由此看来，小孩子的感觉自然是“那时候天总是很蓝，日子总过的太慢”，而“人生犹如白驹过隙，瞬间而已”大都是老年人的慨叹，也是他们的切身感受。&lt;/p&gt;
&lt;p&gt;//时间有限，精力有限，我们不能什么都想要。幸福=能力-欲望。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;所有真正做事的人都知道，任何任务的绝大部分都是枯燥而又无趣的，所谓有创意的部分，可能连1%都不到。对此，我有切实体会。&lt;/p&gt;
&lt;p&gt;//就像爬山，枯燥而无趣地拾阶而上，为的只是站在最高点欣赏一览众山小的壮丽美景。 但不是每个人都有毅力坚持到最后，也不是每个人都有能力坚持到最后。毅力需要培养，能力需要积累。 而培养和积累的过程会很漫长，会很艰苦，会感觉到累，这就对了，说明在向上走。&lt;/p&gt;
&lt;p&gt;//往上走，即便是一小步，也有新高度。&lt;/p&gt;
&lt;p&gt;//我也会向众人提起，“我喜欢做有创意的事情”，但，我会为了这1%去做99%的枯燥的事情。 实现目标之后，再设定下一个1%。这样，人生就丰富了，并且不是简单的丰富了。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;做任何事情，学会思考方式最为重要。要学着像一个项目管理者那样思考——他们更多关注“方法”，他们会花费比别人多（多出许多倍）的事件去落实每一个步骤。&lt;/p&gt;
&lt;p&gt;在做任何事情之前，通过关注“方法”去反复拆分任务，最终确认每个子任务都是可完成的，这是一个人不可或缺的功课。 这样的习惯，会使得一个人变得现实、踏实。 这既是一种习惯，也是一种后天习得的技能。这种技能无比重要，却常常被忽视，业务掌握这种技能的人总是默默地应用它，而忽视这种技能的人从未看到过它的具体实施过程和巨大好处。&lt;/p&gt;
&lt;p&gt;//#授人以鱼不如授人以渔#，珍惜每一次被授人以渔的机会，好的方法是节省时间的方法。书是前人对思考的系统总结和归纳，书传授的是方法。从小我们就被熏陶“书是人类进步的阶梯”，但不一定真真理解。（这里的书不是指小说，虽然它有时候也具备一定这样的功能，但需要自己具备归纳总结的能力）&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;与所有人一样，从小自命不凡的我当然也给自己贴过各种各样的标签。我崇尚公正，向往自由，渴望平等，憧憬希望。在相当长的一段时间里，我感受到的是禁锢，体会到的是差距，意识到的是失望。我现在猜想，或许所有人都必然要经历这样一个阶段，不过只有少数人能够度过这一阶段。&lt;/p&gt;
&lt;p&gt;直接来自感官的认识很容易与他人分享，而思想上的体验却往往难以用语言表达。&lt;/p&gt;
&lt;p&gt;//#心声#，何况我语文又那么差。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;在与计划相关的格言中，我最喜欢的是：“我们不是计划着去失败，而是失败地计划”。&lt;/p&gt;
&lt;p&gt;所有真正执行到底的计划，都是因为其目标现实可行。&lt;/p&gt;
&lt;p&gt;有人说“计划总是没有变化快”。这句话听上去挺现实，缺没说到点子上。计划总是被变化打乱的深层次的原因在于：计划过于长远。事实上，无论变化多快，计划总是要有的，只是在制定计划的时候，应该考虑到变化，应该以自身的情况分析自家究竟适合制定多久的计划。&lt;/p&gt;
&lt;p&gt;做长期计划显然是正确必需的，但是，并非每个人都有制定长期计划的的能力。这种能力可跻身最重要的能力之位，拥有它需要挣扎、需要努力、需要从一点一滴做起。 不要上来就制定过长的计划。 哪怕制定一个星期的计划，都不是很容易的事情——实际做一下就知道了。&lt;/p&gt;
&lt;p&gt;//当每本书看到接近于一半位置的时候，是最惬意的。因为可以把书妥妥的平放，不用手压，全神贯注地与作者交流。翻书的声音很悦耳。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;计划固然重要，行动更为重要。&lt;/p&gt;
&lt;p&gt;如果想做事，当然要行动。行动是改变自己的众多方法中最有效、最直接的方法。很多时候，只要开始行动，哪怕实现并无计划，往往也会有收获。但是反过来，缺乏行动的计划肯定没有任何意义。&lt;/p&gt;
&lt;p&gt;如果想要改变自己，或者对自己目前的处境不满意，那就一切从简——找一个你觉得应该会带来改变的任务，然后去做就是了。不要怕碰壁，不要怕失败，那是必须经历的过程。失败并不可怕，因为人总是要失败许多次才会得到结果，况且全天下又不是只有你会失败，怕什么？达成目标的关键在于每次受到挫折之后能否汲取教训。只要能汲取教训，然后自我调整，那就是进步。我们一生所做的事，大都是在试错，对于人生，没有人能像解释数学或物理学那样给出普适的公式。&lt;/p&gt;
&lt;p&gt;永远记住，马上行动是最重要的——尽管这句话已经被无数人所过无数次。&lt;/p&gt;
&lt;p&gt;//有多少人，其实是被自己拖死的。如果没有勇气去接受失败，那么也没有机会去获得成功。曾几何时，有人对我的评价是执行力强，雷厉风行。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;很多人常常拒绝学习，他们拒绝学习的理由和那些痴迷学习的人一样——不知道它有什么用。&lt;/p&gt;
&lt;p&gt;如果说，车是人类腿脚的延伸——使人们走得更远，望远镜是人类眼睛的延伸——使人们看得更清楚，计算机是人类大脑的延伸——使人们算的更快......那么，学习就是人类所有能力的延伸——使人们拥有更多的能力，并且往往主要取决于你花费的时间与精力。&lt;/p&gt;
&lt;p&gt;事实上，学习是投资回报率最高的行为。&lt;/p&gt;
&lt;p&gt;//确实如此，每当觉得无所事事的时候，看看大家的文章，或者动动手写写与工作无关的程序，吸收营养，不管是经济、历史、传记、管理、经营还是其他等等。——我的理由是：不知道它现在有什么用，但一定会有发挥作用的时候。有很多例子在自己身上不断应验。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;“拒绝学习”的例子。我曾多次劝我的一个朋友花20分钟学习一下命令行下的批处理方法，未果。他拒绝的理由是：“现在谁还用命令行啊？早就是可视化操作系统的时代了！” 我曾经多次劝我的另一个朋友花10分钟学习一下Google通配符的使用，未果。她说“不用那东西也一样能找到自己想要的啊！”&lt;/p&gt;
&lt;p&gt;我曾替他们着急，可是后来却发现这是个“死结”。为什么呢？第一，拒绝学习就不可能有机会知道学习之后的收获；第二，由于不知道学习之后的收获是什么，也就不可能知道那收获有多好、多大；第三，既然对学习的好处无从了解，自然就没有学习的动力......&lt;/p&gt;
&lt;p&gt;//这是一个恶性循环。未果，说明，人和人的沟通，有时候真的没有用。子非鱼安知鱼之乐。大家的知识背景不同，所能看到的视野不同，所得出的结论不同，总之，价值观不同。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;“学习”的重要起点是：起码学会一种技能。无论这中技能多简单、多普遍，学会之后总是可以让学习者了解“习得”带来的大不同。一旦拥有了一个起点，学习的欲望就会像发芽的种子，无论多大的石头都压不住——它会越来越茁壮，越来越坚强。&lt;/p&gt;
&lt;p&gt;其实，那些拒绝学习或者一不小心受了影响而把“学习”两个字妖魔化了的人真的非常可怜，他们每天都在挣扎着想要“管理时间”、“珍惜生命”、“提高效率”，却不知道他们因为当初不肯花十几分钟学习而导致其后少做了很多事情、错过了很多机会，并且连只有一次的人生都没有过好。&lt;/p&gt;
&lt;p&gt;千万不要拒绝学习。&lt;/p&gt;
&lt;p&gt;//不学习是多么的可悲！&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;观察一下就会发现，日常生活中主要的“沟通障碍”本质上几乎都是由于沟通双方无法让对方理解与他们的经验相悖的知识或信息造成的。 不夸张的讲，目前几乎所有关于沟通技巧的书中提供的解决方案都没有真正说到点子上。 这种知识和信息传递中的问题，不是仅仅通过“站在对方的立场上考虑问题”就可以轻松、彻底地解决的。&lt;/p&gt;
&lt;p&gt;尽管“站在对方的立场上考虑问题”确实是很有用也很难掌握的技巧，可当我们面对（或者说“背对”可能更准确一些）“站在双方立场都无法考虑到的问题”时呢？ 尽管这时我们甚至可能不知道问题究竟是什么，但有一点是确定无疑的——这种问题不仅确实存在，而且往往至关重要。&lt;/p&gt;
&lt;p&gt;在我看来，所有教育失败的症结也在于此。在人们探索未知、寻求真理的时候，困难大都来自如何正确地理解“与现有经验相悖的知识”&lt;/p&gt;
&lt;p&gt;//如何正确理解”与现有经验相悖的知识”对我来说是个难题，对于我来说，现有经验=对，与现有经验相悖=错，除非能证明这个相悖的知识确实是对的，我才能接受。可是，在我不轻易放弃现有经验的情况下，怎么证明？（但不要忘了我是讲道理的）&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;自学能力的打造就是从我们认真对待它开始的。它就像恋人一样，你对它好，它才对你好。完全靠自己学一样东西吧——管它是什么，并且一定要学好，学到比相当数量的人都好。如果真的做到这个地步，那你就不仅是一个完整的人了，还是一个相当优秀的人。这时，你完全可以对自己说：“你太有才了！” 我个人的建议是去自学一门计算机程序语言，因为计算机程序语言的相关资源在互联网上分布广泛、极易获得，而且优秀的资源使用的语言往往是英语，这又顺带练习了英文阅读理解能力——想想吧，肯定不仅是一举两得。&lt;/p&gt;
&lt;p&gt;//借用某人的一句话，程序员的语言只有英语，不服来辩。同时，作为一个可以改变生活，梦想改变世界的程序员，对这职业感到深深自豪。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;很多人就是这样，坚持拒绝思考，然后用天下最累的生活方式而不自知。大哲学家罗素曾观察到这个现象，他为之奇怪并慨叹，“很多人宁愿死也不愿思考”，然后戏谑道，“实际上，他们确实死得很快。”&lt;/p&gt;
&lt;p&gt;//脑子不用跟没脑子有什么区别&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;一个人的强与弱，实际上相当于他的勇气减去他的恐惧之后的分值——如果是正数，那么他是强的；如果是负数，那么他是弱的。所有人的起点都是负数。但凡是人，都要经过很多的挣扎才能使这个算式的结果变成正数。并且无论是谁、无论这个人有多强，都不可能完全消除恐惧。勇气可能等于零，恐惧却永远大于零。&lt;/p&gt;
&lt;p&gt;//人贵自知，勇气需要积累。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;之所以在遇到尴尬时会冒出这样的念头（后悔），是因为太多人早就朴素地明白一个简单的道理：我们所面临的今天很大程度上取决于我们的过去。&lt;/p&gt;
&lt;p&gt;//哈佛校训：你所浪费的今天，是昨天死去的人奢望的明天；你所厌恶的现在，是未来的你回不去的曾经。 //你珍惜今天了吗？&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;读书，其实不见得一定要有目的，随意翻同样有益——有用的知识经常是偶然获得的。时间久了，我们就会发现，读书偶得的知识不仅多，而且非常重要，只不过因为很多人因为片面而又肤浅地理解“人生应该有目标”而失去了这些机会。&lt;/p&gt;
&lt;p&gt;//观察，阅读，思考，总结，是提升自我的“捷径”。知识是眼界之基石。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;方法固然重要，但是比起“用过”来说，方法几乎可以忽略不计。&lt;/p&gt;
&lt;p&gt;//“用功”是一种坚持，一种质朴的力量，它可以使人抛开一切杂念，享受心灵的宁静。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;所有学习上的成功，都只依靠两件事——策略和坚持，而坚持本身就是最重要的策略。&lt;/p&gt;
&lt;p&gt;坚持，其实就是重复；而重复，说到底就是时间的投入，准确的说，是大量的投入。&lt;/p&gt;
&lt;p&gt;//策略中还包含一项重要的内容：专注。三天打鱼两天晒网是万万不行的。而重复，也不是指简单的机械性重复，而是经过归纳总结的螺旋式上升。如果在一次又一次地重复的过程中，没有缩短时间，那么就是在浪费时间；而缩短时间的过程，就是找到方法，并不断优化。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;其实，比成功更重要的是成长。如果“成功”是与他人比较的话，那么“成长”则是与自己比较——今天的我和昨天的我、明天的我和今天的我之间的比较。后一种比较显然比前一种对个体来说意义更大，也能够带来更加踏实的幸福感。&lt;/p&gt;
&lt;p&gt;//每天成长一点点，时间会给出答案。不信？回头看看。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;浪费时间、虚度年华的人，有一个共同的特征——拼命想控制自己完全不能控制的事物，却在自己真正能掌控的地方彻底失控。&lt;/p&gt;
&lt;p&gt;相信运气其实是缺乏自制力的表现。&lt;/p&gt;
&lt;p&gt;//我越来越相信，所谓的“运气好”，本质上是自身能力以及对周围控制力的综合作用的结果。使自己避免处于不确定因素中，以至于失去控制，听天由命，这本身就是获得“好运气”的必要条件。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;“相信我，所谓的人脉就算重要，也根本没他们说的那么重要。”&lt;/p&gt;
&lt;p&gt;这些公认为优秀的人，往往并不“低调”，也不“平易近人”。他们不是故意这样做的。他们无意去惹恼那些在他们看来“平庸”的人，只不过他们无形中有这样的体会：与这些人交流，沟通成本太高。这些人当中不多见的那些心态平和者，一般都是经历了波折，才终于意识到自己应该保护自己。他们发现，有些误会根本没机会解释。于是，他们开始“谦虚”，他们学会“低调”，他们显得“平易近人”。&lt;/p&gt;
&lt;p&gt;//懒得解释&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;承认自己能力有限，是保持心理健康的前提。&lt;/p&gt;
&lt;p&gt;“量力而行”是如此高难度的行为模式： 第一，承认自己能力有限； 第二，不怕在别人面前露怯； 第三，敢于不去证明自己是“好人”&lt;/p&gt;
&lt;p&gt;从这个层面上讲，的确往往只有优秀的人，才会拥有有效的人脉。&lt;/p&gt;
&lt;p&gt;而且，正因为这些人随时随地都可能要回避“不公平交换”的企图，他们会更加注重自身的质量，知道“不给他人制造麻烦”、“独善其身”是美德，这也体现了常言说的“事多故人离”。&lt;/p&gt;
&lt;p&gt;//还记得那个公式吗？幸福=能力-欲望。独立，是立身之本。#不求人格自高#&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;有些资源很难靠白手起家获得，例如金钱、地位、名誉。然而，有些资源缺可以轻易从零开始积累，例如一个人的才华与学识。才华与学识，是一定可以通过努力获得的。一个人的心智能力一旦开启，只要正常地努力，并且有耐心和时间做朋友，很容易就能成为至少一个领域的专家。&lt;/p&gt;
&lt;p&gt;努力并不像传说中的那么辛苦，说出来只不过是——每天至少专心学习、工作6小时。可是努力需要的耐心，却远比多数人想象中来得巨大，“要与时间相伴短则5年，长则20年”。&lt;/p&gt;
&lt;p&gt;//在这个浮躁的年代，什么都急于求成，能坚持5年，10年，20年，潜心、专注、努力，凤毛麟角。而在此过程中所得到的感悟，并不是周围人能够理解的。#人需要信仰#&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;专心打造自己，让自己成为一个优秀的人、一个有用的人、一个独立的人，比什么都重要。打造自己，就等于打造自己的人脉——如果人脉真像传说中那么重要的话。 其实，我总觉得关于人脉导致成功的传说虚无缥缈，不过是些不明真相的人的臆造出的幻想罢了。&lt;/p&gt;
&lt;p&gt;//每天晚上8点至10点——每天的黄金时间，在这个时间做的事情，决定了你的一生。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;想做到“不以物喜，不以己悲”的健康状态，要迈出的第一步就是——停止嘲弄他人。嘲弄者必被嘲弄——这件事就是一个恶毒的魔咒。另一个比较“技术”一点的手段就是“忘记自己的有点”。很多时候，所谓“谦虚”和“低调”其实是一种自我保护的优化策略。&lt;/p&gt;
&lt;p&gt;//要经常对自己说，别把自己太当回事，其实你什么都不是。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;如果一个人把大部分的时间花在工作和学习上，那么他是以工作成就为导向的人；如果一个人把大部分的时间花在享受欢乐上，那么他是以生活满足为导向的人。每个人都不相同，有些人可以在工作和学习上获得更多的乐趣，有些人则会在生活琐事中获得更多的幸福。&lt;/p&gt;
&lt;p&gt;所以，你需要确定自己是一个什么样的人。很多时候，鱼和熊掌缺失不可兼得——你必须选择。这也会使你非常清楚一个简单的事实：选择意味着放弃。选择做某件事情，可能就不能去做另外一件事情——哪怕你觉得可以一起做两件事情，实际上你已经不可能同时做第三件事情了。&lt;/p&gt;
&lt;p&gt;这时候，黄金分割率可以作为一件趁手的工具。如果一天你可以规划的时间有10小时，并且你确定自己是以工作成就为导向的人，那就这也规划吧：用大约6.18小时去工作和学习，而用剩下的大约3.82小时去享受欢乐——毕竟你是一个正常人。反过来如果你确定自己是以满足生活为向导的人，那就这样规划吧：用6.18小时去享受欢乐，而用剩下的大约3.82小时去工作和学习——你毕竟还要想办法养活自己。&lt;/p&gt;
&lt;p&gt;每个人专注的重点是不一样的。少数情况下，一个人可以专注到无以复加的地步——看看那些几天几夜打麻将的人，那些每天除了吸毒什么都不做的人，那些长时间坐在计算机前玩游戏的人就知道了。不过这些都是负面的例子。&lt;/p&gt;
&lt;p&gt;某种意义上，我们不得不说，这也的人心智发育不是很健全，因为他们太容易满足并且仅仅满足于简单的感官刺激，而很少甚至无法感知那种需要通过复杂的劳动才可以获得的心灵上的愉悦。&lt;/p&gt;
&lt;p&gt;//两种不同的生活导向，并不是一成不变的。两者存在相互转换，目的是使漫长的人生处于良性循环通道中。另外，可以注意到的是，不管是那种导向，都需要去学习，尤其是在当下，逆水行舟不进则退的时代。 很有可能，我们不知不觉就被这个社会抛弃了。我也十分赞同不能同时做很多事情的观点，即使可以并行做很多事情，那也是短暂的，毕竟能力有限、精力有限。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;很多人半途而废，往往是因为把目标设定得太高，同时又对达成那么高的目标要付出的代价缺乏清楚的认识。这足以体现“自知之明”的重要性。我常常觉得，很多快乐是建立在“自知之明”上的。我知道自己的优点是什么，同时也知道自己的缺点是什么，所以，通常情况下，我不大可能做白日梦。&lt;/p&gt;
&lt;p&gt;//我至今依然以为我是一个有自知之明的人，所以在做一个重大的决定前，我会花一定的时间去考察目标的高度，评估自身的能力，以及对周围的影响，从而找到一个平衡点。即便在外人看来，这个目标不是最高的，但也许是最合理的。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;我们应该把自己的生活节奏调整的慢一点。&lt;/p&gt;
&lt;p&gt;在一个所有人都匆匆忙忙的世界里，想放慢节奏实在是一件非常难的事情。但是我们应该记住的是：凡是值得做的事情，都值得慢慢去做，做很久很久。&lt;/p&gt;
&lt;p&gt;//慢是一种奢侈，快是一种浮躁。不要想法太多却不切实际了，我们不能什么都想要。人生需要规划，人无远虑必有近忧。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;真正的成功者，在关注”开源“的时候，会不吝惜金钱合理地”节流“；在关注”开源“的时候，也不会忘记”开源“的重要性。道理很简单：任何事情都可能“物极必反”。&lt;/p&gt;
&lt;p&gt;//还记得正弦曲线sin(x)吗？大部分的事情都会有周期，我们也不可能一直得意向上，总会有失意的那一天。我们要做的只是储备能力，前进，向前，期待下一个顶点。不慌，不忙，笃悠悠，按照节奏来。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;相信积累的力量，本质上就是相信复利的力量。&lt;/p&gt;
&lt;p&gt;常言道“习惯决定命运”，说的就是这个道理。有些好习惯，养成得越早，一生的收益就越大。同理，坏习惯也是收复利的“高利贷”。&lt;/p&gt;
&lt;p&gt;举一个很重要的例子：“怕麻烦”就是一种害死人的坏习惯。学习效果差，就是因为“怕麻烦”而造成了疏漏；工作成绩差，也不过是因为“怕麻烦”而偷懒所导致的。&lt;/p&gt;
&lt;p&gt;甚至，可以说，只要仔细观察一下，我们就会得出这样的结论：很多人生活不幸，其实只不过是在作关键决策时因为“怕麻烦”而产生了失误......&lt;/p&gt;
&lt;p&gt;养成不怕麻烦的性格，才可能拥有耐心。耐心则是在任何工作、学习上获得成功的前提。&lt;/p&gt;
&lt;p&gt;//事实上，性格决定命运。坏习惯就像慢性病一样，暂时看起来没什么事，等到并发症来的时候，无药可救。 //当然，很多人不怕死，因为他们无所谓，也不存在对未知的恐惧，觉得得过且过已经不错了。那这日子过的跟动物有啥区别呢？&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;表情和神态是一个人内心的折射，几十年积累足以是一个人的内心变得“不俗”，于是，表情跟着“从容”、神态跟着“睿智”。&lt;/p&gt;
&lt;p&gt;//所以，与新人接触，第一要看面相。#面相很重要#&lt;/p&gt;
</content><category term="ideas"></category><category term="时间管理"></category><category term="价值观"></category><category term="书评"></category></entry></feed>
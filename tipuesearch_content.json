{"pages":[{"url":"http://yanjiong.wang/page/about","text":"我曾经历了许许多多，现在，我似乎明白了什么是幸福，在乡下恬静的隐居，尽可能对人们做些简单而有用的善事，尽管那些人们并不习惯我为他们做了这些，做一份真正有用的工作，最后休息，享受大自然，读书，听音乐，爱周围的每一个人。这就是我对幸福的诠释。在这些之上，有你为伴，也许还有我们的孩子，一个男人还能再渴望些什么呢？ ——列夫 托尔斯泰《家庭幸福》 教育 2002-2006(学士) 北京邮电大学, 理学院, 数学与应用数学专业 北京邮电大学, 电信工程院, 通信工程专业 2006-2011(博士) 北京邮电大学, 网络技术研究院/网络与交换技术国家重点实验室, 密码学专业 工作 2006-2011 西门子（中国）有限公司, 西门子中国研究院 2012-2014（博士后） 上海交通大学，电子信息与电气工程学院，计算机科学与技术专业 2011-2014 普元信息技术股份有限公司, 资深架构师（云计算大数据方向） 2014-2015 平安健康保险股份有限公司, 资深架构师 2015-Now 普元信息技术股份有限公司, Chief Architect 专利 ZL200610081402 采用小区动态划分技术的对等网络系统实现方法 CN201210555384 基于云计算架构实现复杂事件处理的系统及其方法(已授权) CN201310713949 复杂事件处理云平台事件分析引擎容量评估的系统及方法 (已申请) CN201410279588 基于在线计费环境实现模拟收发设备信令的系统及方法 (已申请)","tags":"pages","title":"About"},{"url":"http://yanjiong.wang/page/license","text":"This work is licensed under a Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License","tags":"pages","title":"License"},{"url":"http://yanjiong.wang/article/2016/03-11/PowerfulAndPersonalExperience","text":"「体验」和「个性化」，经常同时出现。但很多时候，我们依然可以看到很多产品营销，喜欢采用「功能强大」的秀肌肉方式。 「功能强大」已经不属于这个时代的营销理念 也许用户并不需要（看到或者用到）那么多功能，也不需要为哪些用不到（对用户不会产生价值）的功能买单 「功能强大」其实是产品制造方「一厢情愿」的陈述 「功能强大」反映了产品设计师的内功，但产品每次都以「秀肌肉」的方式在大街上示众，是没有任何美感的 「功能强大」的例子 Linux Shell， 命令行几乎可以解决所有的问题 Android，用户几乎可以完全自定义自己的移动设备 「伪个性化体验」的例子 马屁精 「功能强大」的弊端 功能强大，意味着用户在「无数」的「功能」面前不知所措，不知道需要如何组合这些功能才能解决，用户遇到的现实问题 功能强大，不知所措的用户站在产品面前，是「渺小」的，无能力为的 「功能强大」并不能直接产生「使用价值」，用户默念道：「你的价值，我不懂」 真正的「功能强大」 功能强大应当深藏不漏，收敛内功。 功能强大，应当满足「适时而变」的特征，以不变应万变才是王道。 有力支撑「个性化体验」 什么是「360度无死角」的「个性化体验」 产品可以理解用户的切实场景 产品可以知道用户想要完成的目标 产品可以不需要用户额外的学习和求助，实现心理目标 「个性化体验」是柔是表，「功能强大」是刚是本 对于用户而言，只需要请「这个产品」直接帮我又快又好又便宜一劳永逸的解决问题 对于用户而言，不需要翻看复杂的「用户手册」摸不着头脑 「功能强大」是不懂用户的表现，是用户和产品之间的「鸿沟」 柔表刚本 「个性化体验」就是产品「懂」用户 用户要的，是一个有着「个性化体验」的「功能强大」的产品 ** 每一个「功能强大」的产品，都需要有「个性化体验」来产生产品的「使用价值」** 已经有Linux CLI和GUI的故事 已经有iPhone的故事","tags":"Design","title":"「功能强大」和「个性化体验」"},{"url":"http://yanjiong.wang/article/2016/02-22/TangYuanInsightArchitecture","text":"什么是架构 所谓架构，就是解决「人所遇到的问题」(简称问题)的办法。 采用什么办法解决问题，和客观的条件有关，也和当事人有关。 因此，办法会有很多种，背后所体现的理念会有不同，折射出的是不同的价值观。 什么是「好」架构 「好」架构，应当是对架构使用人「简单」并且「通用性强」，可以解决「很多」人的类似问题。 「好」架构，应当因地制宜，不要求额外的增加使用人的负担（比如额外采购设备，学习新的知识），增加使用人的使用成本。 老一辈交代的煮汤圆方法（煮汤圆的传统架构） 这里所描述的煮汤圆的方法，可能只是传统煮汤圆的方法之一，大致过程描述如下 取一锅干净的冷水 把冷水煮开 把适量的汤圆放入锅中 等水再次烧开 加入冷水，以保持汤圆不被煮破 重复第4/5步若干次 汤圆变熟，捞出享用 一定还有更多方法，因为煮汤圆的过程，和锅有关，和水有关，和火力有关，和被煮的汤圆数量和大小有关，不可避免的煮汤圆的人有关，等等等等。 老一辈交代的煮汤圆方法好不好（煮汤圆的传统架构好不好） 好。理由是： 对于汤圆怎么被熟的质变过程不需要了解（不需要了解物理原理） 可视化的温度，水煮沸了，就说明温度到达100摄氏度（一个标准的大气压条件下） 对于煮汤圆的设备不需要额外添置（常见的水、锅、煤气灶就可以） 整体过程容易理解，实际操作性强（烧开加水的重复过程，三岁小孩也许都会） 煮汤圆的目标（Why,好吃有卖相） 直接目标是煮熟（基本前提） 问题是，熟是一个定性非定量的修饰词。熟，需要能够被量化，量化之后才能被管理。 于是熟的量化标准之一常常会被提及：汤圆至少要浮于水面之上。 可问题又来了，浮在水面之上的汤圆不一定能保证在咬开之后，里面的馅料也是熟的。 于是前辈们，还会告诉我们，等待汤圆略微发胖，这是提高汤圆馅料变熟的有效量化标准之一。因为胖，是肉眼可见，是可被量化管理的对象。 间接目标是不煮破不煮糊（还得有卖相） 由于汤圆的外部材料主要是糯米，糯米遇到水之后，尤其是沸水，会发生结构分解（是不是分子，因为作者不是食品和高分子学专家，不能细讲，也不能乱讲），其最终结果就是煮糊了，也就是糯米和水完全融合了在一起，汤圆已经没有了型。 因为怕煮烂，所以老一辈会特别强调，加入反复加入冷水，让水保持在似开非开的状态。 这种方法，一方面是保持煮汤圆所需要的温度，一方面是降低沸水所造成的汤圆不必要的翻动，避免加速汤圆煮烂。 把煮熟汤圆「好吃」的关键要素（What,根据现象看本质, 什么是煮汤圆） 热能 热能，是使汤圆从生到熟发生变化的核心、必要条件。没有变熟所需要的热能，并保持在合理的温度，汤圆静静的放在那里，永远不会变熟（但可能会变质）。 时间 时间，是控制汤圆发生质变的必要条件。时间需要和温度配合，才能达到让汤圆变熟的目的。 潜意识的基本假设 不管多少类型的汤圆，大小基本固定，一般条件下，手工汤圆的大小，要比速冻机械制作的汤圆大一圈。 被忽视的核心要素 汤圆在被煮前的基本物理条件，是直接从冷冻室内取出，还是常温。 需要注意的是，沸水和汤圆糯米外皮的物理接触，是热能的第一道传导方式。汤圆的糯米外皮和馅料，是第二道传导方式。 糯米外皮与馅料的热传导方式相比把水煮沸是缓慢的，换句话说，糯米皮和馅料，是热的不良导体，导热性能比水差。 同时，冰冻的馅料变熟所需要的热能要比常温馅料的多，但热传导的效率基本不变。 在冰冻的状态下进行直接加热，势必造成加热的时间变长，这样一来，汤圆的糯米更容易发生煮烂，如果还采用翻滚的沸水煮，很难避免汤圆煮烂、馅刚熟的情况发生。 所以，在煮汤圆之前，最好把冰冻的汤圆从冰箱取出，在室温下放置一段时间。 到底要如何煮汤圆（How,重新架构煮汤圆） 煮汤圆的基本概念 汤圆本身、一次煮汤圆的总体数量、锅的容量、热源功率、热源功率的可条件范围。 煮汤圆的领域分解 原材料供应商（汤圆） 煮汤圆平台-热能供应商（天然气灶、煤气灶、电磁炉、电陶炉、煤球炉、煤油炉、烧柴火的灶等等） 需要注意的是：这些热提供商的性能指标并不相同。比如，热功率（单位时间所提供的热能）提供热能可调节的范围。 作者直观感受是：现代化的天然气灶、煤气灶、电磁炉，热功率可调节范围要大于煤球炉和烧柴火的灶。 煮汤圆平台-恒温水容器供应商（水和锅） 高中物理，告诉我们，水的比热容是很高的。所谓比热容，说的通俗一点，就是温度升高一度，所需要的（热）能量。 所以，一个大锅里盛满的沸水，要比一个小锅盛满的沸水，所储藏的（热）能量多。 煮汤圆平台-熟汤圆交付集成商（煮汤圆的人） 煮汤圆的人，首先要评估要煮的汤圆有多少，热能的获得方式是什么、可调节性有多强，锅有多大、里面可以放多少水。 煮汤圆的基本流程 用锅把水烧开 下生汤圆，以最快的速度把水加热并接近沸点（接近水的沸点） 在一段时间，保持一定的水温（接近沸点，避免沸水翻滚以保持汤圆卖相），直至变熟（汤圆上浮和变胖） 又快又好把汤圆煮熟（最佳实践） 找尽可能大的锅 大锅，意味着可以放更多的水。在把一批汤圆放入到沸水中之后，由于汤圆和水会直接发生热交换，导致水温降低，水的温度直接从沸点下降。 举个极端的例子，在正在煮沸的一锅沸水中加入一滴常温的水，那么整个锅里的水，还将是煮沸的状态。原因是： 一滴常温水，变成沸水的所需要的热量，热能提供商（比如煤气灶）可以快速提供。 沸水的流动性，使得沸水和常温水的物理接触面增多，热交换速度变快。 这个极端的例子告诉我们，由于一滴水加热至沸点的能量，远小于蒸锅沸水的能量，所以蒸锅水在此过程中，水温基本不变。 回到煮汤圆的场景，大锅意味着加入常温的汤圆水温下降会变少。 持续的高水温，有利于提高热传导的进行（势能差越大，能量交换越快），有利于缩短煮熟汤圆的时间，保持汤圆的卖相。 把热源的功率发挥到最大 快速提供热能，使放入生冷汤圆的之后水温迅速提高，需要两方面的配合: 把热源开到最大（例如，把煤气灶开大火） 增加火和锅的接触面积（选择平底锅和煤气灶，并把锅底放在煤气灶的火焰温度最高的外焰位置） 保持准沸水的水温 保持略接近于沸水的水温，获得最高效率的热传递同时，避免水的翻动导致汤圆解体。 煮汤圆的锅，自身是具备一定散热功能的（在没有热源加热的情况下，水会停止沸腾和逐渐冷却至常温） 在热源最小输出热能的情况下，需要加入冷水，才能保持水温在沸点以下，避免不必要的水沸腾动能释放，引起汤圆破相。 非常规的花式煮汤圆秘籍（聪明人秀才艺） 在家煮汤圆不反复加水 前文所提到的，保持水温似开非开，是达成快速、不破相煮汤圆的必要条件。 在当煮汤圆的装备得到技术革新之后，我们可以做到把热源功率变小，平衡锅自身散热和热源供给的平衡。 同时，可以把锅容器，替换为玻璃材质，例如采用全玻璃锅，采用热功率无级可变的燃气和电气炉具。 这样整个煮汤圆过程全程关上盖子，水蒸气蒸发所带走的热能，也能看到水是否被煮开。 在实际操作过程中，只要保持水微微有些被煮沸，不对汤圆产生结构性破坏力。温度的用肉眼量化，结合控制火力大小的闭环控制。 这样做的好处是，增加了煮汤圆的机械化可能，减少了过程中，对于加水这一环节的依赖，减少了对水的需求，增加了能源利用率。 饭店煮汤圆「生熟混煮」 当然，控制水温的另外一个方法是，把加水，替换为加「生」汤圆。 这种方法，对于执行人的个人素质和能力要求更高，需要相当的实际操作经验。 其实，笔者相信，摄氏99度煮出来的汤圆，也是「熟」的。 智能煮汤圆产品设计（延伸阅读） 这里要表达的是，技术其实是可以给业务带来革新。 煮了一辈子汤圆的人（业务方），可能一辈子都不会提出「智能」煮汤圆的技术需求。 设计理念: 煮汤圆应该是不需要操心的，我只要「好吃」和「卖相好」的汤圆。 食客（吃汤圆的人）只要买来汤圆，把汤圆投进煮汤圆机里，在汤圆被煮好的情况下会自动提示食客来享用，甚至自动放到碗里。 突破技术限制 技术限制: 识别汤圆馅变熟 目前被传承的量化方法是「上浮」和「变胖」 目前需要最佳实践帮助和知道的是：上浮之后再煮多久 技术突破: 数字化汤圆馅变熟的技术指标 定位汤圆（因为水和汤圆的混合物，密度不一样） 判断汤圆馅料的温度（在前一步的基础上，采用热感应?超声波频谱?的方式(请原谅作者对于这一领域缺乏了解)） 恒温控制，保持水温接近于沸点但未到达沸点，避免由水的沸腾导致破相（笔者相信「99度」也能煮「熟」汤圆，当然这是在一个标准大气压的条件下） 降低数字化成本，以控制产品的整体成品，使其变为消费品而不是概念产品或者奢侈品。 口碑营销 消费者惊奇的发现，「智能煮汤圆机」其实还能煮馄饨、煮饺子...","tags":"EnterpriceArchitect","title":"从元宵节煮汤圆看架构的识别与设计"},{"url":"http://yanjiong.wang/article/2016/01-29/PUMLMacOSXAtomEditor","text":"Atom的插件: plantuml-viewer 它支持 对 plantuml 文本直接进行进行预览，不需要依赖 plantuml.jar 支持另存为 svg , eps , png 基础环境 brew cask brew install caskroom/cask/brew-cask pandoc brew install graphviz 编写与预览 Atom brew cask install atom Atom 插件 plantuml-viewer language-plantuml 不推荐的Atom插件 plantuml-preview 理由: 还需要依赖 plantuml.jar , 它在这里 其他相关 Chome Extension: PlantUML Viewer ，它实际上使用的是 PlantUML Server 进行图片的实时生成 支持中文，但字体渲染不够好 首行必须是 @startuml ，否则无法阅览 Firefox Add-ons: 暂时未找到 基于IntelliJ IDEA的扩展: PlantUML integration Eclipse Plugin 效果","tags":"Efficiency","title":"用Atom在Mac OS X 下编辑PlantUML"},{"url":"http://yanjiong.wang/article/2015/12-31/AutoRepair4SEnterpriseSoftwareEvolution","text":"汽车已经成为中国大城市家庭出行主要方式之一，随之出现的大大小小事故，可能每位车主都会经历。 如果出现一次多方事故，责任方，交警，保险公司，一定会成为事故处理的必要成员，很多时候定损中心也是大概率出现的主角。 一站式修车（定损，维修，理赔），目前对于无责方而言，仍是困难重重。 差评级汽车4S店维修服务 这里，只聚焦维修过程，来看看「差评级汽车4S店维修服务」,背后折射出多少汽车服务行业管理水平与汽车服务企业软件的支撑力不足。 首先，来体验一下一次真实的「差评级」的维修服务，涉及的汽车品牌则是德国三大汽车制造商巨头之一： 车主在送车维修（维修部位为倒车雷达）过程中，在4S店的等待时间过长。 车主在根据维修服务合同，准备取车前，2次主动电话联系4S店以确认准确的提车时间，都无法直接联系到接待专员。 在上述每次沟通过程中，4S店接线员都需要询问车主姓名、被修车辆车牌号、联系电话以及接待的维修服务顾问姓名。 当车主提车之后，车主以绝对信任的心态直接把车开走（没有对维修部位做复查），但在上路之后，发现需要更换新的倒车雷达竟然没有安装。 车主返店再维修过程中，店方无人主动接待，依靠车主自己根据回忆服务专员脸部特征、体貌特征，人肉找到服务专员，进行投诉。 以上几点，处处都体现了企业的管理水平不到位，企业软件支撑不到位。 要强调的是，软件对于传统企业来说不是技术，而是帮助企业业务运营和流程管理的有力工具。对于汽车制造商、服务商而言，软件使用成本则占企业运营总成本的一小部分。 企业软件架构升级方向 对于各大品牌的汽车4S店来说，改进客户体验，保证乃至品牌形象，已经成为企业经营不可或缺的一环。从企业软件角度，至少可以有以下改进： 汽车品牌商，以公有云为基础，统一各个4S店的各个内部信息系统，例如电话语音、客户管理、维修管理等等。每个4S店都将成为公有云的租户。 打通内部信息系统，例如IVR(Interactive Voice Response, 互动式语音应答)系统、CRM(Customer Relationship Management, 客户关系管理系统)、车辆维修系统，实现对客户身份的即时识别。 增加手持移动设备（例如智能手机、平板电脑）的支撑（如喷漆钣金之类的维修项目）需要做到接待专员的（维修前before，维修后after）拍照存档，提高向客户交车前的质量保障水平。这也是移动化改变业务流程的典型场景。 打通内部系统与互联网公众账号运营，增加客户自服务能力。例如，客户不需要打电话查询维修车辆的维修进度、提车时间，减少客户与服务商的无效沟通成本。 汽车服务企业，可以通过与互联网社交平台的对接，实现修理过程透明化，每个关键环节都可以有数字照片直接通过社交平台推送给客户。 与互联网消费者服务评价平台对接，实现客户满意度向企业运营决策层的消息直达，减少满意度由第三方转述的信息丢失与走样。 可以看出，传统服务行业，在移动互联时代，传统服务性行业的企业软件已经滞后于社会信息化发展。 云计算与移动化，企业内部多系统实时数据互通，内部系统与互联网社交平台的集成，已经成为改善传统服务行业客户体验的必然之路。 传统企业的软件架构，背后折射的是企业整体的业务管理水平；企业业务的升级，需要背后企业软件架构的升级。","tags":"EnterpriceArchitect","title":"从「差评级汽车4S店维修服务」看汽车服务行业的企业软件发展空间"},{"url":"http://yanjiong.wang/article/2015/11-09/TheOperationableEnterpriceITPlatform","text":"平台生产力 技术成本 学习成本 使用成本 维护成本 沟通成本 业务与技术团队沟通 技术团队内部沟通 业务价值 业务需求交付速度 业务创新力支撑 平台可运营评价维度 人员素质可发展 技术架构自主性 业务支撑连续性 上下游协作友好 管理制度平台化 平台产力提升途径 平台自动化程度 代码生成 文档生成 上下游协作流程 协作自助化程度 生产资料获得方式 社会化提问与答疑，质量与影响范围量化评估","tags":"EnterpriceArchitect","title":"可运营的企业IT平台"},{"url":"http://yanjiong.wang/article/2015/10-30/RSTMacOSXAtomEditor","text":"基础环境 brew cask brew install caskroom/cask/brew-cask pandoc brew install pandoc 工具 Atom brew cask install atom Atom 插件 language-restructuredtext (预览首选) rst-preview-pandoc (预览备选) rst-preview 设置 rst-preview-pandoc 设置 pandoc path , 通过 brew install 的工具，一般都位于 /usr/local/bin 采用 rst-preview-pandoc 时，可以忽略 Bugfix 1 在设置 pandoc path 后，应当不会出现 Bugfix 2 Bugfix rst-preview Live preview not working Atom 1.0.11 ~/.atom/packages/rst-preview/lib/rst-preview.coffee # line 76-77 # grammars = atom.config.get('rst-preview.grammars') ? [] # return unless editor.getGrammar().scopeName in grammars Workaround on OSX for pandoc could not be spawned error ~/.atom/init.coffee process.env.PATH = [\"/usr/bin\", \"/usr/local/bin\", ].join(\":\") 效果","tags":"Efficiency","title":"用Atom在Mac OS X 下编辑reStructuredText"},{"url":"http://yanjiong.wang/article/2015/10-19/TraditionalVsInternetEnterpriseSoftwareValues","text":"从单个计算机到互联网 在中国大陆，计算机有一个更为形象的名字，电脑。从字面可以看出，它是一件帮助人类进行思考的机器。但决定计算机思考什么，如何进行思考的，就是程序。 把人类脑袋中的可重复的、机械性的脑力劳动，变为机器可重复执行的程序，这个过程就是软件过程。 在计算机诞生之初，它所要解决的问题是科学计算，也因此得名计算机。可以想象，一个计算机的计算能力是有限的，但有了计算机网络，使得成千上万，乃至上亿的计算机可以协同工作，并形成更大的计算能力，也就为解放人类机械性脑里劳动，带来了想象空间。计算机也从科学家手里，走进了如今的平常百姓家。 要让计算机为普通百姓服务，从衣食住行医多方面提高人们的生活质量，其先决条件是信息化。信息化，是将一件事情或者一个物品或者一个时间或者定量货币，以数字化的方式精确量化下来。随着计算机硬件的不断发展，整个社会的信息化成本逐步降低。从而，人与人的通信、交易过程方便的可以信息化，并在此基础之上形成如今的各种面相个人的互联网产品：例如，社交应用、电子商务、第三方支付、个人信贷平台。 ### 现今的互联网特征 现在的互联网公司是以轻资产行业——除了计算机及网络本身，不需要其他生产工具的行业——为切入点，以数字化逐步改变了人的沟通方式、人的消费方式，乃至生活方式。 如今互联网公司普遍具有以下三个特征： 面向个人消费者（B2C） 由于用户基数大，以计算机（含网络和存储）为生产工具的互联网公司，为单个用户服务的边际成本低，并且规模效应大。 轻资产距离实体经济较远 无论是蓬勃发展的社交应用（微信、微博），电子商务平台（淘宝、京东），还是个人金融（P2P金融），都远离消费品制造本身。即便是电商平台，与实体密切相关的是自身仓储信息化，物流环节则是和合作伙伴公司进行信息系统对接。电商平台，绕开了消费品诞生最为复杂的生产制造环节。 经营虚拟对象 无论是淘宝、或者大众点评，在显而易见的商业交易背后，有着对个人主观感受、人际关系这些虚拟概念的经营，并将其与商业过程进行良好无缝的融合，促进个人消费市场生态的良性发展。即便像是百度、谷歌这样的搜索行业寡头，也是以广告、产品推广作为盈利模式，根本上还是通过技术手段尽可能拉近买卖双方的距离。 所以，互联网公司的生产资料是一些看不见、摸不着的\"关系\"，这也导致了互联网所极力倡导的用户体验，快速交付。因为这些生产资料，任何一家公司都可以触手可及，唯有与众不同和贴心，方能获得用户的长期青睐。 传统行业的企业信息系统 在传统行业里，有三大社会基础设施类行业的系统建设规模较大，它们是金融、电信、能源行业，每个企业所拥有的应用系统数量是成百上千，单个企业所使用的计算机规模也在数万至百万，或者更多。 放眼传统金融行业，例如银行、证券、保险等细分行业，信息系统也是企业的核心生产工具。与第三方支付平台不同，商业银行有着社会基础设施的不可替代性，导致了其信息系统建设理念与互联网公司有着天壤之别，因为数据既是货币，所有交付行为都通过系统完成，所以其宗旨是在以账务为核心的会计准侧下，确保稳定、可靠零差错。 电信、能源，都是以国家级重资产投资为核心的基础行业，其业务模式较为稳定，行业竞争性弱，主要受国家政策影响大。这类行业的信息系统主要解决两个方面的问题，重资产（数亿计的电信设备、电力设备）的信息化管理维护，面向个人与企业的业务营销，账务核销。 为什么其他诸如工业制造行业的大公司（比如美国通用电气，德国西门子，德国大众汽车）信息系统并没有得到普通大众的关注呢？一个重要原因就是实体本身对一个行业业务模式变化的牵制作用。以汽车制造为例，其主营业务是设计和制造整车，信息系统的主要作用是一方面对物料、排产、供应链进行管理，另一方面对主营业务起支撑或者提高跨部门、供应商协作效率的作用。可以想象，并不会因为IT系统的一次变更上线，就直接诞生一个汽车的新产品，但很有可能是打通了来自于最终用户的个性化订单这个渠道。但在如今的互联网行业，一次IT系统变更上线，就可能具有行业的颠覆性。 面对实体经济，面对工业制造行业，信息系统并不能像互联网一样，具备核心生产工具的地位。工业4.0和物联网，所涉猎的信息系统变革，其效果是加快企业对市场、对最终用户使用效果的感知，加快企业内外部实体多维度状态的感知，提高企业内部和上下游厂商的协作效率，从而整体提高社会实体经济的生产效率。 ### 重视软件交付过程 通常一个具有人机交互功能（也就是带可视化操作界面）的企业信息系统，称之为应用系统。一个最简单的应用系统会包含前端可视化操作界面（Web）、后端业务逻辑（Service）、底层数据库（Database）以及存储（Storage）三个组成部分。将这样一个应用系统交付给企业内部的员工进行使用，以传统的软件工程方式进行建设，需要经过软件生命周期的六大阶段：需求分析、架构设计、编码实现、测试验证、上线运行、后期维护。 对于复杂的应用系统，架构会变得更加复杂。这两者之间的差异，有着类似单间平房与摩天大楼的区别。其建设方法，制造工艺，也有显著区别。 对于一个复杂应用系统，可能由不同的团队协作完成。这和建筑行业有负责基建、负责内部装修的不同工程承包商类似。每个工程分包团队只完成其专业领域的那部分，工程整体由总承包商进行统筹管理。 对于一个复杂应用系统，可能采用一些通用的技术组件。这和建筑行业有不同标号的水泥，螺纹钢筋、光圆钢筋等不同规格类似。物料供应商则根据国际国家标准进行批量标准生产。在IT行业，这种通用组件则被称为中间件或基础软件。它的通用性并没有国际国家的强制标准，一般都以某一产品领域寡头的实施标准作为参考依据。 而被非IT行业所广为熟知的程序员，则是编码实现这一环节的生力军，这一环节负责把业务需求变为代码，从而实现系统的业务功能。鲜为人知的架构师，则需要从业务需求、功能开发、测试验证、后期运维等多角度确定系统的基本框架，犹如确定一幢高楼大厦的主体结构。 可以发现，人是信息系统的制造者，不同资历的从业人员，所交付的信息系统质量会有所不同。这类似实木家具的手工制作过程，不同技艺的工人，所制作的家具精致程度不一。 虽然可以有方法论、软件工程学来指导和规范软件交付的过程，但软件最终是为一个企业或者组织提供相匹配服务，不同的行业特征、不同的信息技术发展时期、不同的组织结构、不同的系统建设方式，导致了世界上找不到两个一模一样的最终交付使用的信息系统，就好比世界上找不到两片一模一样的树叶。 软件价值观 互联网公司 互联网公司的系统作为生产工具，一般都由自己员工进行开发、测试、维护。对外采购行为大多集中于主机、网络、存储等硬件设备。对于系统建设的理念是自主可控，为的是拥有极佳的业务变更适应性。另外，从互联网公司的业务视角出发，其信息系统可以根据行业特征进行优化，一般不采购上文所提到的中间件或者基础软件，大多使用免费开源的软件框架。 传统行业 传统行业的信息系统，作为业务支撑平台，一般都以自有信息化部门牵头招标，以对外采购软件产品配合系统集成商服务，对中间件产品进行二次开发，从而实现业务功能的交付。企业主体通常不具备自开发能力，依赖于外部资源。从软件生命周期角度，开发、测试、运维三大团体也很有可能分属不同的集成商，甚至是外包人员。 投资构成比较 以同样的投资成本，互联网公司愿意使用零成本的开源中间件和100%的人力成本，进行系统建设。而传统企业，则会使用90%以上的投资进行对外产品和服务采购，余下的10%则作为甲方的信息化办公室团队人员成本。 即便是互联网公司所提出的去IOE（IBM, Oracle, EMC）口号向传统行业蔓延，但传统行业所需要的人才储备却远远跟不上转型需要。 信息技术的社会价值 互联网＋／ 工业4.0 对于传统行业，\"互联网＋\"或者\"工业4.0\"更多层面是引导以信息化优化生产过程，提高生产效率，不可能也不能照搬互联网以计算机系统作为生产工具的行业模式。 \"大众创业，万众创新\" 轻资产的互联网经济，已经被发展十余年拥有雄厚资金实力的互联网公司所操控。新想法，新创意可以被他们轻易复制和超越。 创业和创新的社会环境，面对普通大众，也许成功的只有彩票级的概率吧。 社会老龄化与延迟退休 中国社会老龄化已经是一个不争的事实，其导致的问题是社会青壮年所创造的社会财富无法供养不参与社会劳动的老年人。 直观的做法是以劳动人口数量直接来弥补社会劳动力的缺失，以创造足够的财富供养老人。 中国劳动人口基数庞大，如果信息化手段能够提高社会生产效率，也许能够降低延迟退休政策所引起的群体排斥心理。","tags":"EnterpriceArchitect","title":"传统企业与互联网企业的软件价值观"},{"url":"http://yanjiong.wang/article/2015/10-18/MacOSXEnvironment","text":"Mail Mail.app Browser Chrome (Extensions) SwitchyOmega 1Password AdBlock Plus Evernote Chrome (App) Postman Gliffy ProcessOn Firefox (Adds-on) Firebug FoxyProxy Firegesture 1Password AdBlock Plus Evernote RSS Reeder 3 Editor & IDE Sublime Text Atom Mou / MacDown BBEditor IntelliJ IDEA PyCharm Version Control SourceTree Cornerstone DataBase Navicat Notebook Evernote Security 1password Efficiency Alfred Powerpack Spectacle iTerm2 zsh + oh-my-zsh Homebrew + homebrew cask RamDisk Automator Shell Socks5 socat / netcat Synchronize Dropbox Calendar LunarCal Fantastical Remote SecureCRT CoRD","tags":"Efficiency","title":"Mac OS X环境"},{"url":"http://yanjiong.wang/article/2015/10-16/pelican-toc-plugin","text":"插件准备 使用 extract_toc 执行``git clone https://github.com/getpelican/pelican-plugins .git`` 修改配置文件 文件： pelicanconf.py 指定插件目录 PLUGIN_PATHS = ['<your_path>/getpelican/pelican-plugins'] 启用插件 PLUGINS = ['extract_toc'] Markdown标记 插入 [TOC] 标签，例如： title: Pelican TOC Plugin date: 2015-10-16 modified: 2015-10-17 tags: pelican category: pelican [TOC] ### 插件准备","tags":"pelican","title":"Pelican TOC Plugin"},{"url":"http://yanjiong.wang/article/2014/05-31/TakeTimeAsAFriend","text":"李笑来：《把时间当做朋友》 能力： 我们要努力，我们要坚持，我们要学习，我们要有志向，即使不是那么远大 欲望：守住自己的心 幸福=能力-欲望 我要的幸福： 我曾经历了许许多多，现在，我似乎明白了什么是幸福，在乡下恬静的隐居，尽可能对人们做些简单而有用的善事，尽管那些人们并不习惯我为他们做了这些，做一份真正有用的工作，最后休息，享受大自然，读书，听音乐，爱周围的每一个人。这就是我对幸福的诠释。在这些之上，有你为伴，也许还有我们的孩子，一个男人还能再渴望些什么呢？ ——列夫 托尔斯泰《家庭幸福》 I have lived through much, and now I think I have found what is needed for happiness. A quiet secluded life in the country, with the possibility of being useful to people to whom it is easy to do good, and who are not accustomed to have it done to them. And work which one hopes may be of some use. Then rest, nature, books, music, love for one's neighbor. Such is my idea of happiness. And then, on top of all that, you for a mate, and children perhaps. What more can the heart of a man desire? — Leo Tolstoy 《Family Happiness》 \"要管理的不是时间，而是自己。人们生活在同一个世界，却又各自生活在自己的那个版本之中。改变自己，就意味着属于自己的那个版本的世界将随之而变，其中也包括时间的属性。开启自己的心智，让自己能够用最可能准确的方式思考、观察、记录、总结、分享和行动，那么自己的时间就会拥有不同的质量，进而整个生活都必然因此焕然一新。\" //#心声#，对自己不满首先要做的是改变自己。 苏格拉底揭示所谓的思考过程不过是\"提问和回答\"。 而千百年后培根说得更加全面：\"读书使人完整，讨论使人完备，写作使人完善\"。 //#心声#现在真正读书的人比例不高，进而真正\"讨论\"而不是\"争论\"的人更少，能总结写博客的少之又少。\"微时代\"是个机器浮躁的时代，没多少人能够沉下心做大事。 \"没时间了\"，其可怕程度几乎无异于死亡。死亡是所有人都要面临的终极困境——没有解决方案的困境。...... 死亡本身其实并不可怕，面临死亡的过程才真正可怕。如此，就很容易地体会那些\"既勤奋又懒惰\"的学生，面临的是怎样的悲惨境遇了。......但是生活中明显有另外一些人——尽管数量上并不占优——在用另外一种状态生活。他们从容，他们优雅，他们善于化解各种压力，安静地去做他们认为应该做的事情，并总能有所成就。他们甚至可以达到常人无法想象的境界——不以物喜，不以己悲。 总的来说，一方面是自己的欲望无限，一方面是要完成的事情太多，一方面是自我满意度的不断下降——这就是人们总是不由自主地期望速成的根源。出路肯定存在，但这出路只有一个起点——接受现实。告诉自己：我有不足，我需要时间，我没办法一蹴而就。 积累多的人之所以稳健，是因为对他来说，\"我要\"的欲望可以用\"我有\"的东西来满足。即便\"我有\"暂时不够，他也能借助已经拥有的足够努力和勤奋（抑或投机取巧的方法和经验），只需假以时日，定能如愿以偿。一旦得偿所愿，不仅\"我有\"的更多，\"我要\"的也更容易获得，如此形成良性循环。 //#心声#，其实抑或投机取巧的方法和经验，我并不赞同。 尽管天分确实很重要，但一个人的能力主要靠积累获得。从一个人开始从事一个职业的那一瞬间起，只要足够认真、努力，他的能力就会不停地积累。如果这个人实际上向往的是另一个职业，那么他的所谓\"梦想\"几乎必然是他在当前这份职业上心不在焉、无甚积累。其实，世界上80%以上的职业并不过分依赖天分，更可能甚至几乎只依赖积累。天长日久，这个人的当前的职业中将逐渐落后于那些认真做事的人。但此时他不会因为自己的落后而奋起直追，反过来，更可能的是把\"反正我的梦想不是这个\"当做借口。 //#坚持·勤奋·认真# 越是不满现状，摆脱现状的欲望就越强烈，而这种欲望会让一个人最终迷失方向，因为无论是谁，从本质上看都无法摆脱现状——每一时刻的现状都是过去某一或者某些时刻的结果，而每一时刻的现状都是未来或者某些时刻的原因。没有人能够逃脱现实的束缚。 从某种意义上理解，\"逆境造就成功\"、\"磨难令人成熟\"之类的话纯属胡说八道。显然，在顺境中更容易成功，而且很多磨难根本没有必要——这更可能是失败者对他们自己一生都未曾有机会体验的成功及成功者\"意淫\"式的猜想而已。失败者永远没有机会了解成功的真相，因为人最容易受自身经验的限制，而不曾有哪怕一点点成功经验的人更无从摆脱自身的局限。 //引申到我的个人观点：没有必要去刻意吃苦，但绝对有必要能吃得起苦。 几乎一切愚蠢的欣慰都来自否定现实、逃避现实，只有接受现实，才可能脚踏实地，避免心浮气躁、好高骛远。如果我们把成功朴素的定义为\"用正确的方法做正确的事情，并在最后期限之前漂亮地完成\"的话，那么，大多数所谓的\"时间管理技巧\"实际上发挥不了多大的作用，只不过是花拳绣腿。真正有用的往往是简单而又朴素的道理，例如\"现实只能接受\"。 怎样判断所做的事情是否正确？核心只有一个：看它是否现实。 很多人一生都不知道自己究竟有多么不现实。之前提到的\"勤奋又懒惰\"的人群，基本上都是把这些现实当做老生常谈的道理——视而不见、听而不闻、从不记录、从不反省，才常常作出荒唐的决定，最终堕落到那分田地。 //现实——脚踏实地，稳扎稳打，步步为营 两点之间的最短距离是恶性循环。——墨菲拓扑定律 //这句话，也许对我曾经对很多人举过的一个例子的反面高度抽象。 为了实现一个目标A，可以借助旁人的力量，直接获得A。也可以通过自己的实践获得A，同时在这过程中收获方法B，副产品结果C。 这是实现自我价值提升的良性循环。#技多不压身# 事实上，那些真正能够做对、做好的人，绝不会随意嘲弄、打击别人，因为他们是做对过、做好过的人，他们一路走过来，心里非常清楚做对、做好有多么不易，所以，他们会不吝一切机会去鼓励那些尝试做事情的人。这甚至可以当做一种测试方法：如果一个人经常嘲弄他人，那只能说明他自己不怎么样；否则，他会想那些极少数已经做对、做好的人一样，给予别人真诚的鼓励而非嘲弄。尽管那些能做对、做好的人又是也会给出负面评价，但这些评价通常是\"建设性的负面评价\"，并不是为了获得优越感而发出的嘲弄。 所以，我们没有必要在意来自他人的、非建设性的负面评价。没有谁从一开始就能做对、做好。所有做对、做好的人都是一路磕磕碰碰走过来的，这就是生活常态。而动辄给出非建设性负面评价的人，往往不是正经做事的人，他们和那些正经做事的人身处不一样的世界，这也是生活常态。 //只见贼吃肉，不见贼挨打的现象的是非常普遍的；那些尝试做事情的人，是孺子可教的人，他们在努力，需要被鼓励，需要被肯定。 更重要的是，人在小时候没什么事情可做，就愈发感觉时间过的慢；随着年龄的增加，要做的事情越来越多，当然就愈发觉得时间过得飞快，稍纵即逝。由此看来，小孩子的感觉自然是\"那时候天总是很蓝，日子总过的太慢\"，而\"人生犹如白驹过隙，瞬间而已\"大都是老年人的慨叹，也是他们的切身感受。 //时间有限，精力有限，我们不能什么都想要。幸福=能力-欲望。 所有真正做事的人都知道，任何任务的绝大部分都是枯燥而又无趣的，所谓有创意的部分，可能连1%都不到。对此，我有切实体会。 //就像爬山，枯燥而无趣地拾阶而上，为的只是站在最高点欣赏一览众山小的壮丽美景。 但不是每个人都有毅力坚持到最后，也不是每个人都有能力坚持到最后。毅力需要培养，能力需要积累。 而培养和积累的过程会很漫长，会很艰苦，会感觉到累，这就对了，说明在向上走。 //往上走，即便是一小步，也有新高度。 //我也会向众人提起，\"我喜欢做有创意的事情\"，但，我会为了这1%去做99%的枯燥的事情。 实现目标之后，再设定下一个1%。这样，人生就丰富了，并且不是简单的丰富了。 做任何事情，学会思考方式最为重要。要学着像一个项目管理者那样思考——他们更多关注\"方法\"，他们会花费比别人多（多出许多倍）的事件去落实每一个步骤。 在做任何事情之前，通过关注\"方法\"去反复拆分任务，最终确认每个子任务都是可完成的，这是一个人不可或缺的功课。 这样的习惯，会使得一个人变得现实、踏实。 这既是一种习惯，也是一种后天习得的技能。这种技能无比重要，却常常被忽视，业务掌握这种技能的人总是默默地应用它，而忽视这种技能的人从未看到过它的具体实施过程和巨大好处。 //#授人以鱼不如授人以渔#，珍惜每一次被授人以渔的机会，好的方法是节省时间的方法。书是前人对思考的系统总结和归纳，书传授的是方法。从小我们就被熏陶\"书是人类进步的阶梯\"，但不一定真真理解。（这里的书不是指小说，虽然它有时候也具备一定这样的功能，但需要自己具备归纳总结的能力） 与所有人一样，从小自命不凡的我当然也给自己贴过各种各样的标签。我崇尚公正，向往自由，渴望平等，憧憬希望。在相当长的一段时间里，我感受到的是禁锢，体会到的是差距，意识到的是失望。我现在猜想，或许所有人都必然要经历这样一个阶段，不过只有少数人能够度过这一阶段。 直接来自感官的认识很容易与他人分享，而思想上的体验却往往难以用语言表达。 //#心声#，何况我语文又那么差。 在与计划相关的格言中，我最喜欢的是：\"我们不是计划着去失败，而是失败地计划\"。 所有真正执行到底的计划，都是因为其目标现实可行。 有人说\"计划总是没有变化快\"。这句话听上去挺现实，缺没说到点子上。计划总是被变化打乱的深层次的原因在于：计划过于长远。事实上，无论变化多快，计划总是要有的，只是在制定计划的时候，应该考虑到变化，应该以自身的情况分析自家究竟适合制定多久的计划。 做长期计划显然是正确必需的，但是，并非每个人都有制定长期计划的的能力。这种能力可跻身最重要的能力之位，拥有它需要挣扎、需要努力、需要从一点一滴做起。 不要上来就制定过长的计划。 哪怕制定一个星期的计划，都不是很容易的事情——实际做一下就知道了。 //当每本书看到接近于一半位置的时候，是最惬意的。因为可以把书妥妥的平放，不用手压，全神贯注地与作者交流。翻书的声音很悦耳。 计划固然重要，行动更为重要。 如果想做事，当然要行动。行动是改变自己的众多方法中最有效、最直接的方法。很多时候，只要开始行动，哪怕实现并无计划，往往也会有收获。但是反过来，缺乏行动的计划肯定没有任何意义。 如果想要改变自己，或者对自己目前的处境不满意，那就一切从简——找一个你觉得应该会带来改变的任务，然后去做就是了。不要怕碰壁，不要怕失败，那是必须经历的过程。失败并不可怕，因为人总是要失败许多次才会得到结果，况且全天下又不是只有你会失败，怕什么？达成目标的关键在于每次受到挫折之后能否汲取教训。只要能汲取教训，然后自我调整，那就是进步。我们一生所做的事，大都是在试错，对于人生，没有人能像解释数学或物理学那样给出普适的公式。 永远记住，马上行动是最重要的——尽管这句话已经被无数人所过无数次。 //有多少人，其实是被自己拖死的。如果没有勇气去接受失败，那么也没有机会去获得成功。曾几何时，有人对我的评价是执行力强，雷厉风行。 很多人常常拒绝学习，他们拒绝学习的理由和那些痴迷学习的人一样——不知道它有什么用。 如果说，车是人类腿脚的延伸——使人们走得更远，望远镜是人类眼睛的延伸——使人们看得更清楚，计算机是人类大脑的延伸——使人们算的更快......那么，学习就是人类所有能力的延伸——使人们拥有更多的能力，并且往往主要取决于你花费的时间与精力。 事实上，学习是投资回报率最高的行为。 //确实如此，每当觉得无所事事的时候，看看大家的文章，或者动动手写写与工作无关的程序，吸收营养，不管是经济、历史、传记、管理、经营还是其他等等。——我的理由是：不知道它现在有什么用，但一定会有发挥作用的时候。有很多例子在自己身上不断应验。 \"拒绝学习\"的例子。我曾多次劝我的一个朋友花20分钟学习一下命令行下的批处理方法，未果。他拒绝的理由是：\"现在谁还用命令行啊？早就是可视化操作系统的时代了！\" 我曾经多次劝我的另一个朋友花10分钟学习一下Google通配符的使用，未果。她说\"不用那东西也一样能找到自己想要的啊！\" 我曾替他们着急，可是后来却发现这是个\"死结\"。为什么呢？第一，拒绝学习就不可能有机会知道学习之后的收获；第二，由于不知道学习之后的收获是什么，也就不可能知道那收获有多好、多大；第三，既然对学习的好处无从了解，自然就没有学习的动力...... //这是一个恶性循环。未果，说明，人和人的沟通，有时候真的没有用。子非鱼安知鱼之乐。大家的知识背景不同，所能看到的视野不同，所得出的结论不同，总之，价值观不同。 \"学习\"的重要起点是：起码学会一种技能。无论这中技能多简单、多普遍，学会之后总是可以让学习者了解\"习得\"带来的大不同。一旦拥有了一个起点，学习的欲望就会像发芽的种子，无论多大的石头都压不住——它会越来越茁壮，越来越坚强。 其实，那些拒绝学习或者一不小心受了影响而把\"学习\"两个字妖魔化了的人真的非常可怜，他们每天都在挣扎着想要\"管理时间\"、\"珍惜生命\"、\"提高效率\"，却不知道他们因为当初不肯花十几分钟学习而导致其后少做了很多事情、错过了很多机会，并且连只有一次的人生都没有过好。 千万不要拒绝学习。 //不学习是多么的可悲！ 观察一下就会发现，日常生活中主要的\"沟通障碍\"本质上几乎都是由于沟通双方无法让对方理解与他们的经验相悖的知识或信息造成的。 不夸张的讲，目前几乎所有关于沟通技巧的书中提供的解决方案都没有真正说到点子上。 这种知识和信息传递中的问题，不是仅仅通过\"站在对方的立场上考虑问题\"就可以轻松、彻底地解决的。 尽管\"站在对方的立场上考虑问题\"确实是很有用也很难掌握的技巧，可当我们面对（或者说\"背对\"可能更准确一些）\"站在双方立场都无法考虑到的问题\"时呢？ 尽管这时我们甚至可能不知道问题究竟是什么，但有一点是确定无疑的——这种问题不仅确实存在，而且往往至关重要。 在我看来，所有教育失败的症结也在于此。在人们探索未知、寻求真理的时候，困难大都来自如何正确地理解\"与现有经验相悖的知识\" //如何正确理解\"与现有经验相悖的知识\"对我来说是个难题，对于我来说，现有经验=对，与现有经验相悖=错，除非能证明这个相悖的知识确实是对的，我才能接受。可是，在我不轻易放弃现有经验的情况下，怎么证明？（但不要忘了我是讲道理的） 自学能力的打造就是从我们认真对待它开始的。它就像恋人一样，你对它好，它才对你好。完全靠自己学一样东西吧——管它是什么，并且一定要学好，学到比相当数量的人都好。如果真的做到这个地步，那你就不仅是一个完整的人了，还是一个相当优秀的人。这时，你完全可以对自己说：\"你太有才了！\" 我个人的建议是去自学一门计算机程序语言，因为计算机程序语言的相关资源在互联网上分布广泛、极易获得，而且优秀的资源使用的语言往往是英语，这又顺带练习了英文阅读理解能力——想想吧，肯定不仅是一举两得。 //借用某人的一句话，程序员的语言只有英语，不服来辩。同时，作为一个可以改变生活，梦想改变世界的程序员，对这职业感到深深自豪。 很多人就是这样，坚持拒绝思考，然后用天下最累的生活方式而不自知。大哲学家罗素曾观察到这个现象，他为之奇怪并慨叹，\"很多人宁愿死也不愿思考\"，然后戏谑道，\"实际上，他们确实死得很快。\" //脑子不用跟没脑子有什么区别 一个人的强与弱，实际上相当于他的勇气减去他的恐惧之后的分值——如果是正数，那么他是强的；如果是负数，那么他是弱的。所有人的起点都是负数。但凡是人，都要经过很多的挣扎才能使这个算式的结果变成正数。并且无论是谁、无论这个人有多强，都不可能完全消除恐惧。勇气可能等于零，恐惧却永远大于零。 //人贵自知，勇气需要积累。 之所以在遇到尴尬时会冒出这样的念头（后悔），是因为太多人早就朴素地明白一个简单的道理：我们所面临的今天很大程度上取决于我们的过去。 //哈佛校训：你所浪费的今天，是昨天死去的人奢望的明天；你所厌恶的现在，是未来的你回不去的曾经。 //你珍惜今天了吗？ 读书，其实不见得一定要有目的，随意翻同样有益——有用的知识经常是偶然获得的。时间久了，我们就会发现，读书偶得的知识不仅多，而且非常重要，只不过因为很多人因为片面而又肤浅地理解\"人生应该有目标\"而失去了这些机会。 //观察，阅读，思考，总结，是提升自我的\"捷径\"。知识是眼界之基石。 方法固然重要，但是比起\"用过\"来说，方法几乎可以忽略不计。 //\"用功\"是一种坚持，一种质朴的力量，它可以使人抛开一切杂念，享受心灵的宁静。 所有学习上的成功，都只依靠两件事——策略和坚持，而坚持本身就是最重要的策略。 坚持，其实就是重复；而重复，说到底就是时间的投入，准确的说，是大量的投入。 //策略中还包含一项重要的内容：专注。三天打鱼两天晒网是万万不行的。而重复，也不是指简单的机械性重复，而是经过归纳总结的螺旋式上升。如果在一次又一次地重复的过程中，没有缩短时间，那么就是在浪费时间；而缩短时间的过程，就是找到方法，并不断优化。 其实，比成功更重要的是成长。如果\"成功\"是与他人比较的话，那么\"成长\"则是与自己比较——今天的我和昨天的我、明天的我和今天的我之间的比较。后一种比较显然比前一种对个体来说意义更大，也能够带来更加踏实的幸福感。 //每天成长一点点，时间会给出答案。不信？回头看看。 浪费时间、虚度年华的人，有一个共同的特征——拼命想控制自己完全不能控制的事物，却在自己真正能掌控的地方彻底失控。 相信运气其实是缺乏自制力的表现。 //我越来越相信，所谓的\"运气好\"，本质上是自身能力以及对周围控制力的综合作用的结果。使自己避免处于不确定因素中，以至于失去控制，听天由命，这本身就是获得\"好运气\"的必要条件。 \"相信我，所谓的人脉就算重要，也根本没他们说的那么重要。\" 这些公认为优秀的人，往往并不\"低调\"，也不\"平易近人\"。他们不是故意这样做的。他们无意去惹恼那些在他们看来\"平庸\"的人，只不过他们无形中有这样的体会：与这些人交流，沟通成本太高。这些人当中不多见的那些心态平和者，一般都是经历了波折，才终于意识到自己应该保护自己。他们发现，有些误会根本没机会解释。于是，他们开始\"谦虚\"，他们学会\"低调\"，他们显得\"平易近人\"。 //懒得解释 承认自己能力有限，是保持心理健康的前提。 \"量力而行\"是如此高难度的行为模式： 第一，承认自己能力有限； 第二，不怕在别人面前露怯； 第三，敢于不去证明自己是\"好人\" 从这个层面上讲，的确往往只有优秀的人，才会拥有有效的人脉。 而且，正因为这些人随时随地都可能要回避\"不公平交换\"的企图，他们会更加注重自身的质量，知道\"不给他人制造麻烦\"、\"独善其身\"是美德，这也体现了常言说的\"事多故人离\"。 //还记得那个公式吗？幸福=能力-欲望。独立，是立身之本。#不求人格自高# 有些资源很难靠白手起家获得，例如金钱、地位、名誉。然而，有些资源缺可以轻易从零开始积累，例如一个人的才华与学识。才华与学识，是一定可以通过努力获得的。一个人的心智能力一旦开启，只要正常地努力，并且有耐心和时间做朋友，很容易就能成为至少一个领域的专家。 努力并不像传说中的那么辛苦，说出来只不过是——每天至少专心学习、工作6小时。可是努力需要的耐心，却远比多数人想象中来得巨大，\"要与时间相伴短则5年，长则20年\"。 //在这个浮躁的年代，什么都急于求成，能坚持5年，10年，20年，潜心、专注、努力，凤毛麟角。而在此过程中所得到的感悟，并不是周围人能够理解的。#人需要信仰# 专心打造自己，让自己成为一个优秀的人、一个有用的人、一个独立的人，比什么都重要。打造自己，就等于打造自己的人脉——如果人脉真像传说中那么重要的话。 其实，我总觉得关于人脉导致成功的传说虚无缥缈，不过是些不明真相的人的臆造出的幻想罢了。 //每天晚上8点至10点——每天的黄金时间，在这个时间做的事情，决定了你的一生。 想做到\"不以物喜，不以己悲\"的健康状态，要迈出的第一步就是——停止嘲弄他人。嘲弄者必被嘲弄——这件事就是一个恶毒的魔咒。另一个比较\"技术\"一点的手段就是\"忘记自己的有点\"。很多时候，所谓\"谦虚\"和\"低调\"其实是一种自我保护的优化策略。 //要经常对自己说，别把自己太当回事，其实你什么都不是。 如果一个人把大部分的时间花在工作和学习上，那么他是以工作成就为导向的人；如果一个人把大部分的时间花在享受欢乐上，那么他是以生活满足为导向的人。每个人都不相同，有些人可以在工作和学习上获得更多的乐趣，有些人则会在生活琐事中获得更多的幸福。 所以，你需要确定自己是一个什么样的人。很多时候，鱼和熊掌缺失不可兼得——你必须选择。这也会使你非常清楚一个简单的事实：选择意味着放弃。选择做某件事情，可能就不能去做另外一件事情——哪怕你觉得可以一起做两件事情，实际上你已经不可能同时做第三件事情了。 这时候，黄金分割率可以作为一件趁手的工具。如果一天你可以规划的时间有10小时，并且你确定自己是以工作成就为导向的人，那就这也规划吧：用大约6.18小时去工作和学习，而用剩下的大约3.82小时去享受欢乐——毕竟你是一个正常人。反过来如果你确定自己是以满足生活为向导的人，那就这样规划吧：用6.18小时去享受欢乐，而用剩下的大约3.82小时去工作和学习——你毕竟还要想办法养活自己。 每个人专注的重点是不一样的。少数情况下，一个人可以专注到无以复加的地步——看看那些几天几夜打麻将的人，那些每天除了吸毒什么都不做的人，那些长时间坐在计算机前玩游戏的人就知道了。不过这些都是负面的例子。 某种意义上，我们不得不说，这也的人心智发育不是很健全，因为他们太容易满足并且仅仅满足于简单的感官刺激，而很少甚至无法感知那种需要通过复杂的劳动才可以获得的心灵上的愉悦。 //两种不同的生活导向，并不是一成不变的。两者存在相互转换，目的是使漫长的人生处于良性循环通道中。另外，可以注意到的是，不管是那种导向，都需要去学习，尤其是在当下，逆水行舟不进则退的时代。 很有可能，我们不知不觉就被这个社会抛弃了。我也十分赞同不能同时做很多事情的观点，即使可以并行做很多事情，那也是短暂的，毕竟能力有限、精力有限。 很多人半途而废，往往是因为把目标设定得太高，同时又对达成那么高的目标要付出的代价缺乏清楚的认识。这足以体现\"自知之明\"的重要性。我常常觉得，很多快乐是建立在\"自知之明\"上的。我知道自己的优点是什么，同时也知道自己的缺点是什么，所以，通常情况下，我不大可能做白日梦。 //我至今依然以为我是一个有自知之明的人，所以在做一个重大的决定前，我会花一定的时间去考察目标的高度，评估自身的能力，以及对周围的影响，从而找到一个平衡点。即便在外人看来，这个目标不是最高的，但也许是最合理的。 我们应该把自己的生活节奏调整的慢一点。 在一个所有人都匆匆忙忙的世界里，想放慢节奏实在是一件非常难的事情。但是我们应该记住的是：凡是值得做的事情，都值得慢慢去做，做很久很久。 //慢是一种奢侈，快是一种浮躁。不要想法太多却不切实际了，我们不能什么都想要。人生需要规划，人无远虑必有近忧。 真正的成功者，在关注\"开源\"的时候，会不吝惜金钱合理地\"节流\"；在关注\"开源\"的时候，也不会忘记\"开源\"的重要性。道理很简单：任何事情都可能\"物极必反\"。 //还记得正弦曲线sin(x)吗？大部分的事情都会有周期，我们也不可能一直得意向上，总会有失意的那一天。我们要做的只是储备能力，前进，向前，期待下一个顶点。不慌，不忙，笃悠悠，按照节奏来。 相信积累的力量，本质上就是相信复利的力量。 常言道\"习惯决定命运\"，说的就是这个道理。有些好习惯，养成得越早，一生的收益就越大。同理，坏习惯也是收复利的\"高利贷\"。 举一个很重要的例子：\"怕麻烦\"就是一种害死人的坏习惯。学习效果差，就是因为\"怕麻烦\"而造成了疏漏；工作成绩差，也不过是因为\"怕麻烦\"而偷懒所导致的。 甚至，可以说，只要仔细观察一下，我们就会得出这样的结论：很多人生活不幸，其实只不过是在作关键决策时因为\"怕麻烦\"而产生了失误...... 养成不怕麻烦的性格，才可能拥有耐心。耐心则是在任何工作、学习上获得成功的前提。 //事实上，性格决定命运。坏习惯就像慢性病一样，暂时看起来没什么事，等到并发症来的时候，无药可救。 //当然，很多人不怕死，因为他们无所谓，也不存在对未知的恐惧，觉得得过且过已经不错了。那这日子过的跟动物有啥区别呢？ 表情和神态是一个人内心的折射，几十年积累足以是一个人的内心变得\"不俗\"，于是，表情跟着\"从容\"、神态跟着\"睿智\"。 //所以，与新人接触，第一要看面相。#面相很重要#","tags":"BookReview","title":"把时间当做朋友"}]}